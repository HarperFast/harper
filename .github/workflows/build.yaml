name: Build

on:
  workflow_call:
    outputs:
      nodeVersion:
        value: ${{jobs.getNodeVersion.outputs.nodeVersion}}
      harperdbVersion:
        value: ${{jobs.getNodeVersion.outputs.harperdbVersion}}
    inputs:
      artifactVersionOverride:
        description: 'Override the version in the harperdb build artifact (to support forcedVersion in release_on_tag.yaml)'
        type: string
        required: false
        default: 'default'
      preferDownload:
        description: 'Download version from npm to go faster. Should only be used for testing workflows'
        type: boolean
        required: false
        default: false
      dummyLicense:
        description: 'Generate dummy license files to go faster (not for production). Should only be used for testing workflows'
        type: boolean
        required: false
        default: false
  workflow_dispatch:

jobs:
  getNodeVersion:
    runs-on: ubuntu-latest
    outputs:
      nodeVersion: ${{ steps.getNode.outputs.NODE_VERSION }}
      harperdbVersion: ${{ steps.getNode.outputs.HARPERDB_VERSION }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - id: getnode
        name: Get node version
        run: |
          pwd
          NODE_VERSION="$(node --version)"
          NODE_VERSION="${NODE_VERSION:1}"
          HARPERDB_VERSION=$(cat package.json | jq -r '.version')
          echo "NODE_VERSION=$NODE_VERSION" >> $GITHUB_OUTPUT
          echo "HARPERDB_VERSION=$HARPERDB_VERSION" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    needs: getNodeVersion
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ needs.getNodeVersion.outputs.nodeVersion }}

      ####################################
      #  Build HarperDB
      ####################################
      - name: Build artifact
        if: inputs.preferDownload != true
        run: |
          #!/bin/bash
          ./utility/devops/build/build.sh

      - name: Download Build artifact
        if: inputs.preferDownload == true
        env:
          harperdbVersion: ${{ needs.getNodeVersion.outputs.harperdbVersion }}
        run: |
          #!/bin/bash
          npm pack harperdb@${harperdbVersion}

      - name: 'Rename Tarball'
        if: ${{ needs.getNodeVersion.outputs.harperdbVersion != inputs.artifactVersionOverride && inputs.artifactVersionOverride != 'default' }}
        run: ln "harperdb-${{ needs.getNodeVersion.outputs.harperdbVersion }}.tgz" "harperdb-${{ inputs.artifactVersionOverride }}.tgz"

      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v4
        with:
          name: harperdb-${{ inputs.artifactVersionOverride == 'default' && needs.getNodeVersion.outputs.harperdbVersion || inputs.artifactVersionOverride }}.tgz
          path: harperdb-${{ inputs.artifactVersionOverride == 'default' && needs.getNodeVersion.outputs.harperdbVersion || inputs.artifactVersionOverride }}.tgz
          retention-days: 1

  ####################################
  #  Get License Files for Container
  ####################################
  generate-licenses:
    if: inputs.dummyLicense != true
    uses: ./.github/workflows/generate-licenses.yml

  upload-licenses:
    runs-on: ubuntu-latest
    needs: generate-licenses
    steps:
      - name: 'Generate dummy license files'
        if: inputs.dummyLicense == true
        run: |
          #!/usr/bin/env bash
          mkdir -p utility/Docker/licenses
          touch utility/Docker/licenses/not-for-distribution
      - name: 'Upload Artifact'
        if: inputs.dummyLicense == true
        uses: actions/upload-artifact@v4
        with:
          name: 'licenses'
          path: 'utility/Docker/licenses/'
          retention-days: 1

name: Build Offline Install Package

on:
  workflow_dispatch:
    inputs:
      updateLatest:
        type: boolean
        description: Update the latest version to the tar produced by this branch
        default: true
  workflow_call:
    inputs:
      updateLatest:
        type: boolean
        description: Update the latest version to the tar produced by this branch
        default: false

jobs:
  getNodeVersion:
    runs-on: ubuntu-latest
    outputs:
      harperdbVersion: ${{ steps.getNode.outputs.HARPERDB_VERSION }}

    steps:
      - uses: actions/checkout@v4
      - id: getnode
        name: Get node version
        run: |
          pwd
          HARPERDB_VERSION=$(jq -r '.version' package.json)
          echo "HARPERDB_VERSION=$HARPERDB_VERSION" >> "${GITHUB_OUTPUT}"

  build:
    runs-on: ubuntu-latest
    needs: getNodeVersion
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      - name: Build artifact
        run: |
          #!/bin/bash
          ./utility/devops/build/all-in-one-build.sh

      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v4
        with:
          name: harperdb-${{ needs.getNodeVersion.outputs.harperdbVersion }}.tgz
          path: harperdb-${{ needs.getNodeVersion.outputs.harperdbVersion }}.tgz
          retention-days: 1

      - name: Publish to s3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
        run: |
          #!/bin/bash
          set -ex
          aws s3 cp ./harperdb-${{ needs.getNodeVersion.outputs.harperdbVersion }}.tgz s3://products-harperdb-io

          if [[ ${{inputs.updateLatest }} == "true" ]]
          then
            aws s3 rm --recursive s3://products-harperdb-io/latest
            aws s3 cp ./harperdb-${{ needs.getNodeVersion.outputs.harperdbVersion }}.tgz s3://products-harperdb-io/latest/
          fi

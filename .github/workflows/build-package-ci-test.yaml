name: "Run Build Package CI Tests"

on:
  push:
    branches:
      - main
      - "release_*"
  pull_request:
    types: [opened, synchronize, reopened]
  schedule:
    - cron: '0 13 * * 1-5'
  workflow_dispatch:

jobs:
  ###################
  #  Build HarperDB
  ###################
  build:
    uses: ./.github/workflows/build.yaml

  #####################
  #  Create Instances
  #####################
  # Called twice to preserve outputs
  createInstances-amd:
    needs:
      - build
    uses: ./.github/workflows/create-instances.yaml
    with:
      instanceCount: "1"
      harperdbVersion: ${{ needs.build.outputs.harperdbVersion }}
      callingWorkflow: ${{ github.workflow }}
      instanceType: c7i.2xlarge
      tfstateArtifactName: "tfstate-amd"
    secrets: inherit

  createInstances-arm:
    needs:
      - build
    uses: ./.github/workflows/create-instances.yaml
    with:
      instanceCount: "1"
      harperdbVersion: ${{ needs.build.outputs.harperdbVersion }}
      callingWorkflow: ${{ github.workflow }}
      instanceType: c7gn.2xlarge
      tfstateArtifactName: "tfstate-arm"
    secrets: inherit

  ######################
  #  Register Instances
  ######################
  registerInstances:
    needs:
      - build
      - createInstances-amd
      - createInstances-arm
    uses: ./.github/workflows/install-and-register.yaml
    strategy:
      matrix:
        arch:
          - amd
          - arm
    with:
      publicDns: ${{ matrix.arch == 'amd' && needs.createInstances-amd.outputs.publicDnsNames || needs.createInstances-arm.outputs.publicDnsNames }}
      harperdbVersion: ${{ needs.build.outputs.harperdbVersion }}
      nodeVersion: ${{ needs.build.outputs.nodeVersion }}
    secrets: inherit

  ##########################
  #  Run Integration Tests
  ##########################
  runIntegrationTests:
    needs:
      - createInstances-amd
      - createInstances-arm
      - registerInstances
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch:
          - amd
          - arm
    timeout-minutes: 20
    steps:
    - name: Run Integration Tests on Instances
      env:
        CI_INSTANCES_PRIVATE_KEY: ${{ secrets.CI_INSTANCES_PRIVATE_KEY }}
        public_dns_names: ${{ matrix.arch == 'amd' && needs.createInstances-amd.outputs.publicDnsNames || needs.createInstances-arm.outputs.publicDnsNames }}
      run: |
        #!/bin/bash
        cd ../
        echo "$CI_INSTANCES_PRIVATE_KEY" > private_key && chmod 600 private_key
        # this is an env now: public_dns_names=${{ needs.createInstances-amd.outputs.publicDnsNames }}
        for public_dns_name in "${public_dns_names[@]}"
        do 
          echo "Starting work on: $public_dns_name"
          ssh -i private_key -o ConnectTimeout=10 -o ConnectionAttempts=5 -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=ERROR ubuntu@"$public_dns_name" \
                "sudo chmod +x /home/ubuntu/harperdb/test/ci-tests/ci-tests.sh && /home/ubuntu/harperdb/test/ci-tests/ci-tests.sh"
          echo "Ending work on: $public_dns_name"
        done
      shell: bash

  ##################
  #  Download Logs
  ##################
  downloadLogs:
    if: always()
    needs: 
      - runIntegrationTests
      - createInstances-amd
      - createInstances-arm
    uses: ./.github/workflows/download-logs.yaml
    strategy:
      matrix:
        arch:
          - amd
          - arm
    with:
      publicDns: ${{ matrix.arch == 'amd' && needs.createInstances-amd.outputs.publicDnsNames || needs.createInstances-arm.outputs.publicDnsNames }}
    secrets: inherit

  ######################
  #  Destroy Instances
  ######################
  destroyInstances:
    if: always()
    needs: downloadLogs
    uses: ./.github/workflows/destroy-instances.yaml
    strategy:
      matrix:
        include:
          - arch: amd
            instanceType: c7i.2xlarge
          - arch: arm
            instanceType: c7gn.2xlarge
    with:
      instanceCount: "1"
      callingWorkflow: ${{ github.workflow }}
      instanceType: ${{ matrix.instanceType }}
      tfstateArtifactName: "tfstate-${{ matrix.arch }}"
    secrets: inherit

  #######################
  #  Send Slack Message
  #######################
  sendSlackMessage:
    uses: ./.github/workflows/post-to-slack-channel.yaml
    if: ${{ failure() && (github.event_name == 'schedule' || github.event_name == 'push') }}
    secrets: inherit
    needs:
      - destroyInstances
      - downloadLogs
      - runIntegrationTests
      - registerInstances
      - createInstances-amd
      - createInstances-arm
      - build
name: 'Run Docker CI Tests with Node js'

on:
  push:
    branches:
      - main
      - 'release_*'
      - CORE-2498
      - CORE-2733
      - CORE-2733-2
  pull_request:
   types: [opened, synchronize, reopened]
  # paths:
  #   - 'utility/Docker/Dockerfile'
  schedule:
    - cron: '0 5 * * 1-5'
  workflow_dispatch:

jobs:
  ####################
  #  Build HarperDB
  ####################
  build:
    uses: ./.github/workflows/build.yaml
    # These values should only be used to debug the workflow
    # with:
    #   preferDownload: true
    #   dummyLicense: true

  #######################################
  #  Build Container Image and Run Tests
  #######################################
  dockerTests:
    needs:
      - build
    strategy:
      matrix:
        name:
          - 'standard'
          - 'openshift'
        include:
          - name: 'standard'
            file: 'utility/Docker/Dockerfile'
            tarName: docker-harper_${{ needs.build.outputs.harperdbVersion }}-${{ github.run_number }}-amd64.tar
          - name: 'openshift'
            file: 'utility/Docker/Dockerfile-openshift'
            tarName: docker-harper_${{ needs.build.outputs.harperdbVersion }}-${{ github.run_number }}-openshift-amd64.tar
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v4
      - name: docker-build
        uses: ./.github/docker-build
        with:
          harperdbVersion: ${{ needs.build.outputs.harperdbVersion }}
          containerImage: 'tar'
          dockerFile: ${{ matrix.file }}
          containerTarball: ${{ matrix.tarName }}
          buildPlatforms: linux/amd64

      - uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.tarName }}
          path: utility/Docker
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ needs.build.outputs.nodeVersion }}
      - name: Run Tests with Node js
        env:
          HDB_ADMIN_USERNAME: ${{ secrets.HDB_ADMIN_USERNAME }}
          HDB_ADMIN_PASSWORD: ${{ secrets.HDB_ADMIN_PASSWORD }}
          S3_KEY: ${{ secrets.AWS_S3_INTEGRATION_TEST_DATA_ACCESS_KEY_ID }}
          S3_SECRET: ${{ secrets.AWS_S3_INTEGRATION_TEST_DATA_SECRET_ACCESS_KEY }}
        timeout-minutes: 20
        run: |
          pushd utility/Docker
          docker load -i ${{ matrix.tarName }}
          docker image inspect harperdb/harperdb:${{ needs.build.outputs.harperdbVersion }} > /dev/null || exit 1
          popd
          containerId=$(docker run -d --name harper --restart=no -p 9925:9925 -p 9926:9926 -p 9943:9943 -p 9953:9953 -e HARPERDB_FINGERPRINT="4sADRM2e7dd501d7db58bb02d35bd0745146423a1" -e HARPERDB_LICENSE='{"license_key":"1373969b4cabd39e8b29c3c16e419c6abef4437d48168b4721e575610dcf656cf57016bd037cf1107f8232a1e94b7352c05b7c069560ac0e54ca156d3babc966289c664e5fb163e3429158a2f57afd39854ca51fa885abbca62f7e063a334498cd5ef0a038cbea80c6e063d174bbcc189a81dc4f2771ad90c9022cf20a322043ec4213fdef1d1e9eba36117c865acb6a13be3be218513ee80385e78bda0b9e27e7ec6532ac6e5416bc020f4f4be91cf6mofi25eYMW6aiRf6bd3d9b691699749569f6acd34a93e61","company":"harperdb.io"}' -e CUSTOM_FUNCTIONS=true -e LOG_TO_STDSTREAMS=true -e LOG_TO_FILE=true -e LOGGING_LEVEL=trace -e HDB_ADMIN_USERNAME="$HDB_ADMIN_USERNAME" -e HDB_ADMIN_PASSWORD="$HDB_ADMIN_PASSWORD" -e OPERATIONSAPI_NETWORK_PORT=9925 -e OPERATIONSAPI_NETWORK_SECUREPORT=9943 -e HTTP_PORT=9926 -e HTTP_SECUREPORT=9953 -e HTTP_MTLS=true harperdb/harperdb:${{ needs.build.outputs.harperdbVersion }})
          sleep 30s

          echo "DEBUG"
          docker ps -a
          docker logs $containerId

          harper_running=$(ss -tln | grep 9925 | awk '{print $4}' | cut -f2 -d:)
          if [ -z $harper_running ]; then exit 1; fi

          # Run integration tests from the Docker host
          docker cp test/data/integrationTestsCsvs/ $containerId:/home/harperdb/
          cd ./integrationTests/apiTests
          npm install
          HDB_ADMIN_USERNAME=${HDB_ADMIN_USERNAME} HDB_ADMIN_PASSWORD=${HDB_ADMIN_PASSWORD} DOCKER_CONTAINER_ID=$containerId FILES_LOCATION=/home/harperdb/integrationTestsCsvs/ S3_KEY=${S3_KEY} S3_SECRET=${S3_SECRET} node --test-reporter spec --test-reporter-destination report.txt --test-reporter spec --test-reporter-destination stdout --experimental-default-type="module" tests/testSuite.js

      - name: Create artifact
        if: always()
        run: |
          mkdir -p artifact

          # Capture hdb_log.log from container
          docker cp harper:/home/harperdb/hdb/log/ artifact

          # Capture harperdb-config.yaml
          docker cp harper:/home/harperdb/hdb/harperdb-config.yaml artifact

          # Capture docker log
          docker logs harper > artifact/docker_log.log

          # Capture report
          cp integrationTests/apiTests/report.txt artifact
          
      - name: 'Upload Artifact'
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: logs-${{ matrix.name }}
          path: artifact
          retention-days: 1

  #################################
  #  Send Slack Message on failure
  #################################
  sendSlackMessage:
    uses: ./.github/workflows/post-to-slack-channel.yaml
    if: ${{ failure() && (github.event_name == 'schedule' || github.event_name == 'push') }}
    secrets: inherit
    needs:
      - dockerTests
      - build

on:
  workflow_dispatch:
name: Run Source Code Cluster Test B
jobs:
  getNodeVersion:
    runs-on: ubuntu-latest
    outputs:
      nodeVersion: ${{ steps.getNode.outputs.NODE_VERSION }}
      harperdbVersion: ${{ steps.getNode.outputs.HARPERDB_VERSION }}
    steps:
    - uses: actions/checkout@v2
    - id: getNode
      name: Get node version
      run: |
        pwd
        NODE_VERSION="$(cat package.json | jq -r '.engines."preferred-node"')"
        HARPERDB_VERSION=$(cat package.json | jq -r '.version')
        echo "::set-output name=NODE_VERSION::$NODE_VERSION"
        echo "::set-output name=HARPERDB_VERSION::$HARPERDB_VERSION"
  createInstances:
    needs:
      - getNodeVersion
    uses: ./.github/workflows/create-instances.yaml
    with:
      instanceCount: "4"
      harperdbVersion: ${{ needs.getNodeVersion.outputs.harperdbVersion }}
      installType: "sourceCode"
      callingWorkflow: ${{ github.workflow }}
    secrets: inherit
  registerInstances:
    needs: 
      - createInstances
      - getNodeVersion
    uses: ./.github/workflows/install-and-register.yaml
    with:
      publicDns: ${{ needs.createInstances.outputs.publicDnsNames }}
      harperdbVersion: ${{ needs.getNodeVersion.outputs.harperdbVersion }}
      nodeVersion: ${{ needs.getNodeVersion.outputs.nodeVersion }}
      installType: "sourceCode"
    secrets: inherit
  runTests:
    runs-on: ubuntu-latest
    needs:
      - createInstances
      - registerInstances
    steps:
    - name: Run Cluster Test B on Instances
      env:
        CI_PRIVATE_KEY: ${{ secrets.CI_PRIVATE_KEY }}
      run: |
        #!/bin/bash

        cd ../
        echo "$CI_PRIVATE_KEY" > private_key && chmod 600 private_key

        public_dns_names="${{ needs.createInstances.outputs.publicDnsNames }}"
        public_ips="${{ needs.createInstances.outputs.publicIps }}"
        public_dns_names=($public_dns_names)
        public_ips=($public_ips)
        # Run the cluster tests from the first test VM
        public_dns_name="${public_dns_names[0]}"

        echo "Starting work on: $public_dns_name"

        ssh -i private_key -o ConnectTimeout=10 -o ConnectionAttempts=5 -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=ERROR ubuntu@$public_dns_name \
          "sudo chmod +x /home/ubuntu/harperdb/test/ci-tests/cluster-test-b.sh && /home/ubuntu/harperdb/test/ci-tests/cluster-test-b.sh ${public_ips[@]} ${public_dns_names[@]}"
        echo "Ending work on: $public_dns_name"
  downloadLogs:
    if: always()
    needs: 
      - runTests
      - createInstances
    uses: ./.github/workflows/download-logs.yaml
    with:
      publicDns: ${{ needs.createInstances.outputs.publicDnsNames }}
    secrets: inherit
  destroyInstances:
    if: always()
    needs: downloadLogs
    uses: ./.github/workflows/destroy-instances.yaml
    with:
      instanceCount: "4"
      callingWorkflow: ${{ github.workflow }}
    secrets: inherit   
name: Docker Publish

on:
  workflow_dispatch:
    inputs:
      container:
        description: 'Which container to build, harpersystems/private, harpersystems/harper, harpersystems/harper-openshift, tar, or public for both harperdb and openshift'
        default: 'harpersystems/private'
        required: false
        type: choice
        options:
          - 'harpersystems/private'
          - 'harpersystems/harper'
          - 'harpersystems/harper-openshift'
          - 'harpersystems/harper-chrome'
          - 'tar'
          - 'public'
      file:
        description: 'Which dockerfile to use for this build. ignored except when harperdb/private, or tar.'
        default: 'utility/Docker/Dockerfile'
        required: false
        type: string
      platforms:
        description: 'Which platform(s) to build for'
        default: 'linux/arm64,linux/amd64'
        required: false
        type: choice
        options:
          - 'linux/arm64,linux/amd64'
          - 'linux/amd64'
          - 'linux/arm64'
      push:
        description: 'push the created image to dockerhub. ignored when tar'
        default: false
        required: false
        type: boolean
      latest:
        description: 'tag as latest in registry'
        default: false
        required: false
        type: boolean
      nodeVersion:
        description: 'NodeJS version to use, such as 16, 18, 20, etc. Either -slim or -minimal will be appended appropriately for the Dockerfile. Changing this will negate latest tag. defaults to 22'
        required: false
        default: '22'
        type: string

jobs:
  ####################
  #  Build HarperDB
  ####################
  build:
    uses: ./.github/workflows/build.yaml
#    # These values should only be used to debug the workflow
#    with:
#      preferDownload: true
#      dummyLicense: true


  ############################
  #  Build Container Image(s)
  ############################
  publish_container:
    if: inputs.container != 'public'
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v4
      - name: docker-build
        uses: ./.github/docker-build
        with:
          harperdbVersion: ${{ needs.build.outputs.harperdbVersion }}
          nodeVersion: ${{ inputs.nodeVersion }}
          containerImage: ${{ inputs.container }}
          dockerFile: ${{ inputs.file }}
          tagLatest: ${{ inputs.latest }}
          buildPlatforms: ${{ inputs.platforms }}
          push: ${{ inputs.push }}
          dockerUsername: ${{ secrets.DOCKER_USERNAME }}
          dockerPassword: ${{ secrets.DOCKER_PASSWORD }}

      #####################
      # Security Scanning #
      #####################
      - name: Run Trivy vulnerability scanner
        if: inputs.container != 'tar'
        continue-on-error: true
        uses: ./.github/container-scanning
        with:
          containerImage: ${{ inputs.containerImage }}
          containerTag: ${{ github.sha }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish_public_containers:
    if: inputs.container == 'public'
    needs:
      - build
    strategy:
      matrix:
        include:
          - container: 'harperdb/harperdb'
            file: 'utility/Docker/Dockerfile'
            buildPlatforms: ${{ inputs.platforms }}
          - container: 'harperdb/harperdb-openshift'
            file: 'utility/Docker/Dockerfile-openshift'
            buildPlatforms: ${{ inputs.platforms }}
          - container: 'harperdb/harperdb-chrome'
            file: 'utility/Docker/Dockerfile-chrome'
            buildPlatforms: 'linux/amd64'
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v4
      - name: docker-build
        uses: ./.github/docker-build
        with:
          harperdbVersion: ${{ needs.build.outputs.harperdbVersion }}
          nodeVersion: ${{  inputs.nodeVersion }}
          containerImage: ${{ matrix.container }}
          dockerFile: ${{ matrix.file }}
          tagLatest: ${{ inputs.latest }}
          buildPlatforms: ${{ inputs.platforms }}
          push: ${{ inputs.push }}
          dockerUsername: ${{ secrets.DOCKER_USERNAME }}
          dockerPassword: ${{ secrets.DOCKER_PASSWORD }}

      #####################
      # Security Scanning #
      #####################
      - name: Run Trivy vulnerability scanner
        continue-on-error: true
        uses: ./.github/container-scanning
        with:
          containerImage: ${{ matrix.container }}
          containerTag: ${{ github.sha }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
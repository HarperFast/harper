on:
  # Trigger analysis when pushing in main or pull requests, and when creating
  # a pull request.
  push:
    branches:
      - use-ui-tests-repo
  pull_request:
    types: [ opened, synchronize, reopened ]
  schedule:
    - cron: '30 5 * * 1-5'
  workflow_dispatch:

name: Run Source Code - UI Tests
jobs:
#  getNodeVersion:
#    runs-on: ubuntu-latest
#    outputs:
#      nodeVersion: ${{ steps.getNode.outputs.NODE_VERSION }}
#      harperdbVersion: ${{ steps.getNode.outputs.HARPERDB_VERSION }}
#    steps:
#      - uses: actions/checkout@v4
#      - uses: actions/setup-node@v4
#      - id: getNode
#        name: Get node version
#        run: |
#          pwd
#          NODE_VERSION="$(node --version)"
#          NODE_VERSION="${NODE_VERSION:1}"
#          HARPERDB_VERSION=$(cat package.json | jq -r '.version')
#          echo "NODE_VERSION=$NODE_VERSION" >> $GITHUB_OUTPUT
#          echo "HARPERDB_VERSION=$HARPERDB_VERSION" >> $GITHUB_OUTPUT
#  createInstances:
#    needs:
#      - getNodeVersion
#    uses: ./.github/workflows/create-instances.yaml
#    with:
#      instanceCount: '1'
#      harperdbVersion: ${{ needs.getNodeVersion.outputs.harperdbVersion }}
#      installType: 'sourceCode'
#      callingWorkflow: ${{ github.workflow }}
#    secrets: inherit
#  registerInstances:
#    needs:
#      - createInstances
#      - getNodeVersion
#    uses: ./.github/workflows/install-and-register.yaml
#    with:
#      publicDns: ${{ needs.createInstances.outputs.publicDnsNames }}
#      harperdbVersion: ${{ needs.getNodeVersion.outputs.harperdbVersion }}
#      nodeVersion: ${{ needs.getNodeVersion.outputs.nodeVersion }}
#      installType: 'sourceCode'
#    secrets: inherit
  getUItests:
    runs-on: ubuntu-latest
#    needs:
#      - createInstances
#      - registerInstances
    steps:
      - name: Checkout repo ui-tests
        uses: actions/checkout@v4
        with:
          repository: HarperDB/ui-tests
          ref: 'main'
      - name: List folder and files
        run: |
          pwd
          ls -al
          ls -al ui-tests
#  downloadLogs:
#    if: always()
#    needs:
#      - getUItests
##      - createInstances
#    uses: ./.github/workflows/download-logs.yaml
#    with:
#      publicDns: ${{ needs.createInstances.outputs.publicDnsNames }}
#    secrets: inherit
#  destroyInstances:
#    if: always()
#    needs: downloadLogs
#    uses: ./.github/workflows/destroy-instances.yaml
#    with:
#      instanceCount: '1'
#      callingWorkflow: ${{ github.workflow }}
#    secrets: inherit
#  sendSlackMessage:
#    uses: ./.github/workflows/post-to-slack-channel.yaml
#    if: ${{ failure() && github.event_name == 'schedule' }}
#    secrets: inherit
#    needs:
#      - destroyInstances
#      - downloadLogs
#      - registerInstances
#      - createInstances
#      - getNodeVersion

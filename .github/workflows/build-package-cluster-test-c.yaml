on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'utility/clustering/**'
      - 'server/nats/**'
  schedule:
    - cron: '0 13 * * 1-5'
  workflow_dispatch:
name: Run Build Package Cluster Test C
jobs:
  build:
    uses: ./.github/workflows/build.yaml
  createInstances:
    needs:
      - build
    uses: ./.github/workflows/create-instances.yaml
    with:
      instanceCount: "4"
      harperdbVersion: ${{ needs.build.outputs.harperdbVersion }}
      callingWorkflow: ${{ github.workflow }}
    secrets: inherit
  registerInstances:
    needs: 
      - createInstances
      - build
    uses: ./.github/workflows/install-and-register.yaml
    with:
      publicDns: ${{ needs.createInstances.outputs.publicDnsNames }}
      harperdbVersion: ${{ needs.build.outputs.harperdbVersion }}
      nodeVersion: ${{ needs.build.outputs.nodeVersion }}
    secrets: inherit
  runTests:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs:
      - createInstances
      - registerInstances
      - build
    steps:
    - name: Run Cluster Test C on Instances
      env:
        CI_PRIVATE_KEY: ${{ secrets.CI_PRIVATE_KEY }}
      run: |
        #!/bin/bash

        cd ../
        echo "$CI_PRIVATE_KEY" > private_key && chmod 600 private_key

        public_dns_names="${{ needs.createInstances.outputs.publicDnsNames }}"
        public_ips="${{ needs.createInstances.outputs.publicIps }}"
        public_dns_names=($public_dns_names)
        public_ips=($public_ips)
        # Run the cluster tests from the first test VM
        public_dns_name="${public_dns_names[0]}"

        echo "Starting work on: $public_dns_name"

        ssh -i private_key -o ConnectTimeout=10 -o ConnectionAttempts=5 -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=ERROR ubuntu@$public_dns_name \
          "sudo chmod +x /home/ubuntu/harperdb/test/ci-tests/cluster-test-c.sh && /home/ubuntu/harperdb/test/ci-tests/cluster-test-c.sh ${public_ips[@]} ${public_dns_names[@]}"
        echo "Ending work on: $public_dns_name"
  downloadLogs:
    if: always()
    needs: 
      - runTests
      - createInstances
    uses: ./.github/workflows/download-logs.yaml
    with:
      publicDns: ${{ needs.createInstances.outputs.publicDnsNames }}
    secrets: inherit
  destroyInstances:
    if: always()
    needs: downloadLogs
    uses: ./.github/workflows/destroy-instances.yaml
    with:
      instanceCount: "4"
      callingWorkflow: ${{ github.workflow }}
    secrets: inherit
  sendSlackMessage:
    runs-on: ubuntu-latest
    if: ${{ failure() && github.event_name == 'schedule' }}
    needs:
      - destroyInstances
      - downloadLogs
      - runTests
      - registerInstances
      - createInstances
      - build
    steps:
    - name: Post to a Slack channel
      id: slack
      uses: slackapi/slack-github-action@v1.23.0
      with:
        channel-id: 'development'
        slack-message: "${{ github.workflow }} Failed.\nSee logs here: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_KEY }}

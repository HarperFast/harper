on:
  pull_request:
    paths:
      - 'server/replication/**'
    types: [opened, synchronize, reopened]
  workflow_dispatch:
  workflow_call:
name: Run Source Code Plexus Cluster Test C
jobs:
  getNodeVersion:
    runs-on: ubuntu-latest
    outputs:
      nodeVersion: ${{ steps.getNode.outputs.NODE_VERSION }}
      harperdbVersion: ${{ steps.getNode.outputs.HARPERDB_VERSION }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      - id: getNode
        name: Get node version
        run: |
          pwd
          NODE_VERSION="$(node --version)"
          NODE_VERSION="${NODE_VERSION:1}"
          HARPERDB_VERSION=$(cat package.json | jq -r '.version')
          echo "NODE_VERSION=$NODE_VERSION" >> $GITHUB_OUTPUT
          echo "HARPERDB_VERSION=$HARPERDB_VERSION" >> $GITHUB_OUTPUT
  createInstances:
    needs:
      - getNodeVersion
    uses: ./.github/workflows/create-instances.yaml
    with:
      instanceCount: '4'
      harperdbVersion: ${{ needs.getNodeVersion.outputs.harperdbVersion }}
      installType: 'sourceCode'
      callingWorkflow: ${{ github.workflow }}
    secrets: inherit
  registerInstances:
    needs:
      - createInstances
      - getNodeVersion
    uses: ./.github/workflows/install-harper.yaml
    with:
      publicDns: ${{ needs.createInstances.outputs.publicDnsNames }}
      harperdbVersion: ${{ needs.getNodeVersion.outputs.harperdbVersion }}
      nodeVersion: ${{ needs.getNodeVersion.outputs.nodeVersion }}
      installType: 'sourceCode'
      httpsOn: true
    secrets: inherit
  runTests:
    runs-on: ubuntu-latest
    needs:
      - createInstances
      - registerInstances
    steps:
      - name: Run Cluster Test C on Instances
        env:
          CI_INSTANCES_PRIVATE_KEY: ${{ secrets.CI_INSTANCES_PRIVATE_KEY }}
          HDB_ADMIN_USERNAME: ${{ secrets.HDB_ADMIN_USERNAME }}
          HDB_ADMIN_PASSWORD: ${{ secrets.HDB_ADMIN_PASSWORD }}
          S3_KEY: ${{ secrets.AWS_S3_CI_CLUSTER_KEY }}
          S3_SECRET: ${{ secrets.AWS_S3_CI_CLUSTER_SECRET }}
        run: |
          #!/bin/bash

          cd ../
          echo "$CI_INSTANCES_PRIVATE_KEY" > private_key && chmod 600 private_key

          public_dns_names="${{ needs.createInstances.outputs.publicDnsNames }}"
          private_ips="${{ needs.createInstances.outputs.privateIps }}"
          public_dns_names=($public_dns_names)
          private_ips=($private_ips)
          # Run the cluster tests from the first test VM
          public_dns_name="${public_dns_names[0]}"

          echo "Starting work on: $public_dns_name"

          ssh -i private_key -o ConnectTimeout=10 -o ConnectionAttempts=5 -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=ERROR ubuntu@$public_dns_name \
            "sudo chmod +x /home/ubuntu/harperdb/test/ci-tests/plexus-cluster-test-c.sh && HDB_ADMIN_USERNAME='${HDB_ADMIN_USERNAME}' HDB_ADMIN_PASSWORD='${HDB_ADMIN_PASSWORD}' S3_KEY='${S3_KEY}' S3_SECRET='${S3_SECRET}' /home/ubuntu/harperdb/test/ci-tests/plexus-cluster-test-c.sh ${private_ips[@]} ${public_dns_names[@]}"
          echo "Ending work on: $public_dns_name"
  downloadLogs:
    if: always()
    needs:
      - runTests
      - createInstances
    uses: ./.github/workflows/download-logs.yaml
    with:
      publicDns: ${{ needs.createInstances.outputs.publicDnsNames }}
    secrets: inherit
  destroyInstances:
    if: always()
    needs: downloadLogs
    uses: ./.github/workflows/destroy-instances.yaml
    with:
      instanceCount: '4'
      callingWorkflow: ${{ github.workflow }}
    secrets: inherit

on:
  push:
    branches:
      - master
  schedule:
    - cron:  '0 0 * * 1-5'
  workflow_dispatch:
name: Run Build Package Cluster Test B
jobs:
  build:
    uses: ./.github/workflows/build.yaml
  createInstances:
    needs:
      - build
    uses: ./.github/workflows/create-instances.yaml
    with:
      instanceCount: "4"
      harperdbVersion: ${{ needs.build.outputs.harperdbVersion }}
    secrets: inherit
  registerInstances:
    needs: 
      - createInstances
      - build
    uses: ./.github/workflows/install-and-register.yaml
    with:
      publicDns: ${{ needs.createInstances.outputs.publicDnsNames }}
      harperdbVersion: ${{ needs.build.outputs.harperdbVersion }}
      goVersion: ${{ needs.build.outputs.goVersion }}
      nodeVersion: ${{ needs.build.outputs.nodeVersion }}
      installType: "sourceCode"
    secrets: inherit
  runTests:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs:
      - createInstances
      - registerInstances
      - build
    steps:
    - name: Run Cluster Test B on Instances
      env:
        CI_PRIVATE_KEY: ${{ secrets.CI_PRIVATE_KEY }}
      run: |
        #!/bin/bash

        cd ../
        echo "$CI_PRIVATE_KEY" > private_key && chmod 600 private_key

        public_dns_names="${{ needs.createInstances.outputs.publicDnsNames }}"
        public_ips="${{ needs.createInstances.outputs.publicIps }}"
        public_dns_names=($public_dns_names)
        public_ips=($public_ips)
        # Run the cluster tests from the first test VM
        public_dns_name="${public_dns_names[0]}"

        echo "Starting work on: $public_dns_name"

        ssh -i private_key -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=ERROR ubuntu@$public_dns_name << HERE
          . /home/ubuntu/.nvm/nvm.sh
          . /home/ubuntu/.nvm/bash_completion

          npm --loglevel=error install -g newman
          npm --loglevel=error install -g newman-reporter-teamcity
          npm --loglevel=error install -g newman-reporter-html
          npm --loglevel=error install -g newman-reporter-htmlextra

          cd /home/ubuntu/harperdb/integrationTests/

          # Set node host names in postman env vars file
          sed -in "s/ClstrTestB1/${public_ips[0]}/" clusterTests/clusterTestB/Four_Node_Cluster_Tests_Env_vars.postman_environment.json
          sed -in "s/ClstrTestB2/${public_ips[1]}/" clusterTests/clusterTestB/Four_Node_Cluster_Tests_Env_vars.postman_environment.json
          sed -in "s/ClstrTestB3/${public_ips[2]}/" clusterTests/clusterTestB/Four_Node_Cluster_Tests_Env_vars.postman_environment.json
          sed -in "s/ClstrTestB4/${public_ips[3]}/" clusterTests/clusterTestB/Four_Node_Cluster_Tests_Env_vars.postman_environment.json

          # Set node names in postman env vars file 4 percent signs escapes for trimming string
          sed -in "s/ClstrTestBNode1/${public_dns_names[0]%%.*}/" clusterTests/clusterTestB/Four_Node_Cluster_Tests_Env_vars.postman_environment.json
          sed -in "s/ClstrTestBNode2/${public_dns_names[1]%%.*}/" clusterTests/clusterTestB/Four_Node_Cluster_Tests_Env_vars.postman_environment.json
          sed -in "s/ClstrTestBNode3/${public_dns_names[2]%%.*}/" clusterTests/clusterTestB/Four_Node_Cluster_Tests_Env_vars.postman_environment.json
          sed -in "s/ClstrTestBNode4/${public_dns_names[3]%%.*}/" clusterTests/clusterTestB/Four_Node_Cluster_Tests_Env_vars.postman_environment.json

          # Increase retry limit
          #sed -in 's/"value": "7",/"value": "100",/' clusterTests/Four_Node_Cluster_Tests_Env_vars.postman_environment.json
          cat clusterTests/clusterTestB/Four_Node_Cluster_Tests_Env_vars.postman_environment.json
          newman run clusterTests/clusterTestB/Four_Node_Cluster_Tests.postman_collection.json -e clusterTests/clusterTestB/Four_Node_Cluster_Tests_Env_vars.postman_environment.json --reporters teamcity,cli,html,htmlextra --reporter-html-export newman/report.html --reporter-htmlextra-export newman/extra_report.html  --delay-request 100 --insecure
        HERE

        echo "Ending work on: $public_dns_name"
  downloadLogs:
    if: always()
    needs: 
      - runTests
      - createInstances
    uses: ./.github/workflows/download-logs.yaml
    with:
      publicDns: ${{ needs.createInstances.outputs.publicDnsNames }}
    secrets: inherit
  destroyInstances:
    if: always()
    needs: downloadLogs
    uses: ./.github/workflows/destroy-instances.yaml
    with:
      instanceCount: "4"
    secrets: inherit   
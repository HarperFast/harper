"use strict";(self.webpackChunkharperdb_studio=self.webpackChunkharperdb_studio||[]).push([[777],{4220:(e,n,t)=>{t.d(n,{Z:()=>d});t(7313);var a=t(238),o=t(3516),r=t(6782),i=t(5399),s=t(9327),l=t(6417);const d=function(e){let{error:n,componentStack:t,resetErrorBoundary:d,extraClass:c}=e;return(0,l.jsx)(a.Z,{className:"error-boundary mb-3 ".concat(c),children:(0,l.jsxs)(o.Z,{children:[(0,l.jsxs)("b",{children:["Component Error ",(new Date).toLocaleTimeString()]}),(0,l.jsx)("hr",{className:"my-1"}),(0,l.jsx)("div",{className:"error-message",children:n.message}),(0,l.jsx)("hr",{className:"my-1"}),(0,l.jsx)("div",{className:"stack-trace",children:(0,l.jsx)("pre",{children:t})}),(0,l.jsxs)(r.Z,{children:[(0,l.jsx)(i.Z,{children:(0,l.jsx)(s.Z,{color:"danger",block:!0,href:"https://harperdbhelp.zendesk.com/hc/en-us/requests/new",target:"_blank",rel:"noopener noreferrer",children:"Create A Support Ticket"})}),(0,l.jsx)(i.Z,{children:(0,l.jsx)(s.Z,{color:"success",block:!0,onClick:d,children:"Retry Component Load"})})]})]})})}},6140:(e,n,t)=>{t.d(n,{Z:()=>s});t(7313);var a=t(2135),o=t(4220),r=t(511),i=t(6417);const s=function(e){let{error:n,componentStack:t,resetErrorBoundary:s}=e;return(0,i.jsxs)("div",{id:"login-form",children:[(0,i.jsx)("div",{id:"login-logo",title:"HarperDB Logo"}),(0,i.jsxs)("div",{className:"version",children:["Studio v",r.Z.studio_version]}),(0,i.jsx)(o.Z,{error:n,componentStack:t}),(0,i.jsx)("div",{className:"text-center",children:(0,i.jsx)(a.OL,{to:"/",className:"login-nav-link",onClick:s,children:"Back to Login"})})]})}},7377:(e,n,t)=>{t.d(n,{Z:()=>d});var a=t(238),o=t(3516),r=t(6782),i=t(5399),s=(t(7313),t(2135)),l=t(6417);const d=function(e){let{header:n,body:t,spinner:d,links:c=!1,relative:u=!1}=e;return(0,l.jsxs)("div",{className:"loader ".concat(u?"relative":""),children:[(0,l.jsx)(a.Z,{className:"mb-3",children:(0,l.jsxs)(o.Z,{className:"text-center",children:[(0,l.jsxs)("div",{className:"mb-3",children:["\xa0",n,"\xa0"]}),(0,l.jsxs)("div",{className:"mt-2",children:["\xa0",d&&(0,l.jsx)("i",{className:"fa fa-spinner fa-spin"}),"\xa0"]}),(0,l.jsxs)("div",{className:"mt-2",children:["\xa0",t,"\xa0"]})]})}),c?(0,l.jsx)(r.Z,{children:c.map((e=>(0,l.jsx)(i.Z,{className:"login-nav-link-holder ".concat(e.className||""),children:(0,l.jsx)(s.OL,{to:e.to,className:"login-nav-link",children:e.text})},e.to)))}):(0,l.jsx)("div",{className:"login-nav-link",children:"\xa0"})]})}},2261:(e,n,t)=>{t.d(n,{Z:()=>r});var a=t(8093),o=t(511);const r=async e=>{let{type:n="studio component",status:t="warn",url:r,operation:i,request:s,error:l,customer_id:d,compute_stack_id:c}=e,u=!1;try{var p;u=JSON.parse(localStorage.getItem("persistedUser"));const e={type:n,status:"studio component"===n?"warn":t,environment:o.Z.env,user:(null===(p=u)||void 0===p?void 0:p.email)||"unknown",customer_id:d,compute_stack_id:c,url:r,operation:i,request:{...s,password:null!==s&&void 0!==s&&s.password?"xxxxxxxxx":void 0},error:l,timestamp:Date.now()},h=await(0,a.he)("".concat(o.Z.lms_api_url,"addError"),{method:"POST",body:JSON.stringify(e),headers:{"Content-Type":"application/json",authorization:void 0}}),m=await h.json();(m.body||m).error||console.log("Reported ",o.Z.env,e.status,n,i)}catch(h){console.log(h)}}},6005:(e,n,t)=>{t.d(n,{Z:()=>i});var a=t(6449),o=t(2261),r=t(511);const i=async()=>{let e=null;try{e=[{value:"ap-west",label:"Mumbai, IN",country:"in"},{value:"ca-central",label:"Toronto, CA",country:"ca"},{value:"ap-southeast",label:"Sydney, AU",country:"au"},{value:"us-central",label:"Dallas, TX",country:"us"},{value:"us-west",label:"Fremont, CA",country:"us"},{value:"us-southeast",label:"Atlanta, GA",country:"us"},{value:"us-east",label:"Newark, NJ",country:"us"},{value:"eu-west",label:"London, UK",country:"uk"},{value:"ap-south",label:"Singapore, SG",country:"sg"},{value:"eu-central",label:"Frankfurt, DE",country:"de"},{value:"ap-northeast",label:"Tokyo, JP",country:"jp"}].sort(((e,n)=>e.label<n.label?-1:1));let n=[];return Array.isArray(e)&&(n=e),a.Z.update((e=>{e.akamaiRegions=n}))}catch(n){return(0,o.Z)({type:"lms data",status:"error",url:r.Z.lms_api_url,operation:"getAkamaiRegions",error:{catch:n.toString()}})}}},1007:(e,n,t)=>{t.d(n,{Z:()=>s});var a=t(576),o=t(6449),r=t(511),i=t(2261);const s=async()=>{let e=null;try{return e=await(0,a.Z)({endpoint:"getCurrentVersion",method:"POST"}),e.number?(e.studio||(e.studio=r.Z.studio_version),o.Z.update((n=>{n.version=e}))):!1}catch(n){return(0,i.Z)({type:"lms data",status:"error",url:r.Z.lms_api_url,operation:"getCurrentVersion",error:{catch:n.toString()}})}}},2227:(e,n,t)=>{t.d(n,{Z:()=>c});var a=t(576),o=t(6449),r=t(2261),i=t(8329),s=t(9274),l=t(511);const d={dev:{cloud_compute:"prod_Gh1XXQx6J8YaJl",local_compute:"prod_GoB3yLzygPeGMu",wavelength_compute:"prod_KloxOQofDaLs7q",akamai_compute:"prod_O2DOH61yn3qP6g",cloud_storage:"prod_GoUJnVwOYvTjU9"},stage:{cloud_compute:"prod_Gh1XXQx6J8YaJl",local_compute:"prod_GoB3yLzygPeGMu",wavelength_compute:"prod_KloxOQofDaLs7q",akamai_compute:"prod_O2DOH61yn3qP6g",cloud_storage:"prod_GoUJnVwOYvTjU9"},prod:{cloud_compute:"prod_GdDIHGH6lzEqgv",local_compute:"prod_H0Xx9dKkQqhMx9",wavelength_compute:"prod_KlorPRd9r1RKcz",akamai_compute:"prod_O7j9wiS1g7kPZU",cloud_storage:"prod_H0XnsrToBa7a7G"}},c=async()=>{try{const e=await(0,a.Z)({endpoint:"getProducts",method:"POST"});return!e.error&&o.Z.update((n=>{var t,a,o,r,c;n.products={cloud_storage:(0,s.Z)((null===(t=e.find((e=>e.id===d[l.Z.env].cloud_storage)))||void 0===t?void 0:t.plans.filter((e=>!e.metadata.prepaid)))||[]),cloud_compute:(0,i.Z)((null===(a=e.find((e=>e.id===d[l.Z.env].cloud_compute)))||void 0===a?void 0:a.plans.filter((e=>!e.metadata.prepaid)))||[]),wavelength_compute:(0,i.Z)((null===(o=e.find((e=>e.id===d[l.Z.env].wavelength_compute)))||void 0===o?void 0:o.plans.filter((e=>!e.metadata.prepaid)))||[]),akamai_compute:(0,i.Z)((null===(r=e.find((e=>e.id===d[l.Z.env].akamai_compute)))||void 0===r?void 0:r.plans.filter((e=>!e.metadata.prepaid)))||[]),local_compute:(0,i.Z)((null===(c=e.find((e=>e.id===d[l.Z.env].local_compute)))||void 0===c?void 0:c.plans.filter((e=>!e.metadata.prepaid)))||[])}}))}catch(e){return(0,r.Z)({type:"lms data",status:"error",url:l.Z.lms_api_url,operation:"getProducts",error:{catch:e.toString()}})}}},2982:(e,n,t)=>{t.d(n,{Z:()=>s});var a=t(576),o=t(6449),r=t(2261),i=t(511);const s=async()=>{let e=null;try{e=await(0,a.Z)({endpoint:"getRegions",method:"POST"});let n=[];return Array.isArray(e)&&(n=e),o.Z.update((e=>{e.regions=n}))}catch(n){return(0,r.Z)({type:"lms data",status:"error",url:i.Z.lms_api_url,operation:"getRegions",error:{catch:n.toString()}})}}},6345:(e,n,t)=>{t.d(n,{Z:()=>s});var a=t(576),o=t(6449),r=t(2261),i=t(511);const s=async e=>{let{email:n,pass:t,loggingIn:s=!1,signal:l}=e,d=null;try{return d=await(0,a.Z)({endpoint:"getUser",method:"POST",signal:l,payload:{email:n,password:t,loggingIn:s}}),d.error&&s?o.Z.update((e=>{e.auth={...d,time:Date.now()}})):!d.error&&(d.orgs?Array.isArray(d.orgs)||(d.orgs=[d.orgs]):d.orgs=[{customer_id:d.customer_id.toString(),customer_name:"".concat(d.firstname,"'s Org"),status:"owner"}],o.Z.update((e=>{e.auth={email:n,pass:t,...d}})))}catch(c){return s||(0,r.Z)({type:"lms data",status:"error",url:i.Z.lms_api_url,operation:"getUser",error:{catch:c.message}}),o.Z.update((e=>{e.auth={error:!0,message:c.message,time:Date.now()}}))}}},9476:(e,n,t)=>{t.d(n,{Z:()=>s});var a=t(576),o=t(6449),r=t(2261),i=t(511);const s=async()=>{let e=null;try{e=await(0,a.Z)({endpoint:"wl/getWavelengthRegions",method:"POST"});let n=[];return Array.isArray(e)&&(n=e.map((e=>({label:"".concat(e.communications_service_provider.replace(/(^\w{1})|(\s+\w{1})/g,(e=>e.toUpperCase()))," / ").concat(e.location.replace(/(^\w{1})|(\s+\w{1})/g,(e=>e.toUpperCase()))),value:e.wavelength_zone_id})))),o.Z.update((e=>{e.wavelengthRegions=n}))}catch(n){return(0,r.Z)({type:"lms data",status:"error",url:i.Z.lms_api_url,operation:"getWavelengthRegions",error:{catch:n.toString()}})}}},576:(e,n,t)=>{t.d(n,{Z:()=>i});var a=t(8093),o=t(511),r=t(2261);const i=async e=>{let{endpoint:n,payload:t,auth:i,signal:s}=e;const l={type:"lms api",status:"error",url:o.Z.lms_api_url,operation:n,request:t,customer_id:null===t||void 0===t?void 0:t.customer_id,compute_stack_id:null===t||void 0===t?void 0:t.compute_stack_id};try{const e=await(0,a.he)("".concat(o.Z.lms_api_url).concat(n),{signal:s,method:"POST",body:JSON.stringify(t),headers:null!==i&&void 0!==i&&i.email&&null!==i&&void 0!==i&&i.pass?{"Content-Type":"application/json",authorization:"Basic ".concat(btoa("".concat(i.email,":").concat(i.pass)))}:{"Content-Type":"application/json"}}),d=await e.json(),c=d.body||d;return c.errorType?((0,r.Z)({...l,status:"warn",error:c}),{error:!0,message:c.errorMessage}):c.error||"Internal server error"===c.message?(t.loggingIn||(0,r.Z)({...l,error:c}),{error:!0,message:c.message.replace(/Validation error:|Throttling error:|Bad request:|Internal Server Error:|Unauthorized:|StripeInvalidRequestError:|TypeError:/g,"").trim()||"The server did not respond"}):c}catch(d){return["Aborted","Network request failed"].includes(d.message)||"TypeError: Network request failed"===d||(0,r.Z)({...l,error:{catch:d.message}}),{error:!0,message:d.message}}}},3295:(e,n,t)=>{t.d(n,{Z:()=>a});const a=e=>{document.getElementById("dynamic-favicon").href="/images/favicon_".concat(e||"purple",".png")}},1337:(e,n,t)=>{t.d(n,{Z:()=>p});var a=t(1007),o=t(2227),r=t(2982),i=t(9476),s=t(6005),l=t(8978),d=t(6449),c=t(8149),u=t(511);const p=e=>{var n;let{currentPath:t,navigate:p,setFetchingUser:h,persistedUser:m,setPersistedUser:y,instanceAuths:_,controller:b}=e;return(e=>{const n=window.location.host.indexOf("lumen")>=0,t=window.location.host.indexOf("verizon")>=0,a=window.location.host.indexOf("akamai")>=0,o=n?["lumen"]:t?["verizon"]:a?["akamai"]:["purple","light","dark"];d.Z.update((r=>{r.theme=1===o.length?o[0]:o.indexOf(e)>=0?e:"dark",r.themes=o,r.is_lumen=n,r.is_verizon=t,r.is_akamai=a}))})(m.theme),u.Z.is_local_studio?(d.Z.update((e=>{e.instances=[{compute_stack_id:"local",url:u.Z.local_studio_dev_url||"/",instance_name:"local"}]})),h(!1),null!==_&&void 0!==_&&null!==(n=_.local)&&void 0!==n&&n.valid?(h(!1),setTimeout(p("/o/local/i/local/browse"),10)):p("/")):["/sign-up","/reset-password","/resend-registration-email"].includes(t)?(h(!1),y({})):["/sign-in"].includes(t)?p("/"):(null!==m&&void 0!==m&&m.email?(0,c.Z)({auth:m,controller:b,setFetchingUser:h,loggingIn:!0}):h(!1),(0,a.Z)(),(0,o.Z)(),(0,r.Z)(),(0,i.Z)(),(0,s.Z)(),(0,l.Z)(),d.Z.update((e=>{e.auth={email:null===m||void 0===m?void 0:m.email,pass:null===m||void 0===m?void 0:m.pass}})))}},8149:(e,n,t)=>{t.d(n,{Z:()=>o});var a=t(6345);const o=async e=>{let{auth:n,loggingIn:t=!1,controller:o,setFetchingUser:r=!1}=e;null!==n&&void 0!==n&&n.email&&null!==n&&void 0!==n&&n.pass&&(o=new AbortController,r&&r(!0),await(0,a.Z)({...n,loggingIn:t,signal:o.signal}),r&&r(!1))}},8978:(e,n,t)=>{t.d(n,{Z:()=>i});var a=t(6449),o=t(511);const r=JSON.parse('{"info":{"_postman_id":"dd9f6d33-13a6-4c65-8a63-a719d9b4b900","name":"HarperDB 2.2.0","description":"\u2022 <a href=\\"https://studio.harperdb.io/\\">HarperDB Studio</a>\\n\\n\u2022 <a href=\\"https://harperdb.io/developers/documentation/install-harperdb/\\">Installation & Getting Started</a>\\n\\n\u2022 <a href=\\"https://harperdbhelp.zendesk.com/hc/en-us/articles/115010248827-How-do-I-login-authenticate-with-HarperDB-\\">Guide on Basic Auth</a>\\n\\n\u2022 <a href=\\"https://harperdbhelp.zendesk.com/hc/en-us\\">HarperDB Support</a>\\n\\n\u2022 <a href=\\"https://olddocs.harperdb.io\\">Past Release Documentation</a>","schema":"https://schema.getpostman.com/json/collection/v2.1.0/collection.json"},"item":[{"name":"QuickStart Examples","item":[{"name":"Create dev Schema","request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"create_schema\\",\\n\\t\\"schema\\":\\"dev\\"\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"We first need to create a Schema.  A Schema in HarperDB is akin to a Database in a traditional RDMS like MSSQL or MySQL. Schemas hold logical groupings of tables, just like in those other products. \\n\\nIf you receive an error response, make sure your Basic Authentication user and password match those you entered during the installation process."},"response":[{"name":"Create dev Schema","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Authorization","type":"text","name":"Authorization","value":"Basic SERCX0FETUlOOnBhc3N3b3Jk"}],"body":{"mode":"raw","raw":"{\\n\\"operation\\":\\"create_schema\\",\\n\\"schema\\":\\"dev\\"\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"access-control-allow-origin","value":"chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop","name":"access-control-allow-origin","description":""},{"key":"connection","value":"keep-alive","name":"connection","description":""},{"key":"content-length","value":"45","name":"content-length","description":""},{"key":"content-type","value":"application/json; charset=utf-8","name":"content-type","description":""},{"key":"date","value":"Fri, 13 Oct 2017 21:14:04 GMT","name":"date","description":""},{"key":"etag","value":"W/\\"2d-GPJz4Nu7aSF7N/KODFK3o/TNPUw\\"","name":"etag","description":""},{"key":"vary","value":"Origin","name":"vary","description":""},{"key":"x-powered-by","value":"HarperDB","name":"x-powered-by","description":""}],"cookie":[],"body":""}]},{"name":"Create dog Table","request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"create_table\\",\\n\\t\\"schema\\":\\"dev\\",\\n\\t\\"table\\":\\"dog\\",\\n\\t\\"hash_attribute\\":\\"id\\"\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"Next, we\'ll create our first table.  Since our company is named after our CEO\'s dog, lets create a table to store all our employees\' dogs. We\'ll call this table, \'dogs\'.\\n\\nTables in HarperDB are schema-less, so we don\'t need to add any attributes other than a hash_attribute to create this table.  A hash attribute is an attribute that defines the unique identifier for each row in your table.  In a traditional RDMS this would be called a primary key."},"response":[{"name":"Create dog Table","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Authorization","type":"text","name":"Authorization","value":"Basic SERCX0FETUlOOnBhc3N3b3Jk"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"create_table\\",\\n\\t\\"schema\\":\\"dev\\",\\n\\t\\"table\\":\\"dog\\",\\n\\t\\"hash_attribute\\":\\"id\\"\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"_postman_previewlanguage":"json","header":[{"key":"access-control-allow-origin","value":"chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop","name":"access-control-allow-origin","description":""},{"key":"connection","value":"keep-alive","name":"connection","description":""},{"key":"content-length","value":"49","name":"content-length","description":""},{"key":"content-type","value":"application/json; charset=utf-8","name":"content-type","description":""},{"key":"date","value":"Fri, 13 Oct 2017 21:19:30 GMT","name":"date","description":""},{"key":"etag","value":"W/\\"31-2FV9i2eJXU1F9rNuA4B9T7Vu7EA\\"","name":"etag","description":""},{"key":"vary","value":"Origin","name":"vary","description":""},{"key":"x-powered-by","value":"HarperDB","name":"x-powered-by","description":""}],"cookie":[],"body":""}]},{"name":"Create breed Table","request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"create_table\\",\\n\\t\\"schema\\":\\"dev\\",\\n\\t\\"table\\":\\"breed\\",\\n\\t\\"hash_attribute\\":\\"id\\"\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"Now that we have a table to store our dog data, we also want to create a table to track known breeds.  Just as with the dog table, the only attribute we need to specify is the hash_attribute."},"response":[{"name":"Create breed Table","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Authorization","type":"text","name":"Authorization","value":"Basic SERCX0FETUlOOnBhc3N3b3Jk"}],"body":{"mode":"raw","raw":"{\\n\\"operation\\":\\"create_table\\",\\n\\"schema\\":\\"dev\\",\\n\\"table\\":\\"breed\\",\\n\\"hash_attribute\\":\\"id\\"\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"access-control-allow-origin","value":"chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop","name":"access-control-allow-origin","description":""},{"key":"connection","value":"keep-alive","name":"connection","description":""},{"key":"content-length","value":"51","name":"content-length","description":""},{"key":"content-type","value":"application/json; charset=utf-8","name":"content-type","description":""},{"key":"date","value":"Fri, 13 Oct 2017 21:28:00 GMT","name":"date","description":""},{"key":"etag","value":"W/\\"33-yJK4lsgvTjK9euHyxjd9kgGCB6Y\\"","name":"etag","description":""},{"key":"vary","value":"Origin","name":"vary","description":""},{"key":"x-powered-by","value":"HarperDB","name":"x-powered-by","description":""}],"cookie":[],"body":""}]},{"name":"Insert 1 Dog","request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n    \\"operation\\":\\"insert\\",\\n    \\"schema\\" :  \\"dev\\",\\n    \\"table\\":\\"dog\\",\\n    \\"records\\": [\\n      {\\n        \\"id\\" : 1,\\n        \\"dog_name\\" : \\"Penny\\",\\n        \\"owner_name\\": \\"Kyle\\",\\n        \\"breed_id\\":154,\\n        \\"age\\":5,\\n        \\"weight_lbs\\":35,\\n        \\"adorable\\":true\\n      }\\n    ]\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"We\'re ready to add some dog data.  Penny is our CTO\'s pup, so she gets ID 1 or we\'re all fired.  We are specifying attributes in this call, but this doesn\'t prevent us from specifying additional attributes in subsequent calls."},"response":[{"name":"Insert 1 Dog","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Authorization","type":"text","name":"Authorization","value":"Basic SERCX0FETUlOOnBhc3N3b3Jk"}],"body":{"mode":"raw","raw":"{\\n    \\"operation\\":\\"insert\\",\\n    \\"schema\\" :  \\"dev\\",\\n    \\"table\\":\\"dog\\",\\n    \\"records\\": [\\n      {\\n        \\"id\\" : 1,\\n        \\"doc\\" : \\"Penny\\",\\n        \\"owner_name\\": \\"Kyle\\",\\n        \\"breed_id\\":154,\\n        \\"age\\":5,\\n        \\"weight_lbs\\":35,\\n        \\"adorable\\":true\\n      }\\n    ]\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"access-control-allow-origin","value":"chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop","name":"access-control-allow-origin","description":""},{"key":"connection","value":"keep-alive","name":"connection","description":""},{"key":"content-length","value":"42","name":"content-length","description":""},{"key":"content-type","value":"application/json; charset=utf-8","name":"content-type","description":""},{"key":"date","value":"Fri, 13 Oct 2017 21:36:16 GMT","name":"date","description":""},{"key":"etag","value":"W/\\"2a-ej8lhx1Q+iRBBct5qevTAGvotAM\\"","name":"etag","description":""},{"key":"vary","value":"Origin","name":"vary","description":""},{"key":"x-powered-by","value":"HarperDB","name":"x-powered-by","description":""}],"cookie":[],"body":""}]},{"name":"Insert Multiple Dogs","request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n    \\"operation\\":\\"insert\\",\\n    \\"schema\\" :  \\"dev\\",\\n    \\"table\\":\\"dog\\",\\n    \\"records\\": [\\n      {\\n        \\"id\\" : 2,\\n        \\"dog_name\\" : \\"Harper\\",\\n        \\"owner_name\\": \\"Stephen\\",\\n        \\"breed_id\\":346,\\n        \\"age\\":5,\\n        \\"weight_lbs\\":55,\\n        \\"adorable\\":true\\n      },\\n      {\\n        \\"id\\" : 3,\\n        \\"dog_name\\" : \\"Alby\\",\\n        \\"owner_name\\": \\"Kaylan\\",\\n        \\"breed_id\\":348,\\n        \\"age\\":5,\\n        \\"weight_lbs\\":84,\\n        \\"adorable\\":true\\n      },\\n      {\\n        \\"id\\" : 4,\\n        \\"dog_name\\" : \\"Billy\\",\\n        \\"owner_name\\": \\"Zach\\",\\n        \\"breed_id\\":347,\\n        \\"age\\":4,\\n        \\"weight_lbs\\":60,\\n        \\"adorable\\":true\\n      },\\n      {\\n        \\"id\\" : 5,\\n        \\"dog_name\\" : \\"Rose Merry\\",\\n        \\"owner_name\\": \\"Zach\\",\\n        \\"breed_id\\":348,\\n        \\"age\\":6,\\n        \\"weight_lbs\\":15,\\n        \\"adorable\\":true\\n      },\\n      {\\n        \\"id\\" : 6,\\n        \\"dog_name\\" : \\"Kato\\",\\n        \\"owner_name\\": \\"Kyle\\",\\n        \\"breed_id\\":351,\\n        \\"age\\":4,\\n        \\"weight_lbs\\":28,\\n        \\"adorable\\":true\\n      },\\n      {\\n        \\"id\\" : 7,\\n        \\"dog_name\\" : \\"Simon\\",\\n        \\"owner_name\\": \\"Fred\\",\\n        \\"breed_id\\":349,\\n        \\"age\\":1,\\n        \\"weight_lbs\\":35,\\n        \\"adorable\\":true\\n      },\\n      {\\n        \\"id\\" : 8,\\n        \\"dog_name\\" : \\"Gemma\\",\\n        \\"owner_name\\": \\"Stephen\\",\\n        \\"breed_id\\":350,\\n        \\"age\\":3,\\n        \\"weight_lbs\\":55,\\n        \\"adorable\\":true\\n      },\\n      {\\n        \\"id\\" : 9,\\n        \\"dog_name\\" : \\"Gertrude\\",\\n        \\"owner_name\\": \\"Eli\\",\\n        \\"breed_id\\":158,\\n        \\"age\\":5,\\n        \\"weight_lbs\\":70,\\n        \\"adorable\\":true\\n      },\\n      {\\n        \\"id\\" : 10,\\n        \\"dog_name\\" : \\"Big Louie\\",\\n        \\"owner_name\\": \\"Eli\\",\\n        \\"breed_id\\":241,\\n        \\"age\\":11,\\n        \\"weight_lbs\\":20,\\n        \\"adorable\\":false\\n      }\\n    ]\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"Lets add some more Harper doggies!  We can add as many dog objects as we want into the records collection.  If you\'re adding a lot of objects, we would recommend using the .csv upload option (see the next section where we populate the breed table)."},"response":[{"name":"Insert Multiple Dogs","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Authorization","value":"Basic SERCX0FETUlOOnBhc3N3b3Jk","type":"text"}],"body":{"mode":"raw","raw":"{\\n    \\"operation\\":\\"insert\\",\\n    \\"schema\\" :  \\"dev\\",\\n    \\"table\\":\\"dog\\",\\n    \\"records\\": [\\n      {\\n        \\"id\\" : 2,\\n        \\"dog_name\\" : \\"Harper\\",\\n        \\"owner_name\\": \\"Stephen\\",\\n        \\"breed_id\\":346,\\n        \\"age\\":5,\\n        \\"weight_lbs\\":55,\\n        \\"adorable\\":true\\n      },\\n      {\\n        \\"id\\" : 3,\\n        \\"dog_name\\" : \\"Alby\\",\\n        \\"owner_name\\": \\"Kaylan\\",\\n        \\"breed_id\\":348,\\n        \\"age\\":5,\\n        \\"weight_lbs\\":84,\\n        \\"adorable\\":true\\n      },\\n      {\\n        \\"id\\" : 4,\\n        \\"dog_name\\" : \\"Billy\\",\\n        \\"owner_name\\": \\"Zach\\",\\n        \\"breed_id\\":347,\\n        \\"age\\":4,\\n        \\"weight_lbs\\":60,\\n        \\"adorable\\":true\\n      },\\n      {\\n        \\"id\\" : 5,\\n        \\"dog_name\\" : \\"Rose Merry\\",\\n        \\"owner_name\\": \\"Zach\\",\\n        \\"breed_id\\":348,\\n        \\"age\\":6,\\n        \\"weight_lbs\\":15,\\n        \\"adorable\\":true\\n      },\\n      {\\n        \\"id\\" : 6,\\n        \\"dog_name\\" : \\"Kato\\",\\n        \\"owner_name\\": \\"Kyle\\",\\n        \\"breed_id\\":351,\\n        \\"age\\":4,\\n        \\"weight_lbs\\":28,\\n        \\"adorable\\":true\\n      },\\n      {\\n        \\"id\\" : 7,\\n        \\"dog_name\\" : \\"Simon\\",\\n        \\"owner_name\\": \\"Fred\\",\\n        \\"breed_id\\":349,\\n        \\"age\\":1,\\n        \\"weight_lbs\\":35,\\n        \\"adorable\\":true\\n      },\\n      {\\n        \\"id\\" : 8,\\n        \\"dog_name\\" : \\"Gemma\\",\\n        \\"owner_name\\": \\"Stephen\\",\\n        \\"breed_id\\":350,\\n        \\"age\\":3,\\n        \\"weight_lbs\\":55,\\n        \\"adorable\\":true\\n      },\\n      {\\n        \\"id\\" : 9,\\n        \\"dog_name\\" : \\"Gertrude\\",\\n        \\"owner_name\\": \\"Eli\\",\\n        \\"breed_id\\":158,\\n        \\"age\\":5,\\n        \\"weight_lbs\\":70,\\n        \\"adorable\\":true\\n      },\\n      {\\n        \\"id\\" : 10,\\n        \\"dog_name\\" : \\"Big Louie\\",\\n        \\"owner_name\\": \\"Eli\\",\\n        \\"breed_id\\":241,\\n        \\"age\\":11,\\n        \\"weight_lbs\\":20,\\n        \\"adorable\\":false\\n      }\\n    ]\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"_postman_previewlanguage":null,"header":null,"cookie":[],"body":null}]},{"name":"Bulk Insert Breeds Via CSV","request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"csv_file_load\\",\\n\\t\\"schema\\":\\"dev\\",\\n\\t\\"table\\":\\"breed\\",\\n\\t\\"file_path\\":\\"/home/ubuntu/breeds.csv\\"\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"We need to populate the \'breed\' table with some data so we can reference it later.  For larger data sets, we recommend using our CSV upload option.\\n\\nEach header in a column will be consisdered as an attribute, and each row in the file will be a row in the table.  Simply specify the file path and the table to upload to, and HarperDB will take care of the rest.  You can pull the breeds.csv file from here: https://s3.amazonaws.com/complimentarydata/breeds.csv"},"response":[{"name":"Bulk Insert Breeds Via CSV","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Authorization","type":"text","name":"Authorization","value":"Basic SERCX0FETUlOOnBhc3N3b3Jk"}],"body":{"mode":"raw","raw":"{\\n  \\"operation\\":\\"csv_file_load\\",\\n  \\"schema\\":\\"dev\\",\\n  \\"table\\":\\"breed\\",\\n  \\"file_path\\":\\"/home/eli/Documents/breeds.csv\\"\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"access-control-allow-origin","value":"chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop","name":"access-control-allow-origin","description":""},{"key":"connection","value":"keep-alive","name":"connection","description":""},{"key":"content-length","value":"45","name":"content-length","description":""},{"key":"content-type","value":"application/json; charset=utf-8","name":"content-type","description":""},{"key":"date","value":"Fri, 13 Oct 2017 22:04:41 GMT","name":"date","description":""},{"key":"etag","value":"W/\\"2d-59GkoX81i6OMA/OYM8QtTn9XCRY\\"","name":"etag","description":""},{"key":"vary","value":"Origin","name":"vary","description":""},{"key":"x-powered-by","value":"HarperDB","name":"x-powered-by","description":""}],"cookie":[],"body":""},{"name":"Bulk Insert Breeds Via CSV","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n  \\"operation\\":\\"csv_file_load\\",\\n  \\"schema\\":\\"dev\\",\\n  \\"table\\":\\"breed\\",\\n  \\"file_path\\":\\"/home/ubuntu/breeds.csv\\"\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"_postman_previewlanguage":null,"header":null,"cookie":[],"body":null}]},{"name":"Update 1 Dog Using NoSQL","request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"update\\",\\n\\t\\"schema\\":\\"dev\\",\\n\\t\\"table\\":\\"dog\\",\\n\\t\\"records\\": [\\n\\t  {\\n\\t    \\"id\\": 1,\\n\\t    \\"dog_name\\": \\"Penny B\\"\\n\\t  }\\n\\t]\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"HarperDB supports NoSQL and SQL commands.  We\'re gonna update the dog table to show Penny\'s last initial using our NoSQL API."},"response":[{"name":"Update 1 Dog Using NoSQL","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Authorization","type":"text","name":"Authorization","value":"Basic SERCX0FETUlOOnBhc3N3b3Jk"}],"body":{"mode":"raw","raw":"{\\n  \\"operation\\": \\"sql\\",\\n  \\"sql\\":\\"UPDATE dev.dog SET dog_name = \'Penny B\' WHERE id = 1\\"\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"access-control-allow-origin","value":"chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop","name":"access-control-allow-origin","description":""},{"key":"connection","value":"keep-alive","name":"connection","description":""},{"key":"content-length","value":"79","name":"content-length","description":""},{"key":"content-type","value":"application/json; charset=utf-8","name":"content-type","description":""},{"key":"date","value":"Fri, 13 Oct 2017 22:13:54 GMT","name":"date","description":""},{"key":"etag","value":"W/\\"4f-XGNCkCMfhgRNnnfpsYCMwnzC7go\\"","name":"etag","description":""},{"key":"vary","value":"Origin","name":"vary","description":""},{"key":"x-powered-by","value":"HarperDB","name":"x-powered-by","description":""}],"cookie":[],"body":""}]},{"name":"Select A Dog By ID Using SQL","request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\": \\"sql\\",\\n\\t\\"sql\\":\\"SELECT * FROM dev.dog where id = 1\\"\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"Now we\'re going to use a simple SQL SELECT call to pull Penny\'s updated data.  Note we now see Penny\'s last initial in the dog name."},"response":[{"name":"Select A Dog By ID Using SQL","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Authorization","type":"text","name":"Authorization","value":"Basic SERCX0FETUlOOnBhc3N3b3Jk"}],"body":{"mode":"raw","raw":"{\\n  \\"operation\\": \\"sql\\",\\n  \\"sql\\":\\"SELECT * FROM dev.dog where id = 1\\"\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"access-control-allow-origin","value":"chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop","name":"access-control-allow-origin","description":""},{"key":"connection","value":"keep-alive","name":"connection","description":""},{"key":"content-length","value":"120","name":"content-length","description":""},{"key":"content-type","value":"application/json; charset=utf-8","name":"content-type","description":""},{"key":"date","value":"Fri, 13 Oct 2017 22:15:39 GMT","name":"date","description":""},{"key":"etag","value":"W/\\"78-YWwcol97eF8ux2qVSiLlP7FPs9A\\"","name":"etag","description":""},{"key":"vary","value":"Origin","name":"vary","description":""},{"key":"x-powered-by","value":"HarperDB","name":"x-powered-by","description":""}],"cookie":[],"body":""}]},{"name":"Select Dogs And Join Breed","request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\": \\"sql\\",\\n\\t\\"sql\\":\\"SELECT d.id, d.dog_name, d.owner_name, b.name, b.section FROM dev.dog AS d INNER JOIN dev.breed AS b ON d.breed_id = b.id WHERE d.owner_name IN (\'Kyle\', \'Zach\', \'Stephen\') AND b.section = \'Mutt\' ORDER BY d.dog_name\\"\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"Here\'s a more complex SQL command joining the breed table with the dog table.  We will also pull only the pups belonging to Kyle, Zach, and Stephen."},"response":[{"name":"Select Dogs And Join Breed","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Authorization","type":"text","name":"Authorization","value":"Basic SERCX0FETUlOOnBhc3N3b3Jk"}],"body":{"mode":"raw","raw":"{\\n  \\"operation\\": \\"sql\\",\\n  \\"sql\\":\\"SELECT d.id, d.dog_name, d.owner_name, b.name, b.section FROM dev.dog AS d INNER JOIN dev.breed AS b ON d.breed_id = b.id WHERE d.owner_name IN (\'Kyle\', \'Zach\', \'Stephen\') AND b.section = \'Mutt\' ORDER BY d.dog_name\\"\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"access-control-allow-origin","value":"chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop","name":"access-control-allow-origin","description":""},{"key":"connection","value":"keep-alive","name":"connection","description":""},{"key":"content-length","value":"389","name":"content-length","description":""},{"key":"content-type","value":"application/json; charset=utf-8","name":"content-type","description":""},{"key":"date","value":"Fri, 13 Oct 2017 22:23:56 GMT","name":"date","description":""},{"key":"etag","value":"W/\\"185-LFddXxWjnIf4b2Y2sij3GMxdkLw\\"","name":"etag","description":""},{"key":"vary","value":"Origin","name":"vary","description":""},{"key":"x-powered-by","value":"HarperDB","name":"x-powered-by","description":""}],"cookie":[],"body":""}]}],"event":[{"listen":"prerequest","script":{"id":"d432ca46-d9cb-4367-ae5b-3d341ac55c90","type":"text/javascript","exec":[""]}},{"listen":"test","script":{"id":"3a65bedf-0e63-4bb1-9704-e0da94500ccf","type":"text/javascript","exec":[""]}}],"protocolProfileBehavior":{}},{"name":"Advanced JSON SQL Examples","item":[{"name":"Create movies Schema","request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"create_schema\\",\\n\\t\\"schema\\":\\"movies\\"\\n}","options":{"raw":{}}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"response":[]},{"name":"Create movie Table","request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"create_table\\",\\n\\t\\"schema\\":\\"movies\\",\\n\\t\\"table\\":\\"movie\\",\\n\\t\\"hash_attribute\\":\\"id\\"\\n}","options":{"raw":{}}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"response":[]},{"name":"Create credits Table","request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"create_table\\",\\n\\t\\"schema\\":\\"movies\\",\\n\\t\\"table\\":\\"credits\\",\\n\\t\\"hash_attribute\\":\\"movie_id\\"\\n}","options":{"raw":{}}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"response":[]},{"name":"Bulk Insert movie Via CSV","request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"csv_url_load\\",\\n\\t\\"schema\\":\\"movies\\",\\n\\t\\"table\\":\\"movie\\",\\n\\t\\"csv_url\\":\\"https://search-json-sample-data.s3.us-east-2.amazonaws.com/movie.csv\\"\\n}","options":{"raw":{}}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"response":[]},{"name":"Bulk Insert credits Via CSV","request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"csv_url_load\\",\\n\\t\\"schema\\":\\"movies\\",\\n\\t\\"table\\":\\"credits\\",\\n\\t\\"csv_url\\":\\"https://search-json-sample-data.s3.us-east-2.amazonaws.com/credits.csv\\"\\n}","options":{"raw":{}}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"response":[]},{"name":"View raw data","request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"sql\\",\\n\\t\\"sql\\":\\"SELECT title, rank, keywords, production_companies FROM movies.movie order by rank limit 10\\"\\n}","options":{"raw":{}}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"In the following example we will be running expressions on the keywords & production_companies attributes, so for context we are displaying what the raw data looks like."},"response":[{"name":"View raw data","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"sql\\",\\n\\t\\"sql\\":\\"SELECT title, rank, keywords, production_companies FROM movies.movie order by rank limit 10\\"\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Vary","value":"Origin, Accept-Encoding"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Encoding","value":"gzip"},{"key":"Date","value":"Thu, 14 May 2020 17:21:14 GMT"},{"key":"Connection","value":"keep-alive"},{"key":"Transfer-Encoding","value":"chunked"}],"cookie":[],"body":"[\\n    {\\n        \\"title\\": \\"Ad Astra\\",\\n        \\"rank\\": 1,\\n        \\"keywords\\": [\\n            {\\n                \\"id\\": 305,\\n                \\"name\\": \\"moon\\"\\n            },\\n            {\\n                \\"id\\": 697,\\n                \\"name\\": \\"loss of loved one\\"\\n            },\\n            {\\n                \\"id\\": 839,\\n                \\"name\\": \\"planet mars\\"\\n            },\\n            {\\n                \\"id\\": 14626,\\n                \\"name\\": \\"astronaut\\"\\n            },\\n            {\\n                \\"id\\": 157265,\\n                \\"name\\": \\"moon colony\\"\\n            },\\n            {\\n                \\"id\\": 162429,\\n                \\"name\\": \\"solar system\\"\\n            },\\n            {\\n                \\"id\\": 240119,\\n                \\"name\\": \\"father son relationship\\"\\n            },\\n            {\\n                \\"id\\": 244256,\\n                \\"name\\": \\"near future\\"\\n            },\\n            {\\n                \\"id\\": 257878,\\n                \\"name\\": \\"planet neptune\\"\\n            },\\n            {\\n                \\"id\\": 260089,\\n                \\"name\\": \\"space walk\\"\\n            }\\n        ],\\n        \\"production_companies\\": [\\n            {\\n                \\"id\\": 490,\\n                \\"name\\": \\"New Regency Productions\\",\\n                \\"origin_country\\": \\"\\"\\n            },\\n            {\\n                \\"id\\": 79963,\\n                \\"name\\": \\"Keep Your Head\\",\\n                \\"origin_country\\": \\"\\"\\n            },\\n            {\\n                \\"id\\": 73492,\\n                \\"name\\": \\"MadRiver Pictures\\",\\n                \\"origin_country\\": \\"\\"\\n            },\\n            {\\n                \\"id\\": 81,\\n                \\"name\\": \\"Plan B Entertainment\\",\\n                \\"origin_country\\": \\"US\\"\\n            },\\n            {\\n                \\"id\\": 30666,\\n                \\"name\\": \\"RT Features\\",\\n                \\"origin_country\\": \\"BR\\"\\n            },\\n            {\\n                \\"id\\": 30148,\\n                \\"name\\": \\"Bona Film Group\\",\\n                \\"origin_country\\": \\"CN\\"\\n            },\\n            {\\n                \\"id\\": 22213,\\n                \\"name\\": \\"TSG Entertainment\\",\\n                \\"origin_country\\": \\"US\\"\\n            }\\n        ]\\n    },\\n    {\\n        \\"title\\": \\"Extraction\\",\\n        \\"rank\\": 2,\\n        \\"keywords\\": [\\n            {\\n                \\"id\\": 3070,\\n                \\"name\\": \\"mercenary\\"\\n            },\\n            {\\n                \\"id\\": 4110,\\n                \\"name\\": \\"mumbai (bombay), india\\"\\n            },\\n            {\\n                \\"id\\": 9717,\\n                \\"name\\": \\"based on comic\\"\\n            },\\n            {\\n                \\"id\\": 9730,\\n                \\"name\\": \\"crime boss\\"\\n            },\\n            {\\n                \\"id\\": 11107,\\n                \\"name\\": \\"rescue mission\\"\\n            },\\n            {\\n                \\"id\\": 18712,\\n                \\"name\\": \\"based on graphic novel\\"\\n            },\\n            {\\n                \\"id\\": 265216,\\n                \\"name\\": \\"dhaka (dacca), bangladesh\\"\\n            }\\n        ],\\n        \\"production_companies\\": [\\n            {\\n                \\"id\\": 106544,\\n                \\"name\\": \\"AGBO\\",\\n                \\"origin_country\\": \\"US\\"\\n            },\\n            {\\n                \\"id\\": 109172,\\n                \\"name\\": \\"Thematic Entertainment\\",\\n                \\"origin_country\\": \\"US\\"\\n            },\\n            {\\n                \\"id\\": 92029,\\n                \\"name\\": \\"TGIM Films\\",\\n                \\"origin_country\\": \\"US\\"\\n            }\\n        ]\\n    },\\n    {\\n        \\"title\\": \\"To the Beat! Back 2 School\\",\\n        \\"rank\\": 3,\\n        \\"keywords\\": [\\n            {\\n                \\"id\\": 10873,\\n                \\"name\\": \\"school\\"\\n            }\\n        ],\\n        \\"production_companies\\": []\\n    },\\n    {\\n        \\"title\\": \\"Bloodshot\\",\\n        \\"rank\\": 4,\\n        \\"keywords\\": [\\n            {\\n                \\"id\\": 2651,\\n                \\"name\\": \\"nanotechnology\\"\\n            },\\n            {\\n                \\"id\\": 9715,\\n                \\"name\\": \\"superhero\\"\\n            },\\n            {\\n                \\"id\\": 9717,\\n                \\"name\\": \\"based on comic\\"\\n            },\\n            {\\n                \\"id\\": 164218,\\n                \\"name\\": \\"psychotronic\\"\\n            },\\n            {\\n                \\"id\\": 255024,\\n                \\"name\\": \\"shared universe\\"\\n            },\\n            {\\n                \\"id\\": 258575,\\n                \\"name\\": \\"valiant comics\\"\\n            }\\n        ],\\n        \\"production_companies\\": [\\n            {\\n                \\"id\\": 34,\\n                \\"name\\": \\"Sony Pictures\\",\\n                \\"origin_country\\": \\"US\\"\\n            },\\n            {\\n                \\"id\\": 10246,\\n                \\"name\\": \\"Cross Creek Pictures\\",\\n                \\"origin_country\\": \\"US\\"\\n            },\\n            {\\n                \\"id\\": 6573,\\n                \\"name\\": \\"Mimran Schur Pictures\\",\\n                \\"origin_country\\": \\"US\\"\\n            },\\n            {\\n                \\"id\\": 333,\\n                \\"name\\": \\"Original Film\\",\\n                \\"origin_country\\": \\"US\\"\\n            },\\n            {\\n                \\"id\\": 103673,\\n                \\"name\\": \\"The Hideaway Entertainment\\",\\n                \\"origin_country\\": \\"US\\"\\n            },\\n            {\\n                \\"id\\": 124335,\\n                \\"name\\": \\"Valiant Entertainment\\",\\n                \\"origin_country\\": \\"US\\"\\n            },\\n            {\\n                \\"id\\": 5,\\n                \\"name\\": \\"Columbia Pictures\\",\\n                \\"origin_country\\": \\"US\\"\\n            },\\n            {\\n                \\"id\\": 1225,\\n                \\"name\\": \\"One Race\\",\\n                \\"origin_country\\": \\"US\\"\\n            },\\n            {\\n                \\"id\\": 30148,\\n                \\"name\\": \\"Bona Film Group\\",\\n                \\"origin_country\\": \\"CN\\"\\n            }\\n        ]\\n    },\\n    {\\n        \\"title\\": \\"The Call of the Wild\\",\\n        \\"rank\\": 5,\\n        \\"keywords\\": [\\n            {\\n                \\"id\\": 818,\\n                \\"name\\": \\"based on novel or book\\"\\n            },\\n            {\\n                \\"id\\": 4542,\\n                \\"name\\": \\"gold rush\\"\\n            },\\n            {\\n                \\"id\\": 15162,\\n                \\"name\\": \\"dog\\"\\n            },\\n            {\\n                \\"id\\": 155821,\\n                \\"name\\": \\"sled dogs\\"\\n            },\\n            {\\n                \\"id\\": 189390,\\n                \\"name\\": \\"yukon\\"\\n            },\\n            {\\n                \\"id\\": 207928,\\n                \\"name\\": \\"19th century\\"\\n            },\\n            {\\n                \\"id\\": 259987,\\n                \\"name\\": \\"cgi animation\\"\\n            },\\n            {\\n                \\"id\\": 263806,\\n                \\"name\\": \\"1890s\\"\\n            }\\n        ],\\n        \\"production_companies\\": [\\n            {\\n                \\"id\\": 787,\\n                \\"name\\": \\"3 Arts Entertainment\\",\\n                \\"origin_country\\": \\"US\\"\\n            },\\n            {\\n                \\"id\\": 127928,\\n                \\"name\\": \\"20th Century Studios\\",\\n                \\"origin_country\\": \\"US\\"\\n            },\\n            {\\n                \\"id\\": 22213,\\n                \\"name\\": \\"TSG Entertainment\\",\\n                \\"origin_country\\": \\"US\\"\\n            }\\n        ]\\n    },\\n    {\\n        \\"title\\": \\"Sonic the Hedgehog\\",\\n        \\"rank\\": 6,\\n        \\"keywords\\": [\\n            {\\n                \\"id\\": 282,\\n                \\"name\\": \\"video game\\"\\n            },\\n            {\\n                \\"id\\": 6054,\\n                \\"name\\": \\"friendship\\"\\n            },\\n            {\\n                \\"id\\": 10842,\\n                \\"name\\": \\"good vs evil\\"\\n            },\\n            {\\n                \\"id\\": 41645,\\n                \\"name\\": \\"based on video game\\"\\n            },\\n            {\\n                \\"id\\": 167043,\\n                \\"name\\": \\"road movie\\"\\n            },\\n            {\\n                \\"id\\": 172142,\\n                \\"name\\": \\"farting\\"\\n            },\\n            {\\n                \\"id\\": 188933,\\n                \\"name\\": \\"bar fight\\"\\n            },\\n            {\\n                \\"id\\": 226967,\\n                \\"name\\": \\"amistad\\"\\n            },\\n            {\\n                \\"id\\": 245230,\\n                \\"name\\": \\"live action remake\\"\\n            },\\n            {\\n                \\"id\\": 258111,\\n                \\"name\\": \\"fantasy\\"\\n            },\\n            {\\n                \\"id\\": 260223,\\n                \\"name\\": \\"videojuego\\"\\n            }\\n        ],\\n        \\"production_companies\\": [\\n            {\\n                \\"id\\": 333,\\n                \\"name\\": \\"Original Film\\",\\n                \\"origin_country\\": \\"US\\"\\n            },\\n            {\\n                \\"id\\": 10644,\\n                \\"name\\": \\"Blur Studios\\",\\n                \\"origin_country\\": \\"US\\"\\n            },\\n            {\\n                \\"id\\": 77884,\\n                \\"name\\": \\"Marza Animation Planet\\",\\n                \\"origin_country\\": \\"JP\\"\\n            },\\n            {\\n                \\"id\\": 4,\\n                \\"name\\": \\"Paramount\\",\\n                \\"origin_country\\": \\"US\\"\\n            },\\n            {\\n                \\"id\\": 113750,\\n                \\"name\\": \\"SEGA\\",\\n                \\"origin_country\\": \\"JP\\"\\n            },\\n            {\\n                \\"id\\": 100711,\\n                \\"name\\": \\"DJ2 Entertainment\\",\\n                \\"origin_country\\": \\"\\"\\n            },\\n            {\\n                \\"id\\": 24955,\\n                \\"name\\": \\"Paramount Animation\\",\\n                \\"origin_country\\": \\"US\\"\\n            }\\n        ]\\n    },\\n    {\\n        \\"title\\": \\"Birds of Prey (and the Fantabulous Emancipation of One Harley Quinn)\\",\\n        \\"rank\\": 7,\\n        \\"keywords\\": [\\n            {\\n                \\"id\\": 849,\\n                \\"name\\": \\"dc comics\\"\\n            },\\n            {\\n                \\"id\\": 9717,\\n                \\"name\\": \\"based on comic\\"\\n            },\\n            {\\n                \\"id\\": 187056,\\n                \\"name\\": \\"woman director\\"\\n            },\\n            {\\n                \\"id\\": 229266,\\n                \\"name\\": \\"dc extended universe\\"\\n            }\\n        ],\\n        \\"production_companies\\": [\\n            {\\n                \\"id\\": 9993,\\n                \\"name\\": \\"DC Entertainment\\",\\n                \\"origin_country\\": \\"US\\"\\n            },\\n            {\\n                \\"id\\": 82968,\\n                \\"name\\": \\"LuckyChap Entertainment\\",\\n                \\"origin_country\\": \\"GB\\"\\n            },\\n            {\\n                \\"id\\": 103462,\\n                \\"name\\": \\"Kroll & Co Entertainment\\",\\n                \\"origin_country\\": \\"US\\"\\n            },\\n            {\\n                \\"id\\": 174,\\n                \\"name\\": \\"Warner Bros. Pictures\\",\\n                \\"origin_country\\": \\"US\\"\\n            },\\n            {\\n                \\"id\\": 429,\\n                \\"name\\": \\"DC Comics\\",\\n                \\"origin_country\\": \\"US\\"\\n            },\\n            {\\n                \\"id\\": 128064,\\n                \\"name\\": \\"DC Films\\",\\n                \\"origin_country\\": \\"US\\"\\n            },\\n            {\\n                \\"id\\": 101831,\\n                \\"name\\": \\"Clubhouse Pictures\\",\\n                \\"origin_country\\": \\"US\\"\\n            }\\n        ]\\n    },\\n    {\\n        \\"title\\": \\"Justice League Dark: Apokolips War\\",\\n        \\"rank\\": 8,\\n        \\"keywords\\": [\\n            {\\n                \\"id\\": 849,\\n                \\"name\\": \\"dc comics\\"\\n            }\\n        ],\\n        \\"production_companies\\": [\\n            {\\n                \\"id\\": 2785,\\n                \\"name\\": \\"Warner Bros. Animation\\",\\n                \\"origin_country\\": \\"US\\"\\n            },\\n            {\\n                \\"id\\": 9993,\\n                \\"name\\": \\"DC Entertainment\\",\\n                \\"origin_country\\": \\"US\\"\\n            },\\n            {\\n                \\"id\\": 429,\\n                \\"name\\": \\"DC Comics\\",\\n                \\"origin_country\\": \\"US\\"\\n            }\\n        ]\\n    },\\n    {\\n        \\"title\\": \\"Parasite\\",\\n        \\"rank\\": 9,\\n        \\"keywords\\": [\\n            {\\n                \\"id\\": 1353,\\n                \\"name\\": \\"underground\\"\\n            },\\n            {\\n                \\"id\\": 5318,\\n                \\"name\\": \\"seoul\\"\\n            },\\n            {\\n                \\"id\\": 5732,\\n                \\"name\\": \\"birthday party\\"\\n            },\\n            {\\n                \\"id\\": 5752,\\n                \\"name\\": \\"private lessons\\"\\n            },\\n            {\\n                \\"id\\": 9866,\\n                \\"name\\": \\"basement\\"\\n            },\\n            {\\n                \\"id\\": 10453,\\n                \\"name\\": \\"con artist\\"\\n            },\\n            {\\n                \\"id\\": 11935,\\n                \\"name\\": \\"working class\\"\\n            },\\n            {\\n                \\"id\\": 12565,\\n                \\"name\\": \\"psychological thriller\\"\\n            },\\n            {\\n                \\"id\\": 13126,\\n                \\"name\\": \\"limousine driver\\"\\n            },\\n            {\\n                \\"id\\": 14514,\\n                \\"name\\": \\"class differences\\"\\n            },\\n            {\\n                \\"id\\": 14864,\\n                \\"name\\": \\"rich poor\\"\\n            },\\n            {\\n                \\"id\\": 17997,\\n                \\"name\\": \\"housekeeper\\"\\n            },\\n            {\\n                \\"id\\": 18015,\\n                \\"name\\": \\"tutor\\"\\n            },\\n            {\\n                \\"id\\": 18035,\\n                \\"name\\": \\"family\\"\\n            },\\n            {\\n                \\"id\\": 33421,\\n                \\"name\\": \\"crime family\\"\\n            },\\n            {\\n                \\"id\\": 173272,\\n                \\"name\\": \\"flood\\"\\n            },\\n            {\\n                \\"id\\": 188861,\\n                \\"name\\": \\"smell\\"\\n            },\\n            {\\n                \\"id\\": 198673,\\n                \\"name\\": \\"unemployed\\"\\n            },\\n            {\\n                \\"id\\": 237462,\\n                \\"name\\": \\"wealthy family\\"\\n            }\\n        ],\\n        \\"production_companies\\": [\\n            {\\n                \\"id\\": 7036,\\n                \\"name\\": \\"CJ Entertainment\\",\\n                \\"origin_country\\": \\"KR\\"\\n            },\\n            {\\n                \\"id\\": 4399,\\n                \\"name\\": \\"Barunson E&A\\",\\n                \\"origin_country\\": \\"KR\\"\\n            }\\n        ]\\n    },\\n    {\\n        \\"title\\": \\"Star Wars: The Rise of Skywalker\\",\\n        \\"rank\\": 10,\\n        \\"keywords\\": [\\n            {\\n                \\"id\\": 161176,\\n                \\"name\\": \\"space opera\\"\\n            }\\n        ],\\n        \\"production_companies\\": [\\n            {\\n                \\"id\\": 1,\\n                \\"name\\": \\"Lucasfilm\\",\\n                \\"origin_country\\": \\"US\\"\\n            },\\n            {\\n                \\"id\\": 11461,\\n                \\"name\\": \\"Bad Robot\\",\\n                \\"origin_country\\": \\"US\\"\\n            },\\n            {\\n                \\"id\\": 2,\\n                \\"name\\": \\"Walt Disney Pictures\\",\\n                \\"origin_country\\": \\"US\\"\\n            },\\n            {\\n                \\"id\\": 120404,\\n                \\"name\\": \\"British Film Commission\\",\\n                \\"origin_country\\": \\"\\"\\n            }\\n        ]\\n    }\\n]"}]},{"name":"Simple search_json call","request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"sql\\",\\n\\t\\"sql\\":\\"SELECT title, rank, search_json(\'[name]\', keywords) as keywords FROM movies.movie order by rank limit 10\\"\\n}","options":{"raw":{}}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"This query uses search_json to convert the keywords object array to a simple string array.  The expression \'[name]\' tells the function to extract all values for the name attribute and wrap them in an array."},"response":[{"name":"Simple search_json call","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"sql\\",\\n\\t\\"sql\\":\\"SELECT title, search_json(\'name\', keywords) as keywords FROM movies.movie limit 10\\"\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Vary","value":"Origin, Accept-Encoding"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Encoding","value":"gzip"},{"key":"Date","value":"Mon, 11 May 2020 17:46:00 GMT"},{"key":"Connection","value":"keep-alive"},{"key":"Transfer-Encoding","value":"chunked"}],"cookie":[],"body":"[\\n    {\\n        \\"title\\": \\"Four Rooms\\",\\n        \\"keywords\\": [\\n            \\"hotel\\",\\n            \\"new year\'s eve\\",\\n            \\"witch\\",\\n            \\"bet\\",\\n            \\"hotel room\\",\\n            \\"sperm\\",\\n            \\"los angeles\\",\\n            \\"hoodlum\\",\\n            \\"woman director\\",\\n            \\"episode film\\"\\n        ]\\n    },\\n    {\\n        \\"title\\": \\"Star Wars\\",\\n        \\"keywords\\": [\\n            \\"android\\",\\n            \\"galaxy\\",\\n            \\"hermit\\",\\n            \\"death star\\",\\n            \\"lightsaber\\",\\n            \\"jedi\\",\\n            \\"rescue mission\\",\\n            \\"empire\\",\\n            \\"rebellion\\",\\n            \\"planet\\",\\n            \\"smuggler\\",\\n            \\"the force\\",\\n            \\"space opera\\",\\n            \\"galactic war\\",\\n            \\"stormtrooper\\",\\n            \\"totalitarianism\\"\\n        ]\\n    },\\n    {\\n        \\"title\\": \\"Finding Nemo\\",\\n        \\"keywords\\": [\\n            \\"father son relationship\\",\\n            \\"harbor\\",\\n            \\"underwater\\",\\n            \\"fish tank\\",\\n            \\"great barrier reef\\",\\n            \\"missing child\\",\\n            \\"aftercreditsstinger\\",\\n            \\"duringcreditsstinger\\",\\n            \\"short term memory loss\\",\\n            \\"clownfish\\",\\n            \\"father son reunion\\",\\n            \\"protective father\\"\\n        ]\\n    },\\n    {\\n        \\"title\\": \\"Forrest Gump\\",\\n        \\"keywords\\": [\\n            \\"vietnam veteran\\",\\n            \\"hippie\\",\\n            \\"mentally disabled\\",\\n            \\"running\\",\\n            \\"based on novel\\",\\n            \\"vietnam\\",\\n            \\"vietnam war\\",\\n            \\"friendship\\",\\n            \\"love\\",\\n            \\"family relationships\\",\\n            \\"bully\\",\\n            \\"mother son relationship\\",\\n            \\"military\\",\\n            \\"hugging\\",\\n            \\"shrimping\\",\\n            \\"wounded soldier\\",\\n            \\"flashback\\",\\n            \\"park bench\\",\\n            \\"amputee\\"\\n        ]\\n    },\\n    {\\n        \\"title\\": \\"American Beauty\\",\\n        \\"keywords\\": [\\n            \\"male nudity\\",\\n            \\"female nudity\\",\\n            \\"adultery\\",\\n            \\"midlife crisis\\",\\n            \\"coming out\\",\\n            \\"first time\\",\\n            \\"camcorder\\",\\n            \\"virgin\\",\\n            \\"nudity\\",\\n            \\"film maker\\",\\n            \\"estate agent\\",\\n            \\"satire\\",\\n            \\"loneliness\\",\\n            \\"dark comedy\\",\\n            \\"suburbia\\",\\n            \\"coming of age\\",\\n            \\"marijuana\\",\\n            \\"exercise\\",\\n            \\"parent child relationship\\",\\n            \\"bittersweet\\",\\n            \\"affair\\"\\n        ]\\n    },\\n    {\\n        \\"title\\": \\"Dancer in the Dark\\",\\n        \\"keywords\\": [\\n            \\"individual\\",\\n            \\"dancing\\",\\n            \\"usa\\",\\n            \\"robbery\\",\\n            \\"factory worker\\",\\n            \\"secret\\",\\n            \\"factory\\",\\n            \\"small town\\",\\n            \\"dance\\",\\n            \\"blindness and impaired vision\\",\\n            \\"death penalty\\",\\n            \\"immigrant\\",\\n            \\"eye operation\\",\\n            \\"eyesight\\",\\n            \\"fantasy\\",\\n            \\"naivety\\",\\n            \\"self-abandonment\\",\\n            \\"hereditary disease\\",\\n            \\"loss of eyesight\\",\\n            \\"czech\\",\\n            \\"dying and death\\",\\n            \\"van\\",\\n            \\"friendship\\",\\n            \\"murder\\",\\n            \\"teacher\\",\\n            \\"debt\\",\\n            \\"execution\\",\\n            \\"crime\\",\\n            \\"police officer\\"\\n        ]\\n    },\\n    {\\n        \\"title\\": \\"The Fifth Element\\",\\n        \\"keywords\\": [\\n            \\"clone\\",\\n            \\"taxi\\",\\n            \\"cyborg\\",\\n            \\"egypt\\",\\n            \\"future\\",\\n            \\"stowaway\\",\\n            \\"space travel\\",\\n            \\"race against time\\",\\n            \\"arms dealer\\",\\n            \\"love\\",\\n            \\"alien\\",\\n            \\"priest\\",\\n            \\"end of the world\\",\\n            \\"good vs evil\\",\\n            \\"shootout\\",\\n            \\"police chase\\",\\n            \\"cab driver\\",\\n            \\"new york city\\",\\n            \\"space opera\\",\\n            \\"military\\",\\n            \\"opera singer\\",\\n            \\"resort hotel\\",\\n            \\"ancient astronaut\\",\\n            \\"archeologist\\",\\n            \\"ancient evil\\",\\n            \\"cruise liner\\"\\n        ]\\n    },\\n    {\\n        \\"title\\": \\"Metropolis\\",\\n        \\"keywords\\": [\\n            \\"man vs machine\\",\\n            \\"underground world\\",\\n            \\"inventor\\",\\n            \\"metropolis\\",\\n            \\"worker\\",\\n            \\"future\\",\\n            \\"machine town\\",\\n            \\"work\\",\\n            \\"class society\\",\\n            \\"dystopia\\",\\n            \\"tower of babel\\",\\n            \\"delirium\\",\\n            \\"chase scene\\",\\n            \\"mad scientist\\",\\n            \\"prophet\\",\\n            \\"robot\\",\\n            \\"destruction\\",\\n            \\"silent film\\",\\n            \\"depravity\\",\\n            \\"masterpiece\\",\\n            \\"downtrodden\\",\\n            \\"saviour\\"\\n        ]\\n    },\\n    {\\n        \\"title\\": \\"My Life Without Me\\",\\n        \\"keywords\\": [\\n            \\"farewell\\",\\n            \\"responsability\\",\\n            \\"dying and death\\",\\n            \\"night shift\\",\\n            \\"daughter\\",\\n            \\"secret love\\",\\n            \\"mother daughter relationship\\",\\n            \\"woman director\\"\\n        ]\\n    },\\n    {\\n        \\"title\\": \\"Pirates of the Caribbean: The Curse of the Black Pearl\\",\\n        \\"keywords\\": [\\n            \\"exotic island\\",\\n            \\"blacksmith\\",\\n            \\"east india trading company\\",\\n            \\"gold\\",\\n            \\"marriage proposal\\",\\n            \\"mutiny\\",\\n            \\"jamaica\\",\\n            \\"skeleton\\",\\n            \\"daughter\\",\\n            \\"governor\\",\\n            \\"wooden eye\\",\\n            \\"gold coin\\",\\n            \\"pirate\\",\\n            \\"alcoholic\\",\\n            \\"swashbuckler\\",\\n            \\"caribbean\\",\\n            \\"aftercreditsstinger\\",\\n            \\"pirate ship\\",\\n            \\"capuchin monkey\\",\\n            \\"tortuga\\"\\n        ]\\n    }\\n]"}]},{"name":"Use search_json in a where clause","request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"sql\\",\\n\\t\\"sql\\":\\"SELECT title, release_date FROM movies.movie where search_json(\'$[name=\\\\\\"Marvel Studios\\\\\\"]\', production_companies) is not null ORDER BY release_date\\"\\n}","options":{"raw":{}}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"This example shows how we can use SEARCH_JSON to filter out records in a WHERE clause. The production_companies attribute holds an object array of companies that produced each movie, we want to only see movies which were produced by Marvel Studios.  Our expression is a filter \'$[name=\\"Marvel Studios\\"]\' this tells the function to iterate the production_companies array and only return entries where the name is \\"Marvel Studios\\"."},"response":[{"name":"Use search_json in a where clause","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"sql\\",\\n\\t\\"sql\\":\\"SELECT title, release_date FROM movies.movie where search_json(\'$[name=\\\\\\"Marvel Studios\\\\\\"]\', production_companies) is not null ORDER BY release_date\\"\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Vary","value":"Origin, Accept-Encoding"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Encoding","value":"gzip"},{"key":"Date","value":"Tue, 12 May 2020 21:17:30 GMT"},{"key":"Connection","value":"keep-alive"},{"key":"Transfer-Encoding","value":"chunked"}],"cookie":[],"body":"[\\n    {\\n        \\"title\\": \\"Iron Man\\",\\n        \\"release_date\\": \\"2008-04-30\\"\\n    },\\n    {\\n        \\"title\\": \\"The Incredible Hulk\\",\\n        \\"release_date\\": \\"2008-06-12\\"\\n    },\\n    {\\n        \\"title\\": \\"Iron Man 2\\",\\n        \\"release_date\\": \\"2010-04-28\\"\\n    },\\n    {\\n        \\"title\\": \\"Thor\\",\\n        \\"release_date\\": \\"2011-04-21\\"\\n    },\\n    {\\n        \\"title\\": \\"Captain America: The First Avenger\\",\\n        \\"release_date\\": \\"2011-07-22\\"\\n    },\\n    {\\n        \\"title\\": \\"Marvel One-Shot: The Consultant\\",\\n        \\"release_date\\": \\"2011-09-12\\"\\n    },\\n    {\\n        \\"title\\": \\"Marvel One-Shot: A Funny Thing Happened on the Way to Thor\'s Hammer\\",\\n        \\"release_date\\": \\"2011-10-25\\"\\n    },\\n    {\\n        \\"title\\": \\"The Avengers\\",\\n        \\"release_date\\": \\"2012-04-25\\"\\n    },\\n    {\\n        \\"title\\": \\"Marvel One-Shot: Item 47\\",\\n        \\"release_date\\": \\"2012-09-13\\"\\n    },\\n    {\\n        \\"title\\": \\"Iron Man 3\\",\\n        \\"release_date\\": \\"2013-04-18\\"\\n    },\\n    {\\n        \\"title\\": \\"Marvel One-Shot: Agent Carter\\",\\n        \\"release_date\\": \\"2013-09-08\\"\\n    },\\n    {\\n        \\"title\\": \\"Thor: The Dark World\\",\\n        \\"release_date\\": \\"2013-10-29\\"\\n    },\\n    {\\n        \\"title\\": \\"Marvel One-Shot: All Hail the King\\",\\n        \\"release_date\\": \\"2014-02-04\\"\\n    },\\n    {\\n        \\"title\\": \\"Marvel Studios: Assembling a Universe\\",\\n        \\"release_date\\": \\"2014-03-18\\"\\n    },\\n    {\\n        \\"title\\": \\"Captain America: The Winter Soldier\\",\\n        \\"release_date\\": \\"2014-03-20\\"\\n    },\\n    {\\n        \\"title\\": \\"Guardians of the Galaxy\\",\\n        \\"release_date\\": \\"2014-07-30\\"\\n    },\\n    {\\n        \\"title\\": \\"Avengers: Age of Ultron\\",\\n        \\"release_date\\": \\"2015-04-22\\"\\n    },\\n    {\\n        \\"title\\": \\"Ant-Man\\",\\n        \\"release_date\\": \\"2015-07-14\\"\\n    },\\n    {\\n        \\"title\\": \\"Captain America: Civil War\\",\\n        \\"release_date\\": \\"2016-04-27\\"\\n    },\\n    {\\n        \\"title\\": \\"Team Thor\\",\\n        \\"release_date\\": \\"2016-08-28\\"\\n    },\\n    {\\n        \\"title\\": \\"Doctor Strange\\",\\n        \\"release_date\\": \\"2016-10-25\\"\\n    },\\n    {\\n        \\"title\\": \\"Guardians of the Galaxy Vol. 2\\",\\n        \\"release_date\\": \\"2017-04-19\\"\\n    },\\n    {\\n        \\"title\\": \\"Spider-Man: Homecoming\\",\\n        \\"release_date\\": \\"2017-07-05\\"\\n    },\\n    {\\n        \\"title\\": \\"Thor: Ragnarok\\",\\n        \\"release_date\\": \\"2017-10-25\\"\\n    },\\n    {\\n        \\"title\\": \\"Black Panther\\",\\n        \\"release_date\\": \\"2018-02-13\\"\\n    },\\n    {\\n        \\"title\\": \\"Avengers: Infinity War\\",\\n        \\"release_date\\": \\"2018-04-25\\"\\n    },\\n    {\\n        \\"title\\": \\"Ant-Man and the Wasp\\",\\n        \\"release_date\\": \\"2018-07-04\\"\\n    },\\n    {\\n        \\"title\\": \\"Captain Marvel\\",\\n        \\"release_date\\": \\"2019-03-06\\"\\n    },\\n    {\\n        \\"title\\": \\"Avengers: Endgame\\",\\n        \\"release_date\\": \\"2019-04-24\\"\\n    },\\n    {\\n        \\"title\\": \\"Spider-Man: Far from Home\\",\\n        \\"release_date\\": \\"2019-06-28\\"\\n    },\\n    {\\n        \\"title\\": \\"Black Widow\\",\\n        \\"release_date\\": \\"2020-10-28\\"\\n    },\\n    {\\n        \\"title\\": \\"Untitled Spider-Man 3\\",\\n        \\"release_date\\": \\"2021-11-04\\"\\n    },\\n    {\\n        \\"title\\": \\"Thor: Love and Thunder\\",\\n        \\"release_date\\": \\"2022-02-10\\"\\n    },\\n    {\\n        \\"title\\": \\"Doctor Strange in the Multiverse of Madness\\",\\n        \\"release_date\\": \\"2022-03-23\\"\\n    },\\n    {\\n        \\"title\\": \\"Untitled Marvel Project (3)\\",\\n        \\"release_date\\": \\"2022-07-29\\"\\n    },\\n    {\\n        \\"title\\": \\"Guardians of the Galaxy Vol. 3\\",\\n        \\"release_date\\": \\"2023-02-16\\"\\n    }\\n]"}]},{"name":"Use search_json to show the movies with the largest casts","request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"sql\\",\\n\\t\\"sql\\":\\"SELECT movie_title, search_json(\'$count(id)\', `cast`) as cast_size FROM movies.credits order by cast_size DESC limit 10\\"\\n}","options":{"raw":{}}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"This example shows how we can use SEARCH_JSON to perform a simple calculation on JSON and order by the results.  The cast attribute holds an object array of details around the cast of a movie. We use the expression \'$count(id)\' that counts each id and returns the value back which we alias in SQL as cast_size which in turn gets used to sort the rows."},"response":[{"name":"Use search_json to show the movies with the largest casts","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"sql\\",\\n\\t\\"sql\\":\\"SELECT movie_title, search_json(\'$count(id)\', `cast`) as cast_size FROM movies.credits order by cast_size DESC limit 10\\"\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Vary","value":"Origin, Accept-Encoding"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"550"},{"key":"Date","value":"Thu, 14 May 2020 18:08:11 GMT"},{"key":"Connection","value":"keep-alive"}],"cookie":[],"body":"[\\n    {\\n        \\"movie_title\\": \\"Around the World in Eighty Days\\",\\n        \\"cast_size\\": 312\\n    },\\n    {\\n        \\"movie_title\\": \\"And the Oscar Goes To...\\",\\n        \\"cast_size\\": 259\\n    },\\n    {\\n        \\"movie_title\\": \\"Rock of Ages\\",\\n        \\"cast_size\\": 223\\n    },\\n    {\\n        \\"movie_title\\": \\"Mr. Smith Goes to Washington\\",\\n        \\"cast_size\\": 213\\n    },\\n    {\\n        \\"movie_title\\": \\"Les Mis\xe9rables\\",\\n        \\"cast_size\\": 208\\n    },\\n    {\\n        \\"movie_title\\": \\"Jason Bourne\\",\\n        \\"cast_size\\": 201\\n    },\\n    {\\n        \\"movie_title\\": \\"The Muppets\\",\\n        \\"cast_size\\": 191\\n    },\\n    {\\n        \\"movie_title\\": \\"You Don\'t Mess with the Zohan\\",\\n        \\"cast_size\\": 183\\n    },\\n    {\\n        \\"movie_title\\": \\"The Irishman\\",\\n        \\"cast_size\\": 173\\n    },\\n    {\\n        \\"movie_title\\": \\"Spider-Man: Far from Home\\",\\n        \\"cast_size\\": 173\\n    }\\n]"}]},{"name":"search_json as a condition, in a select with a table join","request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n  \\"operation\\":\\"sql\\",\\n  \\"sql\\": \\"SELECT m.title, m.overview, m.release_date, search_json(\'$[name in [\\\\\\"Robert Downey Jr.\\\\\\", \\\\\\"Chris Evans\\\\\\", \\\\\\"Scarlett Johansson\\\\\\", \\\\\\"Mark Ruffalo\\\\\\", \\\\\\"Chris Hemsworth\\\\\\", \\\\\\"Jeremy Renner\\\\\\", \\\\\\"Clark Gregg\\\\\\", \\\\\\"Samuel L. Jackson\\\\\\", \\\\\\"Gwyneth Paltrow\\\\\\", \\\\\\"Don Cheadle\\\\\\"]].{\\\\\\"actor\\\\\\": name, \\\\\\"character\\\\\\": character}\', c.`cast`) as characters from movies.credits c inner join movies.movie m on c.movie_id = m.id where search_json(\'$count($[name in [\\\\\\"Robert Downey Jr.\\\\\\", \\\\\\"Chris Evans\\\\\\", \\\\\\"Scarlett Johansson\\\\\\", \\\\\\"Mark Ruffalo\\\\\\", \\\\\\"Chris Hemsworth\\\\\\", \\\\\\"Jeremy Renner\\\\\\", \\\\\\"Clark Gregg\\\\\\", \\\\\\"Samuel L. Jackson\\\\\\", \\\\\\"Gwyneth Paltrow\\\\\\", \\\\\\"Don Cheadle\\\\\\"]])\', c.`cast`) >= 2\\"\\n}","options":{"raw":{}}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"This example shows how we can use SEARCH_JSON to find movies where at least of 2 our favorite actors from Marvel films have acted together then list the movie, its overview, release date, and the actors names and their characters.  The WHERE clause performs a count on credits.cast attribute that have the matching actors. The SELECT performs the same filter on the cast attribute and performs a transform on each object to just return the actor\'s name and their character."},"response":[{"name":"search_json as a condition, in a select with a table join","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n  \\"operation\\":\\"sql\\",\\n  \\"sql\\": \\"SELECT m.title, m.overview, m.release_date, search_json(\'$[name in [\\\\\\"Robert Downey Jr.\\\\\\", \\\\\\"Chris Evans\\\\\\", \\\\\\"Scarlett Johansson\\\\\\", \\\\\\"Mark Ruffalo\\\\\\", \\\\\\"Chris Hemsworth\\\\\\", \\\\\\"Jeremy Renner\\\\\\", \\\\\\"Clark Gregg\\\\\\", \\\\\\"Samuel L. Jackson\\\\\\", \\\\\\"Gwyneth Paltrow\\\\\\", \\\\\\"Don Cheadle\\\\\\"]].{\\\\\\"actor\\\\\\": name, \\\\\\"character\\\\\\": character}\', c.`cast`) as characters from movies.credits c inner join movies.movie m on c.movie_id = m.id where search_json(\'$count($[name in [\\\\\\"Robert Downey Jr.\\\\\\", \\\\\\"Chris Evans\\\\\\", \\\\\\"Scarlett Johansson\\\\\\", \\\\\\"Mark Ruffalo\\\\\\", \\\\\\"Chris Hemsworth\\\\\\", \\\\\\"Jeremy Renner\\\\\\", \\\\\\"Clark Gregg\\\\\\", \\\\\\"Samuel L. Jackson\\\\\\", \\\\\\"Gwyneth Paltrow\\\\\\", \\\\\\"Don Cheadle\\\\\\"]])\', c.`cast`) >= 2\\"\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Vary","value":"Origin, Accept-Encoding"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Encoding","value":"gzip"},{"key":"Date","value":"Tue, 12 May 2020 22:50:25 GMT"},{"key":"Connection","value":"keep-alive"},{"key":"Transfer-Encoding","value":"chunked"}],"cookie":[],"body":"[\\n    {\\n        \\"title\\": \\"Out of Sight\\",\\n        \\"overview\\": \\"Meet Jack Foley, a smooth criminal who bends the law and is determined to make one last heist. Karen Sisco is a federal marshal who chooses all the right moves \u2026 and all the wrong guys. Now they\'re willing to risk it all to find out if there\'s more between them than just the law.\\",\\n        \\"release_date\\": \\"1998-06-26\\",\\n        \\"characters\\": [\\n            {\\n                \\"actor\\": \\"Don Cheadle\\",\\n                \\"character\\": \\"Maurice Miller\\"\\n            },\\n            {\\n                \\"actor\\": \\"Samuel L. Jackson\\",\\n                \\"character\\": \\"Hejira Henry (uncredited)\\"\\n            }\\n        ]\\n    },\\n    {\\n        \\"title\\": \\"Iron Man\\",\\n        \\"overview\\": \\"After being held captive in an Afghan cave, billionaire engineer Tony Stark creates a unique weaponized suit of armor to fight evil.\\",\\n        \\"release_date\\": \\"2008-04-30\\",\\n        \\"characters\\": [\\n            {\\n                \\"actor\\": \\"Robert Downey Jr.\\",\\n                \\"character\\": \\"Tony Stark / Iron Man\\"\\n            },\\n            {\\n                \\"actor\\": \\"Gwyneth Paltrow\\",\\n                \\"character\\": \\"Virginia \\\\\\"Pepper\\\\\\" Potts\\"\\n            },\\n            {\\n                \\"actor\\": \\"Clark Gregg\\",\\n                \\"character\\": \\"Phil Coulson\\"\\n            },\\n            {\\n                \\"actor\\": \\"Samuel L. Jackson\\",\\n                \\"character\\": \\"Nick Fury (uncredited)\\"\\n            },\\n            {\\n                \\"actor\\": \\"Samuel L. Jackson\\",\\n                \\"character\\": \\"Nick Fury\\"\\n            }\\n        ]\\n    },\\n    {\\n        \\"title\\": \\"Captain America: The First Avenger\\",\\n        \\"overview\\": \\"During World War II, Steve Rogers is a sickly man from Brooklyn who\'s transformed into super-soldier Captain America to aid in the war effort. Rogers must stop the Red Skull \u2013 Adolf Hitler\'s ruthless head of weaponry, and the leader of an organization that intends to use a mysterious device of untold powers for world domination.\\",\\n        \\"release_date\\": \\"2011-07-22\\",\\n        \\"characters\\": [\\n            {\\n                \\"actor\\": \\"Chris Evans\\",\\n                \\"character\\": \\"Steve Rogers / Captain America\\"\\n            },\\n            {\\n                \\"actor\\": \\"Samuel L. Jackson\\",\\n                \\"character\\": \\"Nick Fury\\"\\n            }\\n        ]\\n    },\\n    {\\n        \\"title\\": \\"In Good Company\\",\\n        \\"overview\\": \\"Dan Foreman is a seasoned advertisement sales executive at a high-ranking publication when a corporate takeover results in him being placed under naive supervisor Carter Duryea, who is half his age. Matters are made worse when Dan\'s new supervisor becomes romantically involved with his daughter an 18 year-old college student Alex.\\",\\n        \\"release_date\\": \\"2004-12-29\\",\\n        \\"characters\\": [\\n            {\\n                \\"actor\\": \\"Scarlett Johansson\\",\\n                \\"character\\": \\"Alex Foreman\\"\\n            },\\n            {\\n                \\"actor\\": \\"Clark Gregg\\",\\n                \\"character\\": \\"Mark Steckle\\"\\n            }\\n        ]\\n    },\\n    {\\n        \\"title\\": \\"Zodiac\\",\\n        \\"overview\\": \\"The true story of the investigation of the \\\\\\"Zodiac Killer\\\\\\", a serial killer who terrified the San Francisco Bay Area, taunting police with his ciphers and letters. The case becomes an obsession for three men as their lives and careers are built and destroyed by the endless trail of clues.\\",\\n        \\"release_date\\": \\"2007-03-02\\",\\n        \\"characters\\": [\\n            {\\n                \\"actor\\": \\"Mark Ruffalo\\",\\n                \\"character\\": \\"Dave Toschi\\"\\n            },\\n            {\\n                \\"actor\\": \\"Robert Downey Jr.\\",\\n                \\"character\\": \\"Paul Avery\\"\\n            }\\n        ]\\n    },\\n    {\\n        \\"title\\": \\"Hard Eight\\",\\n        \\"overview\\": \\"A stranger mentors a young Reno gambler who weds a hooker and befriends a vulgar casino regular.\\",\\n        \\"release_date\\": \\"1996-02-28\\",\\n        \\"characters\\": [\\n            {\\n                \\"actor\\": \\"Gwyneth Paltrow\\",\\n                \\"character\\": \\"Clementine\\"\\n            },\\n            {\\n                \\"actor\\": \\"Samuel L. Jackson\\",\\n                \\"character\\": \\"Jimmy\\"\\n            }\\n        ]\\n    },\\n    {\\n        \\"title\\": \\"The Spirit\\",\\n        \\"overview\\": \\"Down these mean streets a man must come.  A hero born, murdered, and born again.  A Rookie cop named Denny Colt returns from the beyond as The Spirit, a hero whose mission is to fight against the bad forces from the shadows of Central City.  The Octopus, who kills anyone unfortunate enough to see his face, has other plans; he is going to wipe out the entire city.\\",\\n        \\"release_date\\": \\"2008-12-25\\",\\n        \\"characters\\": [\\n            {\\n                \\"actor\\": \\"Scarlett Johansson\\",\\n                \\"character\\": \\"Silken Floss\\"\\n            },\\n            {\\n                \\"actor\\": \\"Samuel L. Jackson\\",\\n                \\"character\\": \\"Octopuss\\"\\n            }\\n        ]\\n    },\\n    {\\n        \\"title\\": \\"S.W.A.T.\\",\\n        \\"overview\\": \\"Hondo Harrelson recruits Jim Street to join an elite unit of the Los Angeles Police Department. Together they seek out more members, including tough Deke Kay and single mom Chris Sanchez. The team\'s first big assignment is to escort crime boss Alex Montel to prison. It seems routine, but when Montel offers a huge reward to anyone who can break him free, criminals of various stripes step up for the prize.\\",\\n        \\"release_date\\": \\"2003-08-08\\",\\n        \\"characters\\": [\\n            {\\n                \\"actor\\": \\"Samuel L. Jackson\\",\\n                \\"character\\": \\"Sgt. Dan \'Hondo\' Harrelson\\"\\n            },\\n            {\\n                \\"actor\\": \\"Jeremy Renner\\",\\n                \\"character\\": \\"Brian Gamble\\"\\n            }\\n        ]\\n    },\\n    {\\n        \\"title\\": \\"Iron Man 2\\",\\n        \\"overview\\": \\"With the world now aware of his dual life as the armored superhero Iron Man, billionaire inventor Tony Stark faces pressure from the government, the press and the public to share his technology with the military. Unwilling to let go of his invention, Stark, with Pepper Potts and James \'Rhodey\' Rhodes at his side, must forge new alliances \u2013 and confront powerful enemies.\\",\\n        \\"release_date\\": \\"2010-04-28\\",\\n        \\"characters\\": [\\n            {\\n                \\"actor\\": \\"Robert Downey Jr.\\",\\n                \\"character\\": \\"Tony Stark / Iron Man\\"\\n            },\\n            {\\n                \\"actor\\": \\"Gwyneth Paltrow\\",\\n                \\"character\\": \\"Virginia \\\\\\"Pepper\\\\\\" Potts\\"\\n            },\\n            {\\n                \\"actor\\": \\"Don Cheadle\\",\\n                \\"character\\": \\"James \\\\\\"Rhodey\\\\\\" Rhodes / War Machine\\"\\n            },\\n            {\\n                \\"actor\\": \\"Scarlett Johansson\\",\\n                \\"character\\": \\"Natalie Rushman / Natasha Romanoff / Black Widow\\"\\n            },\\n            {\\n                \\"actor\\": \\"Samuel L. Jackson\\",\\n                \\"character\\": \\"Nick Fury\\"\\n            },\\n            {\\n                \\"actor\\": \\"Clark Gregg\\",\\n                \\"character\\": \\"Phil Coulson\\"\\n            }\\n        ]\\n    },\\n    {\\n        \\"title\\": \\"Thor\\",\\n        \\"overview\\": \\"Against his father Odin\'s will, The Mighty Thor - a powerful but arrogant warrior god - recklessly reignites an ancient war. Thor is cast down to Earth and forced to live among humans as punishment. Once here, Thor learns what it takes to be a true hero when the most dangerous villain of his world sends the darkest forces of Asgard to invade Earth.\\",\\n        \\"release_date\\": \\"2011-04-21\\",\\n        \\"characters\\": [\\n            {\\n                \\"actor\\": \\"Chris Hemsworth\\",\\n                \\"character\\": \\"Thor Odinson\\"\\n            },\\n            {\\n                \\"actor\\": \\"Clark Gregg\\",\\n                \\"character\\": \\"Phil Coulson\\"\\n            },\\n            {\\n                \\"actor\\": \\"Jeremy Renner\\",\\n                \\"character\\": \\"Clint Barton / Hawkeye (uncredited)\\"\\n            },\\n            {\\n                \\"actor\\": \\"Samuel L. Jackson\\",\\n                \\"character\\": \\"Nick Fury (uncredited)\\"\\n            }\\n        ]\\n    },\\n    {\\n        \\"title\\": \\"View from the Top\\",\\n        \\"overview\\": \\"A small-town woman tries to achieve her goal of becoming a flight attendant.\\",\\n        \\"release_date\\": \\"2003-03-21\\",\\n        \\"characters\\": [\\n            {\\n                \\"actor\\": \\"Gwyneth Paltrow\\",\\n                \\"character\\": \\"Donna\\"\\n            },\\n            {\\n                \\"actor\\": \\"Mark Ruffalo\\",\\n                \\"character\\": \\"Ted Stewart\\"\\n            }\\n        ]\\n    },\\n    {\\n        \\"title\\": \\"The Nanny Diaries\\",\\n        \\"overview\\": \\"A college graduate goes to work as a nanny for a rich New York family. Ensconced in their home, she has to juggle their dysfunction, a new romance, and the spoiled brat in her charge.\\",\\n        \\"release_date\\": \\"2007-08-24\\",\\n        \\"characters\\": [\\n            {\\n                \\"actor\\": \\"Scarlett Johansson\\",\\n                \\"character\\": \\"Annie Braddock\\"\\n            },\\n            {\\n                \\"actor\\": \\"Chris Evans\\",\\n                \\"character\\": \\"Hayden \\\\\\"Harvard Hottie\\\\\\"\\"\\n            }\\n        ]\\n    },\\n    {\\n        \\"title\\": \\"The Perfect Score\\",\\n        \\"overview\\": \\"Six high school seniors decide to break into the Princeton Testing Center so they can steal the answers to their upcoming SAT tests and all get perfect scores.\\",\\n        \\"release_date\\": \\"2004-01-30\\",\\n        \\"characters\\": [\\n            {\\n                \\"actor\\": \\"Chris Evans\\",\\n                \\"character\\": \\"Kyle\\"\\n            },\\n            {\\n                \\"actor\\": \\"Scarlett Johansson\\",\\n                \\"character\\": \\"Francesca Curtis\\"\\n            }\\n        ]\\n    },\\n    {\\n        \\"title\\": \\"The Avengers\\",\\n        \\"overview\\": \\"When an unexpected enemy emerges and threatens global safety and security, Nick Fury, director of the international peacekeeping agency known as S.H.I.E.L.D., finds himself in need of a team to pull the world back from the brink of disaster. Spanning the globe, a daring recruitment effort begins!\\",\\n        \\"release_date\\": \\"2012-04-25\\",\\n        \\"characters\\": [\\n            {\\n                \\"actor\\": \\"Robert Downey Jr.\\",\\n                \\"character\\": \\"Tony Stark / Iron Man\\"\\n            },\\n            {\\n                \\"actor\\": \\"Chris Evans\\",\\n                \\"character\\": \\"Steve Rogers / Captain America\\"\\n            },\\n            {\\n                \\"actor\\": \\"Mark Ruffalo\\",\\n                \\"character\\": \\"Bruce Banner / The Hulk\\"\\n            },\\n            {\\n                \\"actor\\": \\"Chris Hemsworth\\",\\n                \\"character\\": \\"Thor Odinson\\"\\n            },\\n            {\\n                \\"actor\\": \\"Scarlett Johansson\\",\\n                \\"character\\": \\"Natasha Romanoff / Black Widow\\"\\n            },\\n            {\\n                \\"actor\\": \\"Jeremy Renner\\",\\n                \\"character\\": \\"Clint Barton / Hawkeye\\"\\n            },\\n            {\\n                \\"actor\\": \\"Samuel L. Jackson\\",\\n                \\"character\\": \\"Nick Fury\\"\\n            },\\n            {\\n                \\"actor\\": \\"Clark Gregg\\",\\n                \\"character\\": \\"Phil Coulson\\"\\n            },\\n            {\\n                \\"actor\\": \\"Gwyneth Paltrow\\",\\n                \\"character\\": \\"Virginia \\\\\\"Pepper\\\\\\" Potts\\"\\n            }\\n        ]\\n    },\\n    {\\n        \\"title\\": \\"Iron Man 3\\",\\n        \\"overview\\": \\"When Tony Stark\'s world is torn apart by a formidable terrorist called the Mandarin, he starts an odyssey of rebuilding and retribution.\\",\\n        \\"release_date\\": \\"2013-04-18\\",\\n        \\"characters\\": [\\n            {\\n                \\"actor\\": \\"Robert Downey Jr.\\",\\n                \\"character\\": \\"Tony Stark / Iron Man\\"\\n            },\\n            {\\n                \\"actor\\": \\"Gwyneth Paltrow\\",\\n                \\"character\\": \\"Virginia \\\\\\"Pepper\\\\\\" Potts\\"\\n            },\\n            {\\n                \\"actor\\": \\"Don Cheadle\\",\\n                \\"character\\": \\"James \\\\\\"Rhodey\\\\\\" Rhodes / Iron Patriot\\"\\n            },\\n            {\\n                \\"actor\\": \\"Mark Ruffalo\\",\\n                \\"character\\": \\"Bruce Banner (uncredited)\\"\\n            }\\n        ]\\n    },\\n    {\\n        \\"title\\": \\"Marvel One-Shot: The Consultant\\",\\n        \\"overview\\": \\"Agent Coulson informs Agent Sitwell that the World Security Council wishes Emil Blonsky to be released from prison to join the Avengers Initiative. As Nick Fury doesn\'t want to release Blonsky, the two agents decide to send a patsy to sabotage the meeting...\\",\\n        \\"release_date\\": \\"2011-09-12\\",\\n        \\"characters\\": [\\n            {\\n                \\"actor\\": \\"Clark Gregg\\",\\n                \\"character\\": \\"Phil Coulson\\"\\n            },\\n            {\\n                \\"actor\\": \\"Robert Downey Jr.\\",\\n                \\"character\\": \\"Tony Stark (archive footage)\\"\\n            }\\n        ]\\n    },\\n    {\\n        \\"title\\": \\"Thor: The Dark World\\",\\n        \\"overview\\": \\"Thor fights to restore order across the cosmos\u2026 but an ancient race led by the vengeful Malekith returns to plunge the universe back into darkness. Faced with an enemy that even Odin and Asgard cannot withstand, Thor must embark on his most perilous and personal journey yet, one that will reunite him with Jane Foster and force him to sacrifice everything to save us all.\\",\\n        \\"release_date\\": \\"2013-10-29\\",\\n        \\"characters\\": [\\n            {\\n                \\"actor\\": \\"Chris Hemsworth\\",\\n                \\"character\\": \\"Thor Odinson\\"\\n            },\\n            {\\n                \\"actor\\": \\"Chris Evans\\",\\n                \\"character\\": \\"Loki as Captain America (uncredited)\\"\\n            }\\n        ]\\n    },\\n    {\\n        \\"title\\": \\"Avengers: Age of Ultron\\",\\n        \\"overview\\": \\"When Tony Stark tries to jumpstart a dormant peacekeeping program, things go awry and Earth\u2019s Mightiest Heroes are put to the ultimate test as the fate of the planet hangs in the balance. As the villainous Ultron emerges, it is up to The Avengers to stop him from enacting his terrible plans, and soon uneasy alliances and unexpected action pave the way for an epic and unique global adventure.\\",\\n        \\"release_date\\": \\"2015-04-22\\",\\n        \\"characters\\": [\\n            {\\n                \\"actor\\": \\"Robert Downey Jr.\\",\\n                \\"character\\": \\"Tony Stark / Iron Man\\"\\n            },\\n            {\\n                \\"actor\\": \\"Chris Evans\\",\\n                \\"character\\": \\"Steve Rogers / Captain America\\"\\n            },\\n            {\\n                \\"actor\\": \\"Mark Ruffalo\\",\\n                \\"character\\": \\"Bruce Banner / The Hulk\\"\\n            },\\n            {\\n                \\"actor\\": \\"Chris Hemsworth\\",\\n                \\"character\\": \\"Thor Odinson\\"\\n            },\\n            {\\n                \\"actor\\": \\"Scarlett Johansson\\",\\n                \\"character\\": \\"Natasha Romanoff / Black Widow\\"\\n            },\\n            {\\n                \\"actor\\": \\"Jeremy Renner\\",\\n                \\"character\\": \\"Clint Barton / Hawkeye\\"\\n            },\\n            {\\n                \\"actor\\": \\"Samuel L. Jackson\\",\\n                \\"character\\": \\"Nick Fury\\"\\n            },\\n            {\\n                \\"actor\\": \\"Don Cheadle\\",\\n                \\"character\\": \\"James \\\\\\"Rhodey\\\\\\" Rhodes / War Machine\\"\\n            }\\n        ]\\n    },\\n    {\\n        \\"title\\": \\"Captain America: The Winter Soldier\\",\\n        \\"overview\\": \\"After the cataclysmic events in New York with The Avengers, Steve Rogers, aka Captain America is living quietly in Washington, D.C. and trying to adjust to the modern world. But when a S.H.I.E.L.D. colleague comes under attack, Steve becomes embroiled in a web of intrigue that threatens to put the world at risk. Joining forces with the Black Widow, Captain America struggles to expose the ever-widening conspiracy while fighting off professional assassins sent to silence him at every turn. When the full scope of the villainous plot is revealed, Captain America and the Black Widow enlist the help of a new ally, the Falcon. However, they soon find themselves up against an unexpected and formidable enemy\u2014the Winter Soldier.\\",\\n        \\"release_date\\": \\"2014-03-20\\",\\n        \\"characters\\": [\\n            {\\n                \\"actor\\": \\"Chris Evans\\",\\n                \\"character\\": \\"Steve Rogers / Captain America\\"\\n            },\\n            {\\n                \\"actor\\": \\"Samuel L. Jackson\\",\\n                \\"character\\": \\"Nick Fury\\"\\n            },\\n            {\\n                \\"actor\\": \\"Scarlett Johansson\\",\\n                \\"character\\": \\"Natasha Romanoff / Black Widow\\"\\n            }\\n        ]\\n    },\\n    {\\n        \\"title\\": \\"Thanks for Sharing\\",\\n        \\"overview\\": \\"A romantic comedy that brings together three disparate characters who are learning to face a challenging and often confusing world as they struggle together against a common demon\u2014sex addiction.\\",\\n        \\"release_date\\": \\"2013-09-19\\",\\n        \\"characters\\": [\\n            {\\n                \\"actor\\": \\"Mark Ruffalo\\",\\n                \\"character\\": \\"Adam\\"\\n            },\\n            {\\n                \\"actor\\": \\"Gwyneth Paltrow\\",\\n                \\"character\\": \\"Phoebe\\"\\n            }\\n        ]\\n    },\\n    {\\n        \\"title\\": \\"Chef\\",\\n        \\"overview\\": \\"When Chef Carl Casper suddenly quits his job at a prominent Los Angeles restaurant after refusing to compromise his creative integrity for its controlling owner, he is left to figure out what\'s next. Finding himself in Miami, he teams up with his ex-wife, his friend and his son to launch a food truck. Taking to the road, Chef Carl goes back to his roots to reignite his passion for the kitchen -- and zest for life and love.\\",\\n        \\"release_date\\": \\"2014-05-08\\",\\n        \\"characters\\": [\\n            {\\n                \\"actor\\": \\"Scarlett Johansson\\",\\n                \\"character\\": \\"Molly\\"\\n            },\\n            {\\n                \\"actor\\": \\"Robert Downey Jr.\\",\\n                \\"character\\": \\"Marvin\\"\\n            }\\n        ]\\n    },\\n    {\\n        \\"title\\": \\"Marvel Studios: Assembling a Universe\\",\\n        \\"overview\\": \\"A look at the story behind Marvel Studios and the Marvel Cinematic Universe, featuring interviews and behind-the-scenes footage from all of the Marvel films, the Marvel One-Shots and \\\\\\"Marvel\'s Agents of S.H.I.E.L.D.\\\\\\"\\",\\n        \\"release_date\\": \\"2014-03-18\\",\\n        \\"characters\\": [\\n            {\\n                \\"actor\\": \\"Robert Downey Jr.\\",\\n                \\"character\\": \\"Himself / Tony Stark / Iron Man\\"\\n            },\\n            {\\n                \\"actor\\": \\"Chris Hemsworth\\",\\n                \\"character\\": \\"Himself / Thor\\"\\n            },\\n            {\\n                \\"actor\\": \\"Chris Evans\\",\\n                \\"character\\": \\"Himself / Steve Rogers / Captain America\\"\\n            },\\n            {\\n                \\"actor\\": \\"Mark Ruffalo\\",\\n                \\"character\\": \\"Himself / Bruce Banner / Hulk\\"\\n            },\\n            {\\n                \\"actor\\": \\"Gwyneth Paltrow\\",\\n                \\"character\\": \\"Herself\\"\\n            },\\n            {\\n                \\"actor\\": \\"Clark Gregg\\",\\n                \\"character\\": \\"Himself\\"\\n            },\\n            {\\n                \\"actor\\": \\"Samuel L. Jackson\\",\\n                \\"character\\": \\"Himself\\"\\n            },\\n            {\\n                \\"actor\\": \\"Scarlett Johansson\\",\\n                \\"character\\": \\"Herself\\"\\n            },\\n            {\\n                \\"actor\\": \\"Jeremy Renner\\",\\n                \\"character\\": \\"Himself\\"\\n            }\\n        ]\\n    },\\n    {\\n        \\"title\\": \\"Captain America: Civil War\\",\\n        \\"overview\\": \\"Following the events of Age of Ultron, the collective governments of the world pass an act designed to regulate all superhuman activity. This polarizes opinion amongst the Avengers, causing two factions to side with Iron Man or Captain America, which causes an epic battle between former allies.\\",\\n        \\"release_date\\": \\"2016-04-27\\",\\n        \\"characters\\": [\\n            {\\n                \\"actor\\": \\"Chris Evans\\",\\n                \\"character\\": \\"Steve Rogers / Captain America\\"\\n            },\\n            {\\n                \\"actor\\": \\"Robert Downey Jr.\\",\\n                \\"character\\": \\"Tony Stark / Iron Man\\"\\n            },\\n            {\\n                \\"actor\\": \\"Scarlett Johansson\\",\\n                \\"character\\": \\"Natasha Romanoff / Black Widow\\"\\n            },\\n            {\\n                \\"actor\\": \\"Don Cheadle\\",\\n                \\"character\\": \\"James \\\\\\"Rhodey\\\\\\" Rhodes / War Machine\\"\\n            },\\n            {\\n                \\"actor\\": \\"Jeremy Renner\\",\\n                \\"character\\": \\"Clint Barton / Hawkeye\\"\\n            }\\n        ]\\n    },\\n    {\\n        \\"title\\": \\"Thor: Ragnarok\\",\\n        \\"overview\\": \\"Thor is imprisoned on the other side of the universe and finds himself in a race against time to get back to Asgard to stop Ragnarok, the destruction of his home-world and the end of Asgardian civilization, at the hands of an all-powerful new threat, the ruthless Hela.\\",\\n        \\"release_date\\": \\"2017-10-25\\",\\n        \\"characters\\": [\\n            {\\n                \\"actor\\": \\"Chris Hemsworth\\",\\n                \\"character\\": \\"Thor Odinson\\"\\n            },\\n            {\\n                \\"actor\\": \\"Mark Ruffalo\\",\\n                \\"character\\": \\"Bruce Banner / Hulk\\"\\n            },\\n            {\\n                \\"actor\\": \\"Scarlett Johansson\\",\\n                \\"character\\": \\"Natasha Romanoff / Black Widow (archive footage / uncredited)\\"\\n            }\\n        ]\\n    },\\n    {\\n        \\"title\\": \\"Avengers: Endgame\\",\\n        \\"overview\\": \\"After the devastating events of Avengers: Infinity War, the universe is in ruins due to the efforts of the Mad Titan, Thanos. With the help of remaining allies, the Avengers must assemble once more in order to undo Thanos\' actions and restore order to the universe once and for all, no matter what consequences may be in store.\\",\\n        \\"release_date\\": \\"2019-04-24\\",\\n        \\"characters\\": [\\n            {\\n                \\"actor\\": \\"Robert Downey Jr.\\",\\n                \\"character\\": \\"Tony Stark / Iron Man\\"\\n            },\\n            {\\n                \\"actor\\": \\"Chris Evans\\",\\n                \\"character\\": \\"Steve Rogers / Captain America\\"\\n            },\\n            {\\n                \\"actor\\": \\"Mark Ruffalo\\",\\n                \\"character\\": \\"Bruce Banner / Hulk\\"\\n            },\\n            {\\n                \\"actor\\": \\"Chris Hemsworth\\",\\n                \\"character\\": \\"Thor Odinson\\"\\n            },\\n            {\\n                \\"actor\\": \\"Scarlett Johansson\\",\\n                \\"character\\": \\"Natasha Romanoff / Black Widow\\"\\n            },\\n            {\\n                \\"actor\\": \\"Jeremy Renner\\",\\n                \\"character\\": \\"Clint Barton / Hawkeye\\"\\n            },\\n            {\\n                \\"actor\\": \\"Don Cheadle\\",\\n                \\"character\\": \\"James Rhodes / War Machine\\"\\n            },\\n            {\\n                \\"actor\\": \\"Gwyneth Paltrow\\",\\n                \\"character\\": \\"Pepper Potts\\"\\n            },\\n            {\\n                \\"actor\\": \\"Samuel L. Jackson\\",\\n                \\"character\\": \\"Nick Fury\\"\\n            }\\n        ]\\n    },\\n    {\\n        \\"title\\": \\"Avengers: Infinity War\\",\\n        \\"overview\\": \\"As the Avengers and their allies have continued to protect the world from threats too large for any one hero to handle, a new danger has emerged from the cosmic shadows: Thanos. A despot of intergalactic infamy, his goal is to collect all six Infinity Stones, artifacts of unimaginable power, and use them to inflict his twisted will on all of reality. Everything the Avengers have fought for has led up to this moment - the fate of Earth and existence itself has never been more uncertain.\\",\\n        \\"release_date\\": \\"2018-04-25\\",\\n        \\"characters\\": [\\n            {\\n                \\"actor\\": \\"Robert Downey Jr.\\",\\n                \\"character\\": \\"Tony Stark / Iron Man\\"\\n            },\\n            {\\n                \\"actor\\": \\"Chris Hemsworth\\",\\n                \\"character\\": \\"Thor Odinson\\"\\n            },\\n            {\\n                \\"actor\\": \\"Chris Evans\\",\\n                \\"character\\": \\"Steve Rogers / Captain America\\"\\n            },\\n            {\\n                \\"actor\\": \\"Scarlett Johansson\\",\\n                \\"character\\": \\"Natasha Romanoff / Black Widow\\"\\n            },\\n            {\\n                \\"actor\\": \\"Don Cheadle\\",\\n                \\"character\\": \\"James \\\\\\"Rhodey\\\\\\" Rhodes / War Machine\\"\\n            },\\n            {\\n                \\"actor\\": \\"Gwyneth Paltrow\\",\\n                \\"character\\": \\"Virginia \\\\\\"Pepper\\\\\\" Potts\\"\\n            },\\n            {\\n                \\"actor\\": \\"Samuel L. Jackson\\",\\n                \\"character\\": \\"Nick Fury (uncredited)\\"\\n            },\\n            {\\n                \\"actor\\": \\"Mark Ruffalo\\",\\n                \\"character\\": \\"Bruce Banner / The Hulk\\"\\n            }\\n        ]\\n    },\\n    {\\n        \\"title\\": \\"Captain Marvel\\",\\n        \\"overview\\": \\"The story follows Carol Danvers as she becomes one of the universe\u2019s most powerful heroes when Earth is caught in the middle of a galactic war between two alien races. Set in the 1990s, Captain Marvel is an all-new adventure from a previously unseen period in the history of the Marvel Cinematic Universe.\\",\\n        \\"release_date\\": \\"2019-03-06\\",\\n        \\"characters\\": [\\n            {\\n                \\"actor\\": \\"Samuel L. Jackson\\",\\n                \\"character\\": \\"Nick Fury\\"\\n            },\\n            {\\n                \\"actor\\": \\"Clark Gregg\\",\\n                \\"character\\": \\"Agent Phil Coulson\\"\\n            },\\n            {\\n                \\"actor\\": \\"Chris Evans\\",\\n                \\"character\\": \\"Steve Rogers / Captain America (uncredited)\\"\\n            },\\n            {\\n                \\"actor\\": \\"Scarlett Johansson\\",\\n                \\"character\\": \\"Natasha Romanoff / Black Widow (uncredited)\\"\\n            },\\n            {\\n                \\"actor\\": \\"Don Cheadle\\",\\n                \\"character\\": \\"James \'Rhodey\' Rhodes / War Machine (uncredited)\\"\\n            },\\n            {\\n                \\"actor\\": \\"Mark Ruffalo\\",\\n                \\"character\\": \\"Bruce Banner / The Hulk (uncredited)\\"\\n            }\\n        ]\\n    },\\n    {\\n        \\"title\\": \\"Spider-Man: Homecoming\\",\\n        \\"overview\\": \\"Following the events of Captain America: Civil War, Peter Parker, with the help of his mentor Tony Stark, tries to balance his life as an ordinary high school student in Queens, New York City, with fighting crime as his superhero alter ego Spider-Man as a new threat, the Vulture, emerges.\\",\\n        \\"release_date\\": \\"2017-07-05\\",\\n        \\"characters\\": [\\n            {\\n                \\"actor\\": \\"Robert Downey Jr.\\",\\n                \\"character\\": \\"Tony Stark / Iron Man\\"\\n            },\\n            {\\n                \\"actor\\": \\"Gwyneth Paltrow\\",\\n                \\"character\\": \\"Virginia \\\\\\"Pepper\\\\\\" Potts\\"\\n            },\\n            {\\n                \\"actor\\": \\"Chris Evans\\",\\n                \\"character\\": \\"Steve Rogers / Captain America\\"\\n            }\\n        ]\\n    },\\n    {\\n        \\"title\\": \\"Team Thor\\",\\n        \\"overview\\": \\"Discover what Thor was up to during the events of Captain America: Civil War.\\",\\n        \\"release_date\\": \\"2016-08-28\\",\\n        \\"characters\\": [\\n            {\\n                \\"actor\\": \\"Chris Hemsworth\\",\\n                \\"character\\": \\"Thor Odinson\\"\\n            },\\n            {\\n                \\"actor\\": \\"Mark Ruffalo\\",\\n                \\"character\\": \\"Bruce Banner\\"\\n            }\\n        ]\\n    },\\n    {\\n        \\"title\\": \\"Black Widow\\",\\n        \\"overview\\": \\"Natasha Romanoff, also known as Black Widow, confronts the darker parts of her ledger when a dangerous conspiracy with ties to her past arises. Pursued by a force that will stop at nothing to bring her down, Natasha must deal with her history as a spy and the broken relationships left in her wake long before she became an Avenger.\\",\\n        \\"release_date\\": \\"2020-10-28\\",\\n        \\"characters\\": [\\n            {\\n                \\"actor\\": \\"Scarlett Johansson\\",\\n                \\"character\\": \\"Natasha Romanoff / Black Widow\\"\\n            },\\n            {\\n                \\"actor\\": \\"Robert Downey Jr.\\",\\n                \\"character\\": \\"Tony Stark / Iron Man\\"\\n            }\\n        ]\\n    }\\n]"}]}],"description":"The purpose of this collection is to provide examples of how the SEARCH_JSON function works in HarperDB. The SEARCH_JSON function wraps the JSONata library in our SQL engine and enables searches & transformations of JSON object/arrays.  In depth documentation of JSONata can be found here: http://docs.jsonata.org/overview.html.  The data in this collection was sourced from themoviedb.org","event":[{"listen":"prerequest","script":{"id":"8487c2e7-9547-4502-b114-3bbab30754d6","type":"text/javascript","exec":[""]}},{"listen":"test","script":{"id":"9b73c88d-13db-48e6-9d85-383d55bde3e9","type":"text/javascript","exec":[""]}}],"protocolProfileBehavior":{}},{"name":"Schemas and Tables","item":[{"name":"Create Schema","event":[{"listen":"prerequest","script":{"id":"fcbbdf32-9fee-4c7c-b426-25aff054ddd3","exec":[""],"type":"text/javascript"}},{"listen":"test","script":{"id":"0eda6093-8980-4832-9648-f681e34db61d","exec":[""],"type":"text/javascript"}}],"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"create_schema\\",\\n\\t\\"schema\\": \\"dev\\"\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"<i><b>Operation is restricted to super_user roles only</b></i>\\n<ul>\\n\\n<li><b>operation</b><i> (required)</i> - must always be create_schema</li>\\n\\n<li><b>schema</b><i> (required)</i> - name of the schema you are creating</li>\\n\\n</ul>"},"response":[{"name":"Create Schema","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"create_schema\\",\\n\\t\\"schema\\": \\"dev\\"\\n}","options":{}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Vary","value":"Origin, Accept-Encoding"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"47"},{"key":"Date","value":"Wed, 26 Aug 2020 20:17:40 GMT"},{"key":"Connection","value":"keep-alive"}],"cookie":[],"body":"{\\n    \\"message\\": \\"schema \'dev\' successfully created\\"\\n}"}]},{"name":"Drop Schema","request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"drop_schema\\",\\n\\t\\"schema\\":\\"dev\\"\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"<i><b>Operation is restricted to super_user roles only</b></i>\\n<ul>\\n<li><b>operation</b><i> (required)</i> - this should always be \\"drop_table\\"</li>\\n\\n<li><b>schema</b><i> (required)</i> - name of the schema you are dropping. </li>\\n</ul>\\n\\nNOTE: Dropping a schema will delete all tables and all of their records in that schema."},"response":[{"name":"Drop Schema","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"drop_schema\\",\\n\\t\\"schema\\":\\"dev\\"\\n}","options":{}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Vary","value":"Origin, Accept-Encoding"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"47"},{"key":"Date","value":"Wed, 26 Aug 2020 20:16:35 GMT"},{"key":"Connection","value":"keep-alive"}],"cookie":[],"body":"{\\n    \\"message\\": \\"successfully deleted schema \'dev\'\\"\\n}"},{"name":"Drop Schema - schema does not exist","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"drop_schema\\",\\n\\t\\"schema\\":\\"dev2\\"\\n}","options":{}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"status":"Internal Server Error","code":500,"_postman_previewlanguage":"json","header":[{"key":"Vary","value":"Origin, Accept-Encoding"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"40"},{"key":"Date","value":"Wed, 26 Aug 2020 21:35:57 GMT"},{"key":"Connection","value":"keep-alive"}],"cookie":[],"body":"{\\n    \\"error\\": \\"Schema \'dev2\' does not exist\\"\\n}"}]},{"name":"Describe Schema","request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"describe_schema\\",\\n\\t\\"schema\\":\\"dev\\"\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"<ul>\\n<li>\\n<b>operation</b> <i> (required) </i> - must always be \'describe_schema\'\\n</li>\\n\\n\\n<li>\\n<b>schema </b><i>(required)</i> -schema where the table you wish to describe lives\\n</li>\\n\\n\\n</ul>"},"response":[{"name":"Describe Schema - schema doesn\'t exist","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"describe_schema\\",\\n\\t\\"schema\\":\\"dev2\\"\\n}","options":{}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":[{"key":"Vary","value":"Origin, Accept-Encoding"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"40"},{"key":"Date","value":"Wed, 26 Aug 2020 20:30:08 GMT"},{"key":"Connection","value":"keep-alive"}],"cookie":[],"body":"{\\n    \\"error\\": \\"Schema \'dev2\' does not exist\\"\\n}"},{"name":"Describe Schema","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"describe_schema\\",\\n\\t\\"schema\\":\\"dev\\"\\n}","options":{}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Vary","value":"Origin, Accept-Encoding"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"327"},{"key":"Date","value":"Wed, 26 Aug 2020 20:26:00 GMT"},{"key":"Connection","value":"keep-alive"}],"cookie":[],"body":"{\\n    \\"dog\\": {\\n        \\"__createdtime__\\": 1598473228070,\\n        \\"__updatedtime__\\": 1598473228070,\\n        \\"hash_attribute\\": \\"id\\",\\n        \\"id\\": \\"b9cc7292-acf7-40fb-91ba-87012a6f5f84\\",\\n        \\"name\\": \\"dog\\",\\n        \\"residence\\": null,\\n        \\"schema\\": \\"dev\\",\\n        \\"attributes\\": [\\n            {\\n                \\"attribute\\": \\"is_adorable\\"\\n            },\\n            {\\n                \\"attribute\\": \\"__createdtime__\\"\\n            },\\n            {\\n                \\"attribute\\": \\"__updatedtime__\\"\\n            },\\n            {\\n                \\"attribute\\": \\"id\\"\\n            }\\n        ],\\n        \\"record_count\\": 0\\n    }\\n}"}]},{"name":"Create  Table","event":[{"listen":"test","script":{"id":"95c19ff7-c18b-48ea-8fdc-c00f91a625f3","exec":[""],"type":"text/javascript"}}],"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"create_table\\",\\n\\t\\"schema\\":\\"dev\\",\\n\\t\\"table\\":\\"dog\\",\\n\\t\\"hash_attribute\\": \\"id\\"\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"<i><b>Operation is restricted to super_user roles only</b></i>\\n<ul>\\n\\n<li><b>operation </b><i>(required)</i> - must always be create_table</li>\\n\\n<li><b>schema</b><i> (required)</i> - name of the schema where you want your table to live </li>\\n\\n<li><b>table </b><i>(required)</i> - name of the table you are creating</li>\\n\\n<li><b>hash_attribute</b><i> (required)</i> - hash for the table </li>"},"response":[{"name":"Create  Table","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"create_table\\",\\n\\t\\"schema\\":\\"dev\\",\\n\\t\\"table\\":\\"dog\\",\\n\\t\\"hash_attribute\\": \\"id\\"\\n}","options":{}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Vary","value":"Origin, Accept-Encoding"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"51"},{"key":"Date","value":"Wed, 26 Aug 2020 20:20:28 GMT"},{"key":"Connection","value":"keep-alive"}],"cookie":[],"body":"{\\n    \\"message\\": \\"table \'dev.dog\' successfully created.\\"\\n}"},{"name":"Create  Table - table already exists","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"create_table\\",\\n\\t\\"schema\\":\\"dev\\",\\n\\t\\"table\\":\\"dog\\",\\n\\t\\"hash_attribute\\": \\"id\\"\\n}","options":{}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"status":"Internal Server Error","code":500,"_postman_previewlanguage":"json","header":[{"key":"Vary","value":"Origin, Accept-Encoding"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"54"},{"key":"Date","value":"Wed, 26 Aug 2020 20:21:47 GMT"},{"key":"Connection","value":"keep-alive"}],"cookie":[],"body":"{\\n    \\"error\\": \\"table \'dog\' already exists in schema \'dev\'\\"\\n}"},{"name":"Create  Table - schema does not exist","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"create_table\\",\\n\\t\\"schema\\":\\"dev2\\",\\n\\t\\"table\\":\\"dog\\",\\n\\t\\"hash_attribute\\": \\"id\\"\\n}","options":{}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"status":"Internal Server Error","code":500,"_postman_previewlanguage":"json","header":[{"key":"Vary","value":"Origin, Accept-Encoding"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"40"},{"key":"Date","value":"Wed, 26 Aug 2020 21:36:50 GMT"},{"key":"Connection","value":"keep-alive"}],"cookie":[],"body":"{\\n    \\"error\\": \\"Schema \'dev2\' does not exist\\"\\n}"}]},{"name":"Describe Table","request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"describe_table\\",\\n\\t\\"table\\":\\"dog\\",\\n\\t\\"schema\\":\\"dev\\"\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"<ul>\\n<li>\\n<b>operation</b> <i> (required) </i> - must always be \'describe_table\'\\n</li>\\n\\n<li>\\n<b>table</b> <i>(required)</i> - table you wish to describe\\n</li>\\n\\n<li>\\n<b>schema </b><i>(required)</i> -schema where the table you wish to describe lives\\n</li>\\n\\n\\n</ul>"},"response":[{"name":"Describe Table","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"describe_table\\",\\n\\t\\"table\\":\\"dog\\",\\n\\t\\"schema\\":\\"dev\\"\\n}","options":{}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Vary","value":"Origin, Accept-Encoding"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"319"},{"key":"Date","value":"Wed, 26 Aug 2020 20:30:44 GMT"},{"key":"Connection","value":"keep-alive"}],"cookie":[],"body":"{\\n    \\"__createdtime__\\": 1598473228070,\\n    \\"__updatedtime__\\": 1598473228070,\\n    \\"hash_attribute\\": \\"id\\",\\n    \\"id\\": \\"b9cc7292-acf7-40fb-91ba-87012a6f5f84\\",\\n    \\"name\\": \\"dog\\",\\n    \\"residence\\": null,\\n    \\"schema\\": \\"dev\\",\\n    \\"attributes\\": [\\n        {\\n            \\"attribute\\": \\"is_adorable\\"\\n        },\\n        {\\n            \\"attribute\\": \\"__createdtime__\\"\\n        },\\n        {\\n            \\"attribute\\": \\"__updatedtime__\\"\\n        },\\n        {\\n            \\"attribute\\": \\"id\\"\\n        }\\n    ],\\n    \\"record_count\\": 0\\n}"},{"name":"Describe Table - table doesn\'t exist","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"describe_table\\",\\n\\t\\"table\\":\\"dog2\\",\\n\\t\\"schema\\":\\"dev\\"\\n}","options":{}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":[{"key":"Vary","value":"Origin, Accept-Encoding"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"43"},{"key":"Date","value":"Wed, 26 Aug 2020 20:31:04 GMT"},{"key":"Connection","value":"keep-alive"}],"cookie":[],"body":"{\\n    \\"error\\": \\"Table \'dev.dog2\' does not exist\\"\\n}"}]},{"name":"Describe All","request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"describe_all\\"\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"<ul>\\n<li>\\n<b>operation</b> <i> (required) </i> - must always be \'describe_all\'\\n</li>\\n\\n\\n\\n\\n</ul>"},"response":[{"name":"Describe All","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"describe_all\\"\\n}","options":{}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Vary","value":"Origin, Accept-Encoding"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"335"},{"key":"Date","value":"Wed, 26 Aug 2020 20:31:52 GMT"},{"key":"Connection","value":"keep-alive"}],"cookie":[],"body":"{\\n    \\"dev\\": {\\n        \\"dog\\": {\\n            \\"__createdtime__\\": 1598473228070,\\n            \\"__updatedtime__\\": 1598473228070,\\n            \\"hash_attribute\\": \\"id\\",\\n            \\"id\\": \\"b9cc7292-acf7-40fb-91ba-87012a6f5f84\\",\\n            \\"name\\": \\"dog\\",\\n            \\"residence\\": null,\\n            \\"schema\\": \\"dev\\",\\n            \\"attributes\\": [\\n                {\\n                    \\"attribute\\": \\"is_adorable\\"\\n                },\\n                {\\n                    \\"attribute\\": \\"__createdtime__\\"\\n                },\\n                {\\n                    \\"attribute\\": \\"__updatedtime__\\"\\n                },\\n                {\\n                    \\"attribute\\": \\"id\\"\\n                }\\n            ],\\n            \\"record_count\\": 0\\n        }\\n    }\\n}"}]},{"name":"Drop Table","request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"drop_table\\",\\n\\t\\"schema\\":\\"dev\\",\\n\\t\\"table\\":\\"dog\\"\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"<i><b>Operation is restricted to super_user roles only</b></i>\\n<ul>\\n<li><b>operation</b><i> (required)</i> - this should always be \\"drop_table\\"</li>\\n\\n<li><b>schema</b><i> (required)</i> - schema where the table you are dropping lives. </li>\\n\\n<li><b>table</b><i> (required)</i> - name of the table you are dropping.  </li>\\n\\n</ul>\\n\\nNOTE: Dropping a table will delete all associated records in that table."},"response":[{"name":"Drop Table - table does not exist","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"drop_table\\",\\n\\t\\"schema\\":\\"dev\\",\\n\\t\\"table\\":\\"dog2\\"\\n}","options":{}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"status":"Internal Server Error","code":500,"_postman_previewlanguage":"json","header":[{"key":"Vary","value":"Origin, Accept-Encoding"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"55"},{"key":"Date","value":"Wed, 26 Aug 2020 21:40:01 GMT"},{"key":"Connection","value":"keep-alive"}],"cookie":[],"body":"{\\n    \\"error\\": \\"Table \'dog2\' does not exist in schema \'dev\'\\"\\n}"},{"name":"Drop Table -  Schema does not exist","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"drop_table\\",\\n\\t\\"schema\\":\\"dev\\",\\n\\t\\"table\\":\\"dog\\"\\n}","options":{}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"status":"Internal Server Error","code":500,"_postman_previewlanguage":"json","header":[{"key":"Vary","value":"Origin, Accept-Encoding"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"40"},{"key":"Date","value":"Wed, 26 Aug 2020 21:39:02 GMT"},{"key":"Connection","value":"keep-alive"}],"cookie":[],"body":"{\\n    \\"error\\": \\"Schema \'dev2\' does not exist\\"\\n}"},{"name":"Drop Table","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"drop_table\\",\\n\\t\\"schema\\":\\"dev\\",\\n\\t\\"table\\":\\"dog\\"\\n}","options":{}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Vary","value":"Origin, Accept-Encoding"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"50"},{"key":"Date","value":"Wed, 26 Aug 2020 20:38:02 GMT"},{"key":"Connection","value":"keep-alive"}],"cookie":[],"body":"{\\n    \\"message\\": \\"successfully deleted table \'dev.dog\'\\"\\n}"}]},{"name":"Create  Attribute","event":[{"listen":"test","script":{"id":"a63bae5b-8daa-4a4f-b2be-375ed177c39b","exec":[""],"type":"text/javascript"}}],"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"create_attribute\\",\\n\\t\\"schema\\":\\"dev\\",\\n\\t\\"table\\":\\"dog\\",\\n\\t\\"attribute\\": \\"is_adorable\\"\\n}","options":{}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"<b>Create_Attribute operation can be used for admins wishing to pre-define schema values for setting role-based permissions or for any other reason.</b> <br/>\\n<i>Note: HarperDB will automatically create new attributes on insert and update if they do not already exist within the schema.</i>\\n<br/>\\n<ul>\\n<li><b>operation </b><i>(required)</i> - must always be create_attribute</li>\\n\\n<li><b>schema</b><i> (required)</i> - name of the schema of the table you want to add your attribute</li>\\n\\n<li><b>table </b><i>(required)</i> - name of the table where you want to add your attribute to live</li>\\n\\n<li><b>attribute</b><i> (required)</i> - name for the attribute </li>\\n</ul>\\n<i>This operation currently returns a response for a successful insert operation confirming that the metadata has been added to the system table. We will be updating this response to align with the \u2018create_schema\u2019 and \u2018create_table\u2019 operations in our next release.</i>"},"response":[{"name":"Create  Attribute","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"create_attribute\\",\\n\\t\\"schema\\":\\"dev\\",\\n\\t\\"table\\":\\"dog\\",\\n\\t\\"attribute\\": \\"is_adorable\\"\\n}","options":{}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Vary","value":"Origin, Accept-Encoding"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"116"},{"key":"Date","value":"Wed, 26 Aug 2020 20:22:47 GMT"},{"key":"Connection","value":"keep-alive"}],"cookie":[],"body":"{\\n    \\"message\\": \\"inserted 1 of 1 records\\",\\n    \\"skipped_hashes\\": [],\\n    \\"inserted_hashes\\": [\\n        \\"383c0bef-5781-4e1c-b5c8-987459ad0831\\"\\n    ]\\n}"},{"name":"Create  Attribute - schema doesn\'t exist","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"create_attribute\\",\\n\\t\\"schema\\":\\"dev2\\",\\n\\t\\"table\\":\\"dog\\",\\n\\t\\"attribute\\": \\"is_adorable\\"\\n}","options":{}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":[{"key":"Vary","value":"Origin, Accept-Encoding"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"40"},{"key":"Date","value":"Wed, 26 Aug 2020 20:23:10 GMT"},{"key":"Connection","value":"keep-alive"}],"cookie":[],"body":"{\\n    \\"error\\": \\"Schema \'dev2\' does not exist\\"\\n}"},{"name":"Create  Attribute - table doesn\'t exist","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"create_attribute\\",\\n\\t\\"schema\\":\\"dev\\",\\n\\t\\"table\\":\\"dog2\\",\\n\\t\\"attribute\\": \\"is_adorable\\"\\n}","options":{}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":[{"key":"Vary","value":"Origin, Accept-Encoding"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"43"},{"key":"Date","value":"Wed, 26 Aug 2020 20:25:19 GMT"},{"key":"Connection","value":"keep-alive"}],"cookie":[],"body":"{\\n    \\"error\\": \\"Table \'dev.dog2\' does not exist\\"\\n}"}]},{"name":"Drop Attribute","request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"drop_attribute\\",\\n\\t\\"schema\\":\\"dev\\",\\n\\t\\"table\\":\\"dog\\",\\n\\t\\"attribute\\":\\"is_adorable\\"\\n}","options":{"raw":{}}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"<i><b>Operation is restricted to super_user roles only</b></i>\\n<ul>\\n<li><b>operation</b><i> (required)</i> - this should always be \\"drop_attribute\\"</li>\\n\\n<li><b>schema</b><i> (required)</i> - schema where the table you are dropping lives. </li>\\n\\n<li><b>table</b><i> (required)</i> - table where the attribute you are dropping lives.</li>\\n\\n<li><b>attribute</b><i> (required)</i> - attribute that you intend to drop.</li>\\n\\n</ul>\\n\\nNOTE: Dropping an attribute will delete all associated values in that table."},"response":[{"name":"Drop Attribute - schema doesn\'t exist","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"drop_attribute\\",\\n\\t\\"schema\\":\\"dev2\\",\\n\\t\\"table\\":\\"dog\\",\\n\\t\\"attribute\\":\\"is_adorable\\"\\n}","options":{"raw":{}}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"status":"Internal Server Error","code":500,"_postman_previewlanguage":"json","header":[{"key":"Vary","value":"Origin, Accept-Encoding"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"40"},{"key":"Date","value":"Wed, 26 Aug 2020 20:33:04 GMT"},{"key":"Connection","value":"keep-alive"}],"cookie":[],"body":"{\\n    \\"error\\": \\"Schema \'dev2\' does not exist\\"\\n}"},{"name":"Drop Attribute - table does not exist","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"drop_attribute\\",\\n\\t\\"schema\\":\\"dev\\",\\n\\t\\"table\\":\\"dog2\\",\\n\\t\\"attribute\\":\\"is_adorable\\"\\n}","options":{"raw":{}}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"status":"Internal Server Error","code":500,"_postman_previewlanguage":"json","header":[{"key":"Vary","value":"Origin, Accept-Encoding"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"55"},{"key":"Date","value":"Wed, 26 Aug 2020 21:41:10 GMT"},{"key":"Connection","value":"keep-alive"}],"cookie":[],"body":"{\\n    \\"error\\": \\"Table \'dog2\' does not exist in schema \'dev\'\\"\\n}"},{"name":"Drop Attribute - attribute doesn\'t exist","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"drop_attribute\\",\\n\\t\\"schema\\":\\"dev\\",\\n\\t\\"table\\":\\"dog\\",\\n\\t\\"attribute\\":\\"lazy\\"\\n}","options":{"raw":{}}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"status":"Internal Server Error","code":500,"_postman_previewlanguage":"json","header":[{"key":"Vary","value":"Origin, Accept-Encoding"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"55"},{"key":"Date","value":"Wed, 26 Aug 2020 20:37:29 GMT"},{"key":"Connection","value":"keep-alive"}],"cookie":[],"body":"{\\n    \\"error\\": \\"Attribute \'lazy\' was not found in \'dev.dog\'\\"\\n}"},{"name":"Drop Attribute","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"drop_attribute\\",\\n\\t\\"schema\\":\\"dev\\",\\n\\t\\"table\\":\\"dog\\",\\n\\t\\"attribute\\":\\"is_adorable\\"\\n}","options":{"raw":{}}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Vary","value":"Origin, Accept-Encoding"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"58"},{"key":"Date","value":"Wed, 26 Aug 2020 20:32:44 GMT"},{"key":"Connection","value":"keep-alive"}],"cookie":[],"body":"{\\n    \\"message\\": \\"successfully deleted attribute \'is_adorable\'\\"\\n}"}]}],"protocolProfileBehavior":{}},{"name":"NoSQL Operations","item":[{"name":"Insert","event":[{"listen":"test","script":{"id":"170c10e6-c0d8-4246-a364-4ab07f86bc67","exec":[""],"type":"text/javascript"}}],"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"insert\\",\\n\\t\\"schema\\":\\"dev\\",\\n\\t\\"table\\":\\"dog\\",\\n\\t\\"records\\": [\\n\\t  {\\n\\t    \\"name\\":\\"Harper\\",\\n\\t    \\"breed\\":\\"Mutt\\",\\n\\t    \\"id\\":\\"8\\",\\n\\t    \\"age\\":5\\n\\t    \\n\\t  },\\n\\t  {\\n\\t    \\"name\\":\\"Penny\\",\\n\\t    \\"breed\\":\\"Mutt\\",\\n\\t    \\"id\\":\\"9\\",\\n\\t    \\"age\\":5\\n\\t    \\n\\t  }\\n\\t]\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"NOTE: Hash value of the inserted JSON record MUST be supplied on insert.\\n\\n<ul>\\n<li><b>operation</b><i> (required)</i> - must always be \'insert\'</li>\\n\\n<li><b>schema</b><i> (required)</i> - schema where the table you are inserting records into lives</li>\\n\\n<li><b>table</b><i> (required)</i> - table where you want to insert records </li>\\n\\n<li><b>records</b><i> (required)</i> - array of one or more records for insert</li>\\n</ul>"},"response":[{"name":"Insert","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Authorization","type":"text","name":"Authorization","value":"Basic SERCX0FETUlOOnBhc3N3b3Jk"}],"body":{"mode":"raw","raw":"{\\n\\"operation\\":\\"insert\\",\\n\\"schema\\":\\"dev\\",\\n\\"table\\":\\"dog\\",\\n\\"records\\": [\\n  {\\n    \\"name\\":\\"Harper\\",\\n    \\"breed\\":\\"Mutt\\",\\n    \\"id\\":\\"1\\",\\n    \\"age\\":5\\n    \\n  },\\n  {\\n    \\"name\\":\\"Penny\\",\\n    \\"breed\\":\\"Mutt\\",\\n    \\"id\\":\\"3\\",\\n    \\"age\\":5\\n    \\n  }\\n]\\n\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"connection","value":"keep-alive","name":"connection","description":""},{"key":"content-length","value":"42","name":"content-length","description":""},{"key":"content-type","value":"application/json; charset=utf-8","name":"content-type","description":""},{"key":"date","value":"Fri, 01 Sep 2017 17:43:34 GMT","name":"date","description":""},{"key":"etag","value":"W/\\"2a-+I7U4Tpdia9SawmsfcyNUq20tzU\\"","name":"etag","description":""},{"key":"x-powered-by","value":"HarperDB","name":"x-powered-by","description":""}],"cookie":[],"body":""}]},{"name":"Update","event":[{"listen":"test","script":{"id":"b08b9701-e6e4-4bd9-87e3-5f2896c0d8ce","exec":[""],"type":"text/javascript"}}],"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"update\\",\\n\\t\\"schema\\":\\"dev\\",\\n\\t\\"table\\":\\"dog\\",\\n\\t\\"records\\": [\\n\\t  {\\n\\t    \\"id\\": 1,\\n\\t    \\"weight_lbs\\": 55\\n\\t  },\\n\\t  {\\n\\t    \\"id\\": 3,\\n\\t    \\"owner\\": \\"kyle b\\",\\n\\t    \\"weight_lbs\\": 35\\n\\t  }\\n\\t]\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"NOTE: Hash value of the updated JSON record MUST be supplied on update.\\n\\n<ul>\\n<li><b>operation</b><i> (required)</i> - must always be \'update\'</li>\\n\\n<li><b>schema</b><i> (required)</i> - schema of the table you are updating records into </li>\\n\\n<li><b>table</b><i> (required)</i> - table where you want to update records </li>\\n\\n<li><b>records</b><i> (required)</i> - array of one or more records for update</li>\\n</ul>"},"response":[{"name":"Update","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Authorization","type":"text","name":"Authorization","value":"Basic SERCX0FETUlOOnBhc3N3b3Jk"}],"body":{"mode":"raw","raw":"{\\n\\"operation\\":\\"update\\",\\n\\"schema\\":\\"dev\\",\\n\\"table\\":\\"dog\\",\\n\\"records\\": [\\n  {\\n    \\"id\\": 1,\\n    \\"weight_lbs\\": 55\\n  },\\n    {\\n    \\"id\\": 3,\\n    \\"owner\\": \\"kyle b\\",\\n    \\"weight_lbs\\": 35\\n  }\\n]\\n\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"connection","value":"keep-alive","name":"connection","description":""},{"key":"content-length","value":"78","name":"content-length","description":""},{"key":"content-type","value":"application/json; charset=utf-8","name":"content-type","description":""},{"key":"date","value":"Fri, 01 Sep 2017 17:44:20 GMT","name":"date","description":""},{"key":"etag","value":"W/\\"4e-TQj7cawhxiZSTYGpOL1BQRmQM/8\\"","name":"etag","description":""},{"key":"x-powered-by","value":"HarperDB","name":"x-powered-by","description":""}],"cookie":[],"body":""}]},{"name":"Delete","request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"delete\\",\\n\\t\\"table\\":\\"dog\\",\\n\\t\\"schema\\":\\"dev\\",\\n\\t\\"hash_values\\":[1,2]\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"<ul>\\n<li><b>operation</b><i> (required)</i> - must always be \'delete\'</li>\\n\\n<li><b>schema</b><i> (required)</i> - schema where the table you are deleting records into lives</li>\\n\\n<li><b>table</b><i> (required)</i> - table where you want to deleting records </li>\\n\\n\\n<li><b>hash_values</b><i> (required)</i> - array of one or more hash attribute (primary key) values, which identifies records to delete</li>\\n</ul>"},"response":[{"name":"Delete","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Authorization","type":"text","name":"Authorization","value":"Basic SERCX0FETUlOOnBhc3N3b3Jk"}],"body":{"mode":"raw","raw":"{\\n\\"operation\\":\\"delete\\",\\n\\"table\\":\\"dog\\",\\n\\"schema\\":\\"dev\\",\\n\\"hash_values\\":[\\"1\\",\\"3\\"]\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"connection","value":"keep-alive","name":"connection","description":""},{"key":"content-length","value":"42","name":"content-length","description":""},{"key":"content-type","value":"application/json; charset=utf-8","name":"content-type","description":""},{"key":"date","value":"Fri, 01 Sep 2017 17:45:32 GMT","name":"date","description":""},{"key":"etag","value":"W/\\"2a-Y+b8ancCZDlk5zkmlNYgvGhMwCE\\"","name":"etag","description":""},{"key":"x-powered-by","value":"HarperDB","name":"x-powered-by","description":""}],"cookie":[],"body":""}]},{"name":"Search By Hash","request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"search_by_hash\\",\\n\\t\\"schema\\": \\"dev\\",\\n\\t\\"table\\": \\"dog\\",\\n\\t\\"hash_values\\":[1,2],\\n\\t\\"get_attributes\\": [\\"name\\", \\"breed\\"]\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"<ul>\\n<li><b>operation</b><i> (required)</i> - must always be \'search_by_hashes\'</li>\\n\\n<li><b>schema</b> <i>(required)</i> - schema where the table you are searching lives</li>\\n\\n<li><b>table</b> <i>(required)</i> - table you wish to search</li>\\n\\n<li><b>hash_attribute</b><i> (required)</i> - hash_attribute for table you are searching. defined in add table</li>\\n\\n<li><b>hash_values</b><i>(required) </i>- array of hashes to retrive </li>\\n\\n<li><b>get_attributes</b><i> (required)</i> - define which attributes you want returned. <i>Use \'*\' to return all attributes</i>\\n</ul>"},"response":[{"name":"Search By Hash","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Authorization","type":"text","name":"Authorization","value":"Basic SERCX0FETUlOOnBhc3N3b3Jk"}],"body":{"mode":"raw","raw":"{\\n  \\"operation\\":\\"search_by_hash\\",\\n  \\"schema\\": \\"dev\\",\\n  \\"table\\": \\"dog\\",\\n  \\"hash_values\\":[1,3],\\n  \\"get_attributes\\": [\\"*\\"]\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"connection","value":"keep-alive","name":"connection","description":""},{"key":"content-length","value":"145","name":"content-length","description":""},{"key":"content-type","value":"application/json; charset=utf-8","name":"content-type","description":""},{"key":"date","value":"Fri, 01 Sep 2017 17:47:21 GMT","name":"date","description":""},{"key":"etag","value":"W/\\"91-7qgDOcZcf+jmd3/hkx3lrpmyUCA\\"","name":"etag","description":""},{"key":"x-powered-by","value":"HarperDB","name":"x-powered-by","description":""}],"cookie":[],"body":""}]},{"name":"Search By Value","event":[{"listen":"test","script":{"id":"2fac9bb4-6c94-4a78-9bc2-b457dd487a4d","exec":[""],"type":"text/javascript"}}],"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"search_by_value\\",\\n\\t\\"schema\\":\\"dev\\",\\n\\t\\"table\\":\\"dog\\",\\n\\t\\"search_attribute\\":\\"breed\\",\\n\\t\\"search_value\\":\\"Mu*\\",\\n\\t\\"get_attributes\\":[\\"name\\"]\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"<ul>\\n<li>\\n    <b> operation </b> <i> (required) </i> - must always be \'search_by_value\'\\n</li>\\n<li>\\n    <b> schema </b> <i> (required) </i> - schema where the table you are searching lives\\n</li>\\n<li>\\n    <b> table </b> <i> (required) </i> - table you wish to search\\n</li>\\n<li>\\n    <b> search_attribute </b> <i> (required) </i> - attribute you wish to search can be any attribute \\n</li>\\n<li>\\n    <b> search_value </b> <i> (required) </i> - value you wish to search - wild cards are allowed. \\n</li>\\n<li>\\n    <b> get_attributes </b> <i> (required) </i> - define which attributes you want returned. Use \'*\' to return all attributes.\\n</li>\\n</ul>"},"response":[{"name":"Search By Value","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Authorization","type":"text","name":"Authorization","value":"Basic SERCX0FETUlOOnBhc3N3b3Jk"}],"body":{"mode":"raw","raw":"{\\n\\"operation\\":\\"search_by_value\\",\\n\\"table\\":\\"breed\\",\\n\\"schema\\":\\"dev\\",\\n\\"search_attribute\\":\\"name\\",\\n\\"hash_attribute\\" : \\"id\\",\\n\\"search_value\\":\\"ENG*\\",\\n\\"get_attributes\\":[\\"name\\"]\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"connection","value":"keep-alive","name":"connection","description":""},{"key":"content-length","value":"196","name":"content-length","description":""},{"key":"content-type","value":"application/json; charset=utf-8","name":"content-type","description":""},{"key":"date","value":"Fri, 01 Sep 2017 17:49:06 GMT","name":"date","description":""},{"key":"etag","value":"W/\\"c4-O9VcHCK4aciPHIip9yg0ZzRXD2w\\"","name":"etag","description":""},{"key":"x-powered-by","value":"HarperDB","name":"x-powered-by","description":""}],"cookie":[],"body":""}]}],"protocolProfileBehavior":{}},{"name":"SQL Operations","item":[{"name":"Insert","event":[{"listen":"test","script":{"id":"863570ac-699f-43e0-93d4-aa50d7b9b66e","exec":["//tests[\\"Search by Value: 12345\\"] = responseBody.has(12345);"],"type":"text/javascript"}}],"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"sql\\",\\n\\t\\"sql\\": \\"INSERT INTO dev.dog (id, name) VALUES(22, \'Simon\')\\"\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"<ul>\\n<li>\\n    <b> operation </b> <i> (required) </i> - must always be \'sql\'\\n</li>\\n<li>\\n    <b> sql </b> <i> (required) </i> - use standard SQL\\n</li>\\n</ul>"},"response":[{"name":"Insert","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Authorization","type":"text","name":"Authorization","value":"Basic SERCX0FETUlOOjE0MDA="}],"body":{"mode":"raw","raw":"{\\n  \\"operation\\":\\"sql\\",\\n  \\"sql\\": \\"INSERT INTO dev.dog (id, name) VALUES(2, \'Simon\')\\"\\n}"},"url":{"raw":"http://localhost:9925","protocol":"http","host":["localhost"],"port":"9925"}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"connection","value":"keep-alive","name":"connection","description":""},{"key":"content-length","value":"42","name":"content-length","description":""},{"key":"content-type","value":"application/json; charset=utf-8","name":"content-type","description":""},{"key":"date","value":"Fri, 01 Sep 2017 17:50:08 GMT","name":"date","description":""},{"key":"etag","value":"W/\\"2a-ej8lhx1Q+iRBBct5qevTAGvotAM\\"","name":"etag","description":""},{"key":"x-powered-by","value":"HarperDB","name":"x-powered-by","description":""}],"cookie":[],"body":""}]},{"name":"Select","event":[{"listen":"test","script":{"id":"0140dbb8-08cc-411d-ae68-91d01be59fdf","exec":["tests[\\"Search by Value: 12345\\"] = responseBody.has(12345);"],"type":"text/javascript"}}],"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"sql\\",\\n\\t\\"sql\\":\\"select * from dev.dog where id = 1\\"\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"<ul>\\n<li>\\n    <b> operation </b> <i> (required) </i> - must always be \'sql\' sql(required) - use standard SQL\\n</li>\\n<li>\\n    <b> sql </b> <i> (required) </i> - use standard SQL\\n</li>\\n</ul>"},"response":[{"name":"Select","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Authorization","type":"text","name":"Authorization","value":"Basic SERCX0FETUlOOjE0MDA="}],"body":{"mode":"raw","raw":"{\\n  \\"operation\\":\\"sql\\",\\n  \\"sql\\":\\"SELECT d.id, d.dog_name, d.owner_name, b.name, b.section FROM dev.dog AS d INNER JOIN dev.breed AS b ON d.breed_id = b.id WHERE d.owner_name IN (\'Kyle\', \'Zach\', \'Stephen\') AND b.section = \'Mutt\' ORDER BY d.dog_name\\"\\n}"},"url":{"raw":"http://localhost:9925","protocol":"http","host":["localhost"],"port":"9925"}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"connection","value":"keep-alive","name":"connection","description":""},{"key":"content-length","value":"389","name":"content-length","description":""},{"key":"content-type","value":"application/json; charset=utf-8","name":"content-type","description":""},{"key":"date","value":"Fri, 01 Sep 2017 17:55:45 GMT","name":"date","description":""},{"key":"etag","value":"W/\\"185-edwDBNLCreSo/YY1IIyzPmR72ec\\"","name":"etag","description":""},{"key":"x-powered-by","value":"HarperDB","name":"x-powered-by","description":""}],"cookie":[],"body":""}]},{"name":"Update","event":[{"listen":"test","script":{"id":"74c6a98e-e645-498e-9bfd-a05d6f4218cc","exec":["tests[\\"Search by Value: 12345\\"] = responseBody.has(12345);"],"type":"text/javascript"}}],"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"sql\\",\\n\\t\\"sql\\":\\"update dev.dog set name = \'penelope\' where id = 1\\"\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"<ul>\\n<li>\\n    <b> operation </b> <i> (required) </i> - must always be \'sql\' \\n</li>\\n\\n<li>\\n    <b> sql </b> <i> (required) </i> - use standard SQL\\n</li>\\n</ul>"},"response":[{"name":"Update","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n  \\"operation\\":\\"sql\\",\\n  \\"sql\\":\\"update dev.dog set name = \'penelope\' where id = 1\\"\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"_postman_previewlanguage":null,"header":null,"cookie":[],"body":null}]},{"name":"Delete","event":[{"listen":"test","script":{"id":"08718407-178e-4ca2-b136-2039c02268b9","exec":["tests[\\"Search by Value: 12345\\"] = responseBody.has(12345);"],"type":"text/javascript"}}],"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"sql\\",\\n\\t\\"sql\\":\\"DELETE FROM dev.dog WHERE id = 1\\"\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"<ul>\\n<li>\\n    <b> operation </b>  <i> (required) </i> - must always be \'sql\' \\n</li>\\n\\n<li>\\n    <b> sql </b> <i> (required) </i> - use standard SQL\\n</li>\\n</ul>"},"response":[{"name":"Delete","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Authorization","type":"text","name":"Authorization","value":"Basic SERCX0FETUlOOjE0MDA="}],"body":{"mode":"raw","raw":"{\\n  \\"operation\\":\\"sql\\",\\n  \\"sql\\":\\"DELETE FROM dev.dog WHERE id = 1\\"\\n}"},"url":{"raw":"http://localhost:9925","protocol":"http","host":["localhost"],"port":"9925"}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"connection","value":"keep-alive","name":"connection","description":""},{"key":"content-length","value":"42","name":"content-length","description":""},{"key":"content-type","value":"application/json; charset=utf-8","name":"content-type","description":""},{"key":"date","value":"Fri, 01 Sep 2017 17:57:30 GMT","name":"date","description":""},{"key":"etag","value":"W/\\"2a-Y+b8ancCZDlk5zkmlNYgvGhMwCE\\"","name":"etag","description":""},{"key":"x-powered-by","value":"HarperDB","name":"x-powered-by","description":""}],"cookie":[],"body":""}]}],"protocolProfileBehavior":{}},{"name":"CSV Operations","item":[{"name":"CSV Data Load","request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"csv_data_load\\",\\n\\t\\"schema\\":\\"dev\\",\\n\\t\\"action\\": \\"insert\\",\\n\\t\\"table\\":\\"breed\\",\\n\\t\\"data\\":\\"id,name,section,country,image\\\\n1,ENGLISH POINTER,British and Irish Pointers and Setters,GREAT BRITAIN,http://www.fci.be/Nomenclature/Illustrations/001g07.jpg\\\\n2,ENGLISH SETTER,British and Irish Pointers and Setters,GREAT BRITAIN,http://www.fci.be/Nomenclature/Illustrations/002g07.jpg\\\\n3,KERRY BLUE TERRIER,Large and medium sized Terriers,IRELAND,\\\\n\\"\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"<ul>\\n\\n<li><b>operation </b><i>(required)</i> - must always be csv_data_load</li>\\n\\n<li><b>action </b><i>(optional)</i> - type of action you want to perform.  Options are insert or update, default is insert</li>\\n\\n<li><b>schema</b><i> (required)</i> - name of the schema where you are loading your data </li>\\n\\n<li><b>table </b><i>(required)</i> - name of the table where you are loading your data</li>\\n\\n<li><b>data</b><i> (required)</i> - csv data to import into HaprerDB </li>"},"response":[{"name":"CSV Data Load","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Authorization","value":"Basic SERCX0FETUlOOnBhc3N3b3Jk"}],"body":{"mode":"raw","raw":"{\\n  \\"operation\\":\\"csv_data_load\\",\\n  \\"schema\\":\\"dev\\",\\n  \\"action\\": \\"insert\\",\\n  \\"table\\":\\"breed\\",\\n  \\"data\\":\\"id,name,section,country,image\\\\n1,ENGLISH POINTER,British and Irish Pointers and Setters,GREAT BRITAIN,http://www.fci.be/Nomenclature/Illustrations/001g07.jpg\\\\n2,ENGLISH SETTER,British and Irish Pointers and Setters,GREAT BRITAIN,http://www.fci.be/Nomenclature/Illustrations/002g07.jpg\\\\n3,KERRY BLUE TERRIER,Large and medium sized Terriers,IRELAND,\\\\n\\"\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Connection","value":"keep-alive","name":"Connection","description":"Options that are desired for the connection"},{"key":"Content-Length","value":"71","name":"Content-Length","description":"The length of the response body in octets (8-bit bytes)"},{"key":"Content-Type","value":"application/json; charset=utf-8","name":"Content-Type","description":"The mime type of this content"},{"key":"Date","value":"Mon, 09 Jul 2018 20:07:14 GMT","name":"Date","description":"The date and time that the message was sent"},{"key":"ETag","value":"W/\\"47-FY/m86hgW/48m7lLK1CpL02xrIw\\"","name":"ETag","description":"An identifier for a specific version of a resource, often a message digest"},{"key":"Vary","value":"Origin","name":"Vary","description":"Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."}],"cookie":[],"body":""}]},{"name":"CSV File Load","request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"csv_file_load\\",\\n\\t\\"action\\": \\"insert\\",\\n\\t\\"schema\\":\\"dev\\",\\n\\t\\"table\\":\\"breed\\",\\n\\t\\"file_path\\":\\"/home/user/imports/breeds.csv\\"\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"<ul>\\n\\n<li><b>operation </b><i>(required)</i> - must always be csv_file_load</li>\\n\\n<li><b>action </b><i>(optional)</i> - type of action you want to perform.  Options are insert or update, default is insert</li>\\n\\n<li><b>schema</b><i> (required)</i> - name of the schema where you are loading your data </li>\\n\\n<li><b>table </b><i>(required)</i> - name of the table where you are loading your data</li>\\n\\n<li><b>file_path</b><i> (required)</i> - path to the csv file on the host running harperdb</li>"},"response":[{"name":"CSV File Load","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Authorization","value":"Basic SERCX0FETUlOOnBhc3N3b3Jk"}],"body":{"mode":"raw","raw":"{\\n  \\"operation\\":\\"csv_file_load\\",\\n  \\"action\\": \\"insert\\",\\n  \\"schema\\":\\"dev\\",\\n  \\"table\\":\\"breed\\",\\n  \\"file_path\\":\\"/home/user/imports/breeds.csv\\"\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Connection","value":"keep-alive","name":"Connection","description":"Options that are desired for the connection"},{"key":"Content-Length","value":"71","name":"Content-Length","description":"The length of the response body in octets (8-bit bytes)"},{"key":"Content-Type","value":"application/json; charset=utf-8","name":"Content-Type","description":"The mime type of this content"},{"key":"Date","value":"Mon, 09 Jul 2018 19:57:09 GMT","name":"Date","description":"The date and time that the message was sent"},{"key":"ETag","value":"W/\\"47-UhtKXGC+8XFnOR3ws3NfkSnq+e8\\"","name":"ETag","description":"An identifier for a specific version of a resource, often a message digest"},{"key":"Vary","value":"Origin","name":"Vary","description":"Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."}],"cookie":[],"body":""}]},{"name":"CSV URL Load","request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"csv_url_load\\",\\n\\t\\"action\\": \\"insert\\",\\n\\t\\"schema\\":\\"dev\\",\\n\\t\\"table\\":\\"breed\\",\\n\\t\\"csv_url\\":\\"https://s3.amazonaws.com/complimentarydata/breeds.csv\\"\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"<ul>\\n\\n<li><b>operation </b><i>(required)</i> - must always be csv_url_load</li>\\n\\n<li><b>action </b><i>(optional)</i> - type of action you want to perform.  Options are insert or update, default is insert</li>\\n\\n<li><b>schema</b><i> (required)</i> - name of the schema where you are loading your data </li>\\n\\n<li><b>table </b><i>(required)</i> - name of the table where you are loading your data</li>\\n\\n<li><b>csv_url</b><i> (required)</i> - URL to the csv </li>"},"response":[{"name":"CSV URL Load","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Authorization","value":"Basic SERCX0FETUlOOnBhc3N3b3Jk"}],"body":{"mode":"raw","raw":"{\\n  \\"operation\\":\\"csv_url_load\\",\\n  \\"action\\": \\"insert\\",\\n  \\"schema\\":\\"dev\\",\\n  \\"table\\":\\"breed\\",\\n  \\"csv_url\\":\\"https://s3.amazonaws.com/complimentarydata/breeds.csv\\"\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Connection","value":"keep-alive","name":"Connection","description":"Options that are desired for the connection"},{"key":"Content-Length","value":"71","name":"Content-Length","description":"The length of the response body in octets (8-bit bytes)"},{"key":"Content-Type","value":"application/json; charset=utf-8","name":"Content-Type","description":"The mime type of this content"},{"key":"Date","value":"Mon, 09 Jul 2018 19:57:37 GMT","name":"Date","description":"The date and time that the message was sent"},{"key":"ETag","value":"W/\\"47-L6FUPtkvBmyE5tnssYGY1khCGa8\\"","name":"ETag","description":"An identifier for a specific version of a resource, often a message digest"},{"key":"Vary","value":"Origin","name":"Vary","description":"Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."}],"cookie":[],"body":""}]}],"protocolProfileBehavior":{}},{"name":"Users and Roles","item":[{"name":"Add Role","request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"add_role\\",\\n\\t\\"role\\":\\"develope3r\\",\\n\\t\\"permission\\":{\\n\\t  \\"super_user\\": false,\\n\\t  \\"dev\\":{\\n\\t   \\"tables\\": {\\n\\t     \\"dog\\": {\\n\\t         \\"read\\":true,\\n\\t         \\"insert\\":true,\\n\\t         \\"update\\":true,\\n\\t         \\"delete\\":false,\\n\\t         \\"attribute_permissions\\":[\\n\\t            {\\n\\t               \\"attribute_name\\": \\"name\\",\\n\\t               \\"read\\":true,\\n\\t               \\"insert\\":true,\\n\\t               \\"update\\":true\\n\\t            }\\n\\t         ]\\n\\t      }\\n\\t   }\\n\\t}\\n  }\\n}","options":{}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"<i><b>Operation is restricted to super_user roles only</b></i>\\n\\n<ul>\\n<li>\\n<b>operation</b> <i> (required) </i> - must always be \'add_role\'\\n</li>\\n\\n<li>\\n<b>role</b> <i>(required)</i> - name of role you are defining \\n</li>\\n\\n<li>\\n<b>permission </b><i>(required)</i> - object defining permissions for users associated with this role\\n</li>\\n<ul>\\n<li>\\n<b>permission.super_user</b> <i>(optional)</i> - boolean which, if set to true, gives users associated with this role full access to all operations and methods. If not included, value will be assumed to be false.\\n</li>\\n</ul>\\n</ul>\\n<br/>\\nTo learn more about managing roles <a href=\\"https://harperdb.io/developers/documentation/security/users-roles/\\"> view our docs </a>"},"response":[{"name":"Add Role - error - mismatched table/attr perm values","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"add_role\\",\\n\\t\\"role\\":\\"develope3r\\",\\n\\t\\"permission\\":{\\n\\t  \\"super_user\\": false,\\n\\t  \\"dev\\":{\\n\\t   \\"tables\\": {\\n\\t     \\"dog\\": {\\n\\t         \\"read\\":true,\\n\\t         \\"insert\\":true,\\n\\t         \\"update\\":false,\\n\\t         \\"delete\\":false,\\n\\t         \\"attribute_permissions\\":[\\n\\t            {\\n\\t               \\"attribute_name\\": \\"name\\",\\n\\t               \\"read\\":true,\\n\\t               \\"insert\\":true,\\n\\t               \\"update\\":true\\n\\t            }\\n\\t         ]\\n\\t      }\\n\\t   }\\n\\t}\\n  }\\n}","options":{}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Vary","value":"Origin, Accept-Encoding"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"221"},{"key":"Date","value":"Thu, 27 Aug 2020 17:34:37 GMT"},{"key":"Connection","value":"keep-alive"}],"cookie":[],"body":"{\\n    \\"error\\": \\"Errors in the role permissions JSON provided\\",\\n    \\"main_permissions\\": [],\\n    \\"schema_permissions\\": {\\n        \\"dev_dog\\": [\\n            \\"You have a conflict with TABLE permissions for \'dev.dog\' being false and ATTRIBUTE permissions being true\\"\\n        ]\\n    }\\n}"},{"name":"Add Role - error - table in perms does not exist","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"add_role\\",\\n\\t\\"role\\":\\"develope3r\\",\\n\\t\\"permission\\":{\\n\\t  \\"super_user\\": false,\\n\\t  \\"dev\\":{\\n\\t   \\"tables\\": {\\n\\t     \\"dog\\": {\\n\\t         \\"read\\":true,\\n\\t         \\"insert\\":true,\\n\\t         \\"update\\":true,\\n\\t         \\"delete\\":false,\\n\\t         \\"attribute_permissions\\":[\\n\\t            {\\n\\t               \\"attribute_name\\": \\"name\\",\\n\\t               \\"read\\":true,\\n\\t               \\"insert\\":true,\\n\\t               \\"update\\":true\\n\\t            }\\n\\t         ]\\n\\t      },\\n          \\"doggies\\": {\\n\\t         \\"read\\":true,\\n\\t         \\"insert\\":true,\\n\\t         \\"update\\":true,\\n\\t         \\"delete\\":false,\\n\\t         \\"attribute_permissions\\":[]\\n\\t      }\\n\\t   }\\n\\t}\\n  }\\n}","options":{}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"status":"Bad Request","code":400,"_postman_previewlanguage":"json","header":[{"key":"Vary","value":"Origin, Accept-Encoding"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"138"},{"key":"Date","value":"Thu, 27 Aug 2020 17:36:17 GMT"},{"key":"Connection","value":"keep-alive"}],"cookie":[],"body":"{\\n    \\"error\\": \\"Errors in the role permissions JSON provided\\",\\n    \\"main_permissions\\": [\\n        \\"Table \'dev.doggies\' does not exist\\"\\n    ],\\n    \\"schema_permissions\\": {}\\n}"},{"name":"Add Role - success","originalRequest":{"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\\n    \\"operation\\":\\"add_role\\",\\n    \\"role\\":\\"develope3r\\",\\n    \\"permission\\":{\\n        \\"super_user\\": false,\\n        \\"dev\\":{\\n            \\"tables\\": {\\n                \\"dog\\": {\\n                    \\"read\\":true,\\n                    \\"insert\\":true,\\n                    \\"update\\":true,\\n                    \\"delete\\":false,\\n                    \\"attribute_permissions\\":[\\n                        {\\n                        \\"attribute_name\\": \\"name\\",\\n                        \\"read\\":true,\\n                        \\"insert\\":true,\\n                        \\"update\\":true\\n                        }\\n                    ]\\n                }\\n            }\\n        }\\n    }\\n\\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"code":200,"_postman_previewlanguage":"json","header":null,"cookie":[],"body":"{\\n    \\"role\\": \\"develope3r\\",\\n    \\"permission\\": {\\n        \\"super_user\\": false,\\n        \\"dev\\": {\\n            \\"tables\\": {\\n                \\"dog\\": {\\n                    \\"read\\": true,\\n                    \\"insert\\": true,\\n                    \\"update\\": true,\\n                    \\"delete\\": false,\\n                    \\"attribute_permissions\\": [\\n                        {\\n                            \\"attribute_name\\": \\"name\\",\\n                            \\"read\\": true,\\n                            \\"insert\\": true,\\n                            \\"update\\": true\\n                        }\\n                    ]\\n                }\\n            }\\n        }\\n    },\\n    \\"id\\": \\"0a9368b0-bd81-482f-9f5a-8722e3582f96\\",\\n    \\"__updatedtime__\\": 1598549532897,\\n    \\"__createdtime__\\": 1598549532897\\n}"}]},{"name":"Add User","request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"add_user\\",\\n\\t\\"role\\":\\"18d678be-97f7-42d9-8074-335e8358646b\\",\\n\\t\\"username\\":\\"hdb_user\\",\\n\\t\\"password\\":\\"password\\", \\n\\t\\"active\\": true\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"<i><b>Operation is restricted to super_user roles only</b></i>\\n<ul>\\n<li><b>operation </b> <i>(required) </i> - must always be \'add_user\'</li>\\n\\n<li><b>role </b><i>(required) </i>- id of the role you wish to assign to the user.  See add_role for more detail.  </li>\\n\\n<li><b>username </b> <i>(required)</i> - username assigned to the user.  It can not be altered after adding the user.  It serves as the hash. </li>\\n\\n<li><b>password </b> <i>(required) </i>- clear text for password.  HarperDB will encrypt the password upon reciept. </li>\\n\\n</ul>"},"response":[{"name":"Add User","originalRequest":{"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"},{"key":"Authorization","value":"Basic SERCX0FETUlOOnBhc3N3b3Jk","type":"text"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"add_user\\",\\n\\t\\"role\\":\\"18d678be-97f7-42d9-8074-335e8358646b\\",\\n\\t\\"username\\":\\"hdb_user\\",\\n\\t\\"password\\":\\"password\\", \\n\\t\\"active\\":true\\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"],"query":[{"key":"","value":""}]}},"code":200,"_postman_previewlanguage":"json","header":null,"cookie":[],"body":"{\\n    \\"message\\": \\"hdb_user successfully added\\"\\n}"}]},{"name":"Alter Role","request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"alter_role\\",\\n\\t\\"id\\":\\"f92162e2-cd17-450c-aae0-372a76859038\\",\\n\\t\\"role\\":\\"developer\\",\\n\\t\\"permission\\":{\\n\\t  \\"super_user\\": false,\\n\\t  \\"dev\\":{\\n\\t   \\"tables\\": {\\n\\t     \\"dog\\": {\\n\\t         \\"read\\":true,\\n\\t         \\"insert\\":true,\\n\\t         \\"update\\":true,\\n\\t         \\"delete\\":false,\\n\\t         \\"attribute_permissions\\":[\\n\\t            {\\n\\t               \\"attribute_name\\": \\"name\\",\\n\\t               \\"read\\":false,\\n\\t               \\"insert\\":true,\\n\\t               \\"update\\":true\\n\\t            }\\n\\t         ]\\n\\t      }\\n\\t   }\\n\\t}\\n  }\\n}","options":{}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"<i><b>Operation is restricted to super_user roles only</b></i>\\n<br/>\\n<ul>\\n<li><b>operation</b><i> (required)</i> - must always be \'alter_role\'</li>\\n\\n<li><b>id</b><i> (required)</i> - the id value for the role you are altering</li>\\n\\n<li><b>role</b><i> (optional)</i> - name value to update on the role you are altering</li>\\n\\n<li><b>permission </b><i>(required)</i> - object defining permissions for users associated with this role </li>\\n\\n<ul>\\n<li> \\n<b>permission.super_user</b> <i>(optional)</i> - boolean which, if set to true, gives users associated with this role full access to all operations and methods. If not included, value will be assumed to be false.\\n</li>\\n</ul>\\n</ul>\\n<br/>\\n\\nTo learn more about managing roles <a href=\\"https://harperdb.io/developers/documentation/security/users-roles/\\"> view our docs</a>"},"response":[{"name":"Alter Role","originalRequest":{"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\\n    \\"operation\\":\\"alter_role\\",\\n    \\"role\\":\\"developer\\",\\n    \\"id\\":\\"a7cb91e9-32e4-4dbf-a327-fab4fa9191ea\\",\\n    \\"permission\\":{\\n        \\"super_user\\": false,\\n        \\"dev\\":{\\n            \\"tables\\": {\\n                \\"dog\\": {\\n                    \\"read\\":true,\\n                    \\"insert\\":true,\\n                    \\"update\\":true,\\n                    \\"delete\\":false,\\n                    \\"attribute_permissions\\":[\\n                        {\\n                            \\"attribute_name\\": \\"name\\",\\n                            \\"read\\":false,\\n                            \\"insert\\":true,\\n                            \\"update\\":true\\n                        }\\n                    ]\\n                }\\n            }\\n        }\\n    }\\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"code":200,"_postman_previewlanguage":"json","header":null,"cookie":[],"body":"{\\n    \\"id\\": \\"a7cb91e9-32e4-4dbf-a327-fab4fa9191ea\\",\\n    \\"role\\": \\"developer\\",\\n    \\"permission\\": {\\n        \\"super_user\\": false,\\n        \\"dev\\": {\\n            \\"tables\\": {\\n                \\"dog\\": {\\n                    \\"read\\": true,\\n                    \\"insert\\": true,\\n                    \\"update\\": true,\\n                    \\"delete\\": false,\\n                    \\"attribute_permissions\\": [\\n                        {\\n                            \\"attribute_name\\": \\"name\\",\\n                            \\"read\\": false,\\n                            \\"insert\\": true,\\n                            \\"update\\": true\\n                        }\\n                    ]\\n                }\\n            }\\n        }\\n    },\\n    \\"__updatedtime__\\": 1598549996106\\n}"}]},{"name":"Alter User","request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"alter_user\\",\\n\\t\\"role\\":\\"2ebc3415-0aa0-4eea-9b8e-40860b436119-1499362372145\\",\\n\\t\\"username\\":\\"my_user\\",\\n\\t\\"password\\":\\"password\\"\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"<i><b>Operation is restricted to super_user roles only</b></i>\\n<ul>\\n\\n<li><b>operation</b> <i>(required)</i> - must always be \'alter_user\'</li>\\n\\n<li><b>role</b> <i>(optional) </i>- id of the role you wish to assign to the user.  See add_role for more detail. </li> \\n\\n<li><b>username </b><i>(required)</i> - username assigned to the user.  It can not be altered after adding the user.  It serves as the hash. </li>\\n\\n<li> <b>password</b><i> (optional) </i>- clear text for password.  HarperDB will encrypt the password upon reciept. </li>\\n</ul>"},"response":[{"name":"Alter User","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Authorization","value":"Basic SERCX0FETUlOOnBhc3N3b3Jk","type":"text"}],"body":{"mode":"raw","raw":"{\\n\\"operation\\":\\"alter_user\\",\\n\\"role\\":\\"2ebc3415-0aa0-4eea-9b8e-40860b436119-1499362372145\\",\\n\\"username\\":\\"sgoldberg\\",\\n\\"password\\":\\"password!\\"\\n\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"],"query":[{"key":"","value":""}]}},"_postman_previewlanguage":null,"header":null,"cookie":[],"body":null}]},{"name":"Drop Role","request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"drop_role\\",\\n\\t\\"id\\":\\"2ebc3415-0aa0-4eea-9b8e-40860b436119\\"\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"<i><b>Operation is restricted to super_user roles only</b></i>\\n\\n<ul>\\n<li><b>operation </b><i>(required)</i> - this must always be drop_role </li>\\n<li><b>id </b><i>(required) </i> - this is the id of the role you are dropping\\n</ul>\\n<br/>\\nNOTE: You cannot drop a role with associated users.\\n<br/>\\n<br/>\\nTo learn more about managing roles <a href=\\"https://harperdb.io/developers/documentation/security/users-roles/\\"> view our docs </a>"},"response":[{"name":"Drop Role - error - role \'id\' not found","originalRequest":{"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"drop_role\\",\\n\\t\\"id\\": \\"notagoodid\\"\\n\\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"status":"Not Found","code":404,"_postman_previewlanguage":"json","header":[{"key":"Vary","value":"Origin, Accept-Encoding"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"26"},{"key":"Date","value":"Thu, 27 Aug 2020 18:26:43 GMT"},{"key":"Connection","value":"keep-alive"}],"cookie":[],"body":"{\\n    \\"error\\": \\"Role not found\\"\\n}"},{"name":"Drop Role - error - active users tied to role","originalRequest":{"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"drop_role\\",\\n\\t\\"id\\": \\"0a9368b0-bd81-482f-9f5a-8722e3582f96\\"\\n\\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"status":"Internal Server Error","code":500,"_postman_previewlanguage":"json","header":[{"key":"Vary","value":"Origin, Accept-Encoding"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"81"},{"key":"Date","value":"Thu, 27 Aug 2020 18:21:13 GMT"},{"key":"Connection","value":"keep-alive"}],"cookie":[],"body":"{\\n    \\"error\\": \\"Cannot drop role developer as it has active user(s) tied to this role\\"\\n}"},{"name":"Drop Role","originalRequest":{"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\\n\\"operation\\":\\"drop_role\\",\\n\\"id\\":\\"2ebc3415-0aa0-4eea-9b8e-40860b436119\\"\\n\\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"code":200,"_postman_previewlanguage":"json","header":null,"cookie":[],"body":"{\\n    \\"message\\": \\"developer successfully deleted\\"\\n}"}]},{"name":"Drop User","request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"drop_user\\",\\n\\t\\"username\\":\\"sgoldberg\\"\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"<i><b>Operation is restricted to super_user roles only</b></i>\\n<ul>\\n<li><b>operation </b><i>(required)</i> - must always be \'drop_user\'</li>\\n\\n<li><b>username</b><i> (required)</i> - username assigned to the user. </li>\\n</ul>"},"response":[{"name":"Drop User","originalRequest":{"method":"POST","header":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"body":{"mode":"raw","raw":"{\\n\\"operation\\":\\"drop_user\\",\\n\\"username\\":\\"sgoldberg\\"\\n\\n\\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"code":200,"_postman_previewlanguage":"json","header":null,"cookie":[],"body":"{\\n    \\"message\\": \\"sgoldberg successfully deleted\\"\\n}"}]},{"name":"User Info","request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"user_info\\"\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"<ul>\\n<li><b>operation </b> <i>(required) </i> - must always be \'user_info\'</li>"},"response":[{"name":"User Info","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\"operation\\":\\"user_info\\"\\n\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"_postman_previewlanguage":null,"header":null,"cookie":[],"body":null}]},{"name":"List Roles","request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"list_roles\\"\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"<i><b>Operation is restricted to super_user roles only</b></i>\\n<ul>\\n<li><b>operation </b> <i>(required) </i> - must always be \'user_info\'</li>\\n</ul>\\n<br/>\\nTo learn more about managing roles <a href=\\"https://harperdb.io/developers/documentation/security/users-roles/\\"> view our docs </a>"},"response":[{"name":"List Roles","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\"operation\\":\\"list_roles\\"\\n\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"_postman_previewlanguage":null,"header":null,"cookie":[],"body":null}]},{"name":"List Users","request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"list_users\\"\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"<i><b>Operation is restricted to super_user roles only</b></i>\\n<ul>\\n<li><b>operation </b> <i>(required) </i> - must always be \'list_users\'</li>\\n</ul>"},"response":[{"name":"List Users","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\"operation\\":\\"list_users\\"\\n\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"_postman_previewlanguage":null,"header":null,"cookie":[],"body":null}]}],"protocolProfileBehavior":{}},{"name":"Clustering","item":[{"name":"Add Node","request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n    \\"operation\\": \\"add_node\\",\\n    \\"name\\": \\"node2\\",\\n    \\"host\\": \\"192.168.100.100\\",\\n    \\"port\\": 9925,\\n    \\"subscriptions\\": [\\n        {\\n            \\"channel\\": \\"dev:dog\\",\\n            \\"subscribe\\": false,\\n            \\"publish\\": true\\n        }\\n    ]\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"<i><b>Operation is restricted to super_user roles only</b></i>\\n<ul>\\n<li>\\n<b>operation</b> <i> (required) </i> - must always be \'add_node\'\\n</li>\\n<li>\\n<b>name</b> <i> (required) </i> - The NODE_NAME of the remote node. Must match exactly. \\n</li>\\n<li>\\n<b>port</b> <i> (required) </i> -  The CLUSTERING_PORT for the remote node.  Not to be confused with HTTP/S PORTS.\\n</li>\\n<li>\\n<b>host</b> <i> (required) </i> - The URI for the remote node. \\n</li>\\n</ul>"},"response":[{"name":"Add Node","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Authorization","value":"Basic SERCX0FETUlOOnBhc3N3b3Jk","type":"text"}],"body":{"mode":"raw","raw":"{\\n    \\"operation\\": \\"add_node\\",\\n    \\"name\\": \\"node2\\",\\n    \\"host\\": \\"192.168.100.100\\",\\n    \\"port\\": 9925,\\n    \\"subscriptions\\": [\\n        {\\n            \\"channel\\": \\"dev:dog\\",\\n            \\"subscribe\\": false,\\n            \\"publish\\": true\\n        }\\n    ]\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Vary","value":"Origin"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"50"},{"key":"ETag","value":"W/\\"32-SSInrnKg7a0FqI3KO7/TGYLgYAc\\""},{"key":"Date","value":"Fri, 18 Oct 2019 18:20:33 GMT"},{"key":"Connection","value":"keep-alive"}],"cookie":[],"body":""}]},{"name":"Update Node","request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n    \\"operation\\": \\"update_node\\",\\n    \\"name\\": \\"node2\\",\\n    \\"host\\": \\"192.168.100.100\\",\\n    \\"port\\": 9925,\\n    \\"subscriptions\\": [\\n        {\\n            \\"channel\\": \\"dev:dog\\",\\n            \\"subscribe\\": true,\\n            \\"publish\\": true\\n        }\\n    ]\\n}","options":{"raw":{}}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"<i><b>Operation is restricted to super_user roles only</b></i>\\n<ul>\\n<li>\\n<b>operation</b> <i> (required) </i> - must always be \'add_node\'\\n</li>\\n<li>\\n<b>name</b> <i> (required) </i> - The NODE_NAME of the remote node. Must match exactly. \\n</li>\\n<li>\\n<b>port</b> <i> (required) </i> -  The CLUSTERING_PORT for the remote node.  Not to be confused with HTTP/S PORTS.\\n</li>\\n<li>\\n<b>host</b> <i> (required) </i> - The URI for the remote node. \\n</li>\\n</ul>"},"response":[{"name":"Add Node","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Authorization","value":"Basic SERCX0FETUlOOnBhc3N3b3Jk","type":"text"}],"body":{"mode":"raw","raw":"{\\n    \\"operation\\": \\"add_node\\",\\n    \\"name\\": \\"node2\\",\\n    \\"host\\": \\"192.168.100.100\\",\\n    \\"port\\": 9925,\\n    \\"subscriptions\\": [\\n        {\\n            \\"channel\\": \\"dev:dog\\",\\n            \\"subscribe\\": false,\\n            \\"publish\\": true\\n        }\\n    ]\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Vary","value":"Origin"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"50"},{"key":"ETag","value":"W/\\"32-SSInrnKg7a0FqI3KO7/TGYLgYAc\\""},{"key":"Date","value":"Fri, 18 Oct 2019 18:20:33 GMT"},{"key":"Connection","value":"keep-alive"}],"cookie":[],"body":""}]},{"name":"Remove Node","request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"remove_node\\",\\n\\t\\"name\\":\\"node2\\"\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"<i><b>Operation is restricted to super_user roles only</b></i>\\n<ul>\\n<li>\\n<b>operation</b> <i> (required) </i> - must always be \'remove_node\'\\n</li>\\n<li>\\n<b>name</b> <i> (required) </i> - The name of the node you are de-registering.  Must match exactly. \\n</li>\\n</ul>"},"response":[{"name":"Remove Node","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Authorization","value":"Basic SERCX0FETUlOOnBhc3N3b3Jk","type":"text"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"remove_node\\",\\n\\t\\"name\\":\\"node2\\"\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Vary","value":"Origin"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"54"},{"key":"ETag","value":"W/\\"36-5DOQiUhBa8vd+mg6BRSMMJSnkwk\\""},{"key":"Date","value":"Fri, 18 Oct 2019 18:20:59 GMT"},{"key":"Connection","value":"keep-alive"}],"cookie":[],"body":""}]},{"name":"Cluster Status","request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"cluster_status\\"\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"<i><b>Operation is restricted to super_user roles only</b></i>\\n<ul>\\n<li>\\n<b>operation</b> <i> (required) </i> - must always be \'cluster_status\'\\n</li>\\n</ul>"},"response":[{"name":"Cluster Status","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Authorization","value":"Basic SERCX0FETUlOOnBhc3N3b3Jk","type":"text"}],"body":{"mode":"raw","raw":"{\\n\\"operation\\":\\"cluster_status\\"\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Vary","value":"Origin"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"20"},{"key":"ETag","value":"W/\\"14-RgxEQfZhaF+CAGMnrynpaqmAf4k\\""},{"key":"Date","value":"Fri, 18 Oct 2019 18:21:08 GMT"},{"key":"Connection","value":"keep-alive"}],"cookie":[],"body":""}]}],"protocolProfileBehavior":{}},{"name":"Registration","item":[{"name":"Registration Info","request":{"method":"POST","header":[{"key":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\": \\"registration_info\\"\\n}","options":{"raw":{}}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"<i><b>Operation is restricted to super_user roles only</b></i>"},"response":[{"name":"Registration Info","originalRequest":{"method":"POST","header":[{"key":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\": \\"registration_info\\"\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Vary","value":"Origin, Accept-Encoding"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"175"},{"key":"Date","value":"Mon, 09 Mar 2020 19:35:57 GMT"},{"key":"Connection","value":"keep-alive"}],"cookie":[],"body":"{\\n    \\"registered\\": false,\\n    \\"version\\": \\"2.0.16-BETA\\",\\n    \\"storage_type\\": \\"fs\\",\\n    \\"ram_allocation\\": 1024,\\n    \\"license_expiration_date\\": null\\n}"}]},{"name":"Get Fingerprint","request":{"method":"POST","header":[{"key":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\": \\"get_fingerprint\\"\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"<i><b>Operation is restricted to super_user roles only</b></i>"},"response":[]},{"name":"Set License","request":{"method":"POST","header":[{"key":"Content-Type","type":"text","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\": \\"set_license\\",\\n\\t\\"key\\":\\"<your-license-key>\\",\\n\\t\\"company\\":\\"<your-company>\\"\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"<i><b>Operation is restricted to super_user roles only</b></i>"},"response":[]}],"event":[{"listen":"prerequest","script":{"id":"55836707-887b-4ef3-8412-0aa4ab3c6c84","type":"text/javascript","exec":[""]}},{"listen":"test","script":{"id":"306e720f-a021-493c-8a78-bdb96f87dbea","type":"text/javascript","exec":[""]}}],"protocolProfileBehavior":{}},{"name":"Jobs","item":[{"name":"Get Job","event":[{"listen":"test","script":{"id":"34b3186b-c5e9-45da-8bca-92ea79825179","exec":["pm.test(\\"Status code is 200\\", function () {","    pm.response.to.have.status(200);","});","","pm.test(\\"test Job Found\\", function () {","    var jsonData = pm.response.json();","    pm.expect(jsonData.length).to.eql(1);","});"],"type":"text/javascript"}}],"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"get_job\\",\\n\\t\\"id\\": \\"cef7dc1e-ff37-4fdd-a5d1-03dd777f8355\\"\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"<ul>\\n\\n<li><b>operation </b><i>(required)</i> - must always be get_job</li>\\n\\n<li><b>id </b><i>(required)</i> - the id of the job you wish to view</li>\\n\\n</ul>"},"response":[{"name":"Get Job","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"get_job\\",\\n\\t\\"id\\": \\"cef7dc1e-ff37-4fdd-a5d1-03dd777f8355\\"\\n}"},"url":{"raw":"http://localhost:9925","protocol":"http","host":["localhost"],"port":"9925"}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Connection","value":"keep-alive","name":"Connection","description":"Options that are desired for the connection"},{"key":"Content-Length","value":"355","name":"Content-Length","description":"The length of the response body in octets (8-bit bytes)"},{"key":"Content-Type","value":"application/json; charset=utf-8","name":"Content-Type","description":"The mime type of this content"},{"key":"Date","value":"Mon, 09 Jul 2018 20:30:51 GMT","name":"Date","description":"The date and time that the message was sent"},{"key":"ETag","value":"W/\\"163-LJafjkNFWXHTZvnCl0osXQAx3DQ\\"","name":"ETag","description":"An identifier for a specific version of a resource, often a message digest"},{"key":"Vary","value":"Origin","name":"Vary","description":"Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."}],"cookie":[],"body":""}]},{"name":"Search Jobs By Start Date","event":[{"listen":"prerequest","script":{"id":"6c600db5-81e7-446a-83e7-3e6b80b38d46","exec":["pm.environment.set(\\"date_yesterday\\", (new Date(new Date().getTime() - 86400000)).toISOString());"],"type":"text/javascript"}},{"listen":"test","script":{"id":"1fbcfecf-27cd-492f-ba20-2c3cefe30e0b","exec":["pm.test(\\"Status code is 200\\", function () {","    pm.response.to.have.status(200);","});","","pm.test(\\"test found jobs\\", function () {","    var jsonData = pm.response.json();","    pm.expect(jsonData.length).to.be.above(0);","});"],"type":"text/javascript"}}],"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"search_jobs_by_start_date\\",\\n\\t\\"from_date\\": \\t\\"2018-07-05\\",\\n\\t\\"to_date\\": \\t\\"2018-07-10\\"\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"<ul>\\n\\n<li><b>operation </b><i>(required)</i> - must always be search_jobs_by_start_date</li>\\n\\n<li><b>from_date </b><i>(required)</i> - the date you wish to start the search</li>\\n\\n<li><b>to_date </b><i>(required)</i> - the date you wish to end the search</li>\\n\\n</ul>"},"response":[{"name":"Search Jobs By Start Date","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"search_jobs_by_start_date\\",\\n\\t\\"from_date\\": \\t\\"2018-07-05\\",\\n\\t\\"to_date\\": \\t\\"2018-07-10\\"\\n}"},"url":{"raw":"http://localhost:9925","protocol":"http","host":["localhost"],"port":"9925"}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Connection","value":"keep-alive","name":"Connection","description":"Options that are desired for the connection"},{"key":"Content-Length","value":"338","name":"Content-Length","description":"The length of the response body in octets (8-bit bytes)"},{"key":"Content-Type","value":"application/json; charset=utf-8","name":"Content-Type","description":"The mime type of this content"},{"key":"Date","value":"Mon, 09 Jul 2018 20:37:00 GMT","name":"Date","description":"The date and time that the message was sent"},{"key":"ETag","value":"W/\\"152-eo2USgMz0nfozMrO37dj5PL6t+8\\"","name":"ETag","description":"An identifier for a specific version of a resource, often a message digest"},{"key":"Vary","value":"Origin","name":"Vary","description":"Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."}],"cookie":[],"body":""}]}],"protocolProfileBehavior":{}},{"name":"Logs","item":[{"name":"Read HarperDB Log","request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"read_log\\",\\n\\t\\"limit\\":1000,\\n\\t\\"start\\":0,\\n\\t\\"from\\":\\"2017-07-10\\",\\n\\t\\"until\\":\\"2019-07-11\\",\\n\\t\\"order\\":\\"desc\\"\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"<i><b>Operation is restricted to super_user roles only</b></i>\\n<ul>\\n<li>\\n<b>operation</b> <i> (required) </i> - must always be \'read_Log\'\\n</li>\\n\\n\\n<li>\\n<b>limit </b><i>(optional)</i> - number of results returned. Default behavior is 100. Must be a number. \\n</li>\\n\\n\\n<li>\\n<b>start </b><i>(optional)</i> -result to start with. Must be a number. \\n</li>\\n\\n<li>\\n<b>from </b><i>(optional)</i> -date to begin showing log results. Must be \\"YYYY-MM-DD\\" or \\"YYYY-MM-DD hh:mm:ss\\"\\n</li>\\n\\n<li>\\n<b>until </b><i>(optional)</i> -date to end showing log results. Must be \\"YYYY-MM-DD\\" or \\"YYYY-MM-DD hh:mm:ss\\"\\n\\n</li>\\n\\n\\n<li>\\n<b>order </b><i>(optional)</i>  order to display logs desc or asc by timestamp\\n\\n</li>\\n\\n\\n</ul>"},"response":[{"name":"Read Log","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\"operation\\":\\"read_log\\",\\n\\"limit\\":1000,\\n\\"start\\":0,\\n\\"from\\":\\"2017-07-10\\",\\n\\"until\\":\\"2019-07-11\\",\\n\\"order\\":\\"desc\\"\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"_postman_previewlanguage":null,"header":null,"cookie":[],"body":null}]},{"name":"Read Transaction Log","event":[{"listen":"test","script":{"id":"09d4c90b-3846-471a-b4ef-cab37b292c08","exec":[""],"type":"text/javascript"}}],"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\": \\"read_transaction_log\\",\\n\\t\\"schema\\": \\"dev\\",\\n\\t\\"table\\": \\"dog\\"\\n}","options":{}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"<i><b>Operation is restricted to super_user roles only</b></i>\\n\\nThis Request shows how to request <i>all</i> entries for a table\'s transaction log.\\n\\n<ul>\\n\\n<li><b>operation </b><i>(required)</i> - must always be read_transaction_log</li>\\n\\n<li><b>schema</b><i> (required)</i> - schema under which the transaction log resides</li>\\n\\n<li><b>table</b><i> (required)</i> - table under which the transaction log resides</li>\\n\\n</ul>"},"response":[{"name":"Read Transaction Log","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\": \\"read_transaction_log\\",\\n\\t\\"schema\\": \\"dev\\",\\n\\t\\"table\\": \\"dog\\"\\n}","options":{}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Vary","value":"Origin, Accept-Encoding"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Encoding","value":"gzip"},{"key":"Date","value":"Mon, 24 Aug 2020 17:31:57 GMT"},{"key":"Connection","value":"keep-alive"},{"key":"Transfer-Encoding","value":"chunked"}],"cookie":[],"body":"[\\n    {\\n        \\"operation\\": \\"insert\\",\\n        \\"user_name\\": \\"HDB_ADMIN\\",\\n        \\"timestamp\\": 1598290193686.446,\\n        \\"hash_values\\": [\\n            7\\n        ],\\n        \\"records\\": [\\n            {\\n                \\"id\\": 7,\\n                \\"dog_name\\": \\"Penny\\",\\n                \\"owner_name\\": \\"Kyle\\",\\n                \\"breed_id\\": 154,\\n                \\"age\\": 5,\\n                \\"weight_lbs\\": 35,\\n                \\"adorable\\": true,\\n                \\"__updatedtime__\\": 1598290193686,\\n                \\"__createdtime__\\": 1598290193686\\n            }\\n        ]\\n    },\\n    {\\n        \\"operation\\": \\"insert\\",\\n        \\"user_name\\": \\"HDB_ADMIN\\",\\n        \\"timestamp\\": 1598290200117.106,\\n        \\"hash_values\\": [\\n            2,\\n            3,\\n            4,\\n            5,\\n            6,\\n            8,\\n            9,\\n            10\\n        ],\\n        \\"records\\": [\\n            {\\n                \\"id\\": 2,\\n                \\"dog_name\\": \\"Harper\\",\\n                \\"owner_name\\": \\"Stephen\\",\\n                \\"breed_id\\": 346,\\n                \\"age\\": 5,\\n                \\"weight_lbs\\": 55,\\n                \\"adorable\\": true,\\n                \\"__updatedtime__\\": 1598290200117,\\n                \\"__createdtime__\\": 1598290200117\\n            },\\n            {\\n                \\"id\\": 3,\\n                \\"dog_name\\": \\"Alby\\",\\n                \\"owner_name\\": \\"Kaylan\\",\\n                \\"breed_id\\": 348,\\n                \\"age\\": 5,\\n                \\"weight_lbs\\": 84,\\n                \\"adorable\\": true,\\n                \\"__updatedtime__\\": 1598290200117,\\n                \\"__createdtime__\\": 1598290200117\\n            },\\n            {\\n                \\"id\\": 4,\\n                \\"dog_name\\": \\"Billy\\",\\n                \\"owner_name\\": \\"Zach\\",\\n                \\"breed_id\\": 347,\\n                \\"age\\": 4,\\n                \\"weight_lbs\\": 60,\\n                \\"adorable\\": true,\\n                \\"__updatedtime__\\": 1598290200117,\\n                \\"__createdtime__\\": 1598290200117\\n            },\\n            {\\n                \\"id\\": 5,\\n                \\"dog_name\\": \\"Rose Merry\\",\\n                \\"owner_name\\": \\"Zach\\",\\n                \\"breed_id\\": 348,\\n                \\"age\\": 6,\\n                \\"weight_lbs\\": 15,\\n                \\"adorable\\": true,\\n                \\"__updatedtime__\\": 1598290200117,\\n                \\"__createdtime__\\": 1598290200117\\n            },\\n            {\\n                \\"id\\": 6,\\n                \\"dog_name\\": \\"Kato\\",\\n                \\"owner_name\\": \\"Kyle\\",\\n                \\"breed_id\\": 351,\\n                \\"age\\": 4,\\n                \\"weight_lbs\\": 28,\\n                \\"adorable\\": true,\\n                \\"__updatedtime__\\": 1598290200116,\\n                \\"__createdtime__\\": 1598290200116\\n            },\\n            {\\n                \\"id\\": 8,\\n                \\"dog_name\\": \\"Gemma\\",\\n                \\"owner_name\\": \\"Stephen\\",\\n                \\"breed_id\\": 350,\\n                \\"age\\": 3,\\n                \\"weight_lbs\\": 55,\\n                \\"adorable\\": true,\\n                \\"__updatedtime__\\": 1598290200116,\\n                \\"__createdtime__\\": 1598290200116\\n            },\\n            {\\n                \\"id\\": 9,\\n                \\"dog_name\\": \\"Gertrude\\",\\n                \\"owner_name\\": \\"Eli\\",\\n                \\"breed_id\\": 158,\\n                \\"age\\": 5,\\n                \\"weight_lbs\\": 70,\\n                \\"adorable\\": true,\\n                \\"__updatedtime__\\": 1598290200116,\\n                \\"__createdtime__\\": 1598290200116\\n            },\\n            {\\n                \\"id\\": 10,\\n                \\"dog_name\\": \\"Big Louie\\",\\n                \\"owner_name\\": \\"Eli\\",\\n                \\"breed_id\\": 241,\\n                \\"age\\": 11,\\n                \\"weight_lbs\\": 20,\\n                \\"adorable\\": false,\\n                \\"__updatedtime__\\": 1598290200116,\\n                \\"__createdtime__\\": 1598290200116\\n            }\\n        ]\\n    },\\n    {\\n        \\"operation\\": \\"update\\",\\n        \\"user_name\\": \\"HDB_ADMIN\\",\\n        \\"timestamp\\": 1598290235769.658,\\n        \\"hash_values\\": [\\n            7\\n        ],\\n        \\"records\\": [\\n            {\\n                \\"id\\": 7,\\n                \\"dog_name\\": \\"Penny Bernhardy\\",\\n                \\"age\\": \\"8\\",\\n                \\"__updatedtime__\\": 1598290235769\\n            }\\n        ],\\n        \\"original_records\\": [\\n            {\\n                \\"__createdtime__\\": 1598290193686,\\n                \\"__updatedtime__\\": 1598290193686,\\n                \\"adorable\\": true,\\n                \\"age\\": 5,\\n                \\"breed_id\\": 154,\\n                \\"dog_name\\": \\"Penny\\",\\n                \\"id\\": 7,\\n                \\"owner_name\\": \\"Kyle\\",\\n                \\"weight_lbs\\": 35\\n            }\\n        ]\\n    },\\n    {\\n        \\"operation\\": \\"delete\\",\\n        \\"user_name\\": \\"HDB_ADMIN\\",\\n        \\"timestamp\\": 1598290282816.445,\\n        \\"hash_values\\": [\\n            9,\\n            10\\n        ],\\n        \\"original_records\\": [\\n            {\\n                \\"__blob__\\": null,\\n                \\"__createdtime__\\": 1598290200116,\\n                \\"__updatedtime__\\": 1598290200116,\\n                \\"adorable\\": true,\\n                \\"age\\": 5,\\n                \\"breed_id\\": 158,\\n                \\"dog_name\\": \\"Gertrude\\",\\n                \\"id\\": 9,\\n                \\"owner_name\\": \\"Eli\\",\\n                \\"weight_lbs\\": 70\\n            },\\n            {\\n                \\"__blob__\\": null,\\n                \\"__createdtime__\\": 1598290200116,\\n                \\"__updatedtime__\\": 1598290200116,\\n                \\"adorable\\": false,\\n                \\"age\\": 11,\\n                \\"breed_id\\": 241,\\n                \\"dog_name\\": \\"Big Louie\\",\\n                \\"id\\": 10,\\n                \\"owner_name\\": \\"Eli\\",\\n                \\"weight_lbs\\": 20\\n            }\\n        ]\\n    }\\n]"}]},{"name":"Read Transaction Log by timestamp","event":[{"listen":"test","script":{"id":"dcde4130-7018-455a-99bf-f6cd3607c328","exec":[""],"type":"text/javascript"}}],"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n    \\"operation\\": \\"read_transaction_log\\",\\n    \\"schema\\": \\"dev\\",\\n    \\"table\\": \\"dog\\",\\n    \\"search_type\\": \\"timestamp\\",\\n    \\"search_values\\": [1598290235769, 1598290282817]\\n}","options":{}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"<i><b>Operation is restricted to super_user roles only</b></i>\\n\\nThis Request shows how to request entries for a table\'s transaction log for a time range.\\n\\n<ul>\\n\\n<li><b>operation </b><i>(required)</i> - must always be read_transaction_log</li>\\n\\n<li><b>schema</b><i> (required)</i> - schema under which the transaction log resides</li>\\n\\n<li><b>table</b><i> (required)</i> - table under which the transaction log resides</li>\\n\\n<li><b>search_type</b><i> (required)</i> - timestamp\\n\\n<li><b>search_values</b><i> (required)</i> - An array containing a maximum of two values [from_timestamp, to_timestamp] defining the range of transactions you would like to view. \\n<ul>\\n<li>Timestamp format is millisecond-based epoch in UTC.</li>\\n<li>If no items are supplied then all transactions are returned.</li>\\n<li>If only one entry is supplied then all trnasactions after the supplied timestamp will be returned.</li>\\n</ul>\\n</li>\\n</ul>"},"response":[{"name":"Read Transaction Log by time","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\"operation\\":\\"read_transaction_log\\",\\n\\"schema\\":\\"dev\\",\\n\\"table\\":\\"dog\\",\\n\\"search_type\\": \\"timestamp\\",\\n\\"search_values\\":[1598290235769, 1598290282817]\\n}","options":{}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Vary","value":"Origin, Accept-Encoding"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Length","value":"869"},{"key":"Date","value":"Mon, 24 Aug 2020 18:34:23 GMT"},{"key":"Connection","value":"keep-alive"}],"cookie":[],"body":"[\\n    {\\n        \\"operation\\": \\"update\\",\\n        \\"user_name\\": \\"HDB_ADMIN\\",\\n        \\"timestamp\\": 1598290235769.658,\\n        \\"hash_values\\": [\\n            7\\n        ],\\n        \\"records\\": [\\n            {\\n                \\"id\\": 7,\\n                \\"dog_name\\": \\"Penny Bernhardy\\",\\n                \\"age\\": \\"8\\",\\n                \\"__updatedtime__\\": 1598290235769\\n            }\\n        ],\\n        \\"original_records\\": [\\n            {\\n                \\"__createdtime__\\": 1598290193686,\\n                \\"__updatedtime__\\": 1598290193686,\\n                \\"adorable\\": true,\\n                \\"age\\": 5,\\n                \\"breed_id\\": 154,\\n                \\"dog_name\\": \\"Penny\\",\\n                \\"id\\": 7,\\n                \\"owner_name\\": \\"Kyle\\",\\n                \\"weight_lbs\\": 35\\n            }\\n        ]\\n    },\\n    {\\n        \\"operation\\": \\"delete\\",\\n        \\"user_name\\": \\"HDB_ADMIN\\",\\n        \\"timestamp\\": 1598290282816.445,\\n        \\"hash_values\\": [\\n            9,\\n            10\\n        ],\\n        \\"original_records\\": [\\n            {\\n                \\"__blob__\\": null,\\n                \\"__createdtime__\\": 1598290200116,\\n                \\"__updatedtime__\\": 1598290200116,\\n                \\"adorable\\": true,\\n                \\"age\\": 5,\\n                \\"breed_id\\": 158,\\n                \\"dog_name\\": \\"Gertrude\\",\\n                \\"id\\": 9,\\n                \\"owner_name\\": \\"Eli\\",\\n                \\"weight_lbs\\": 70\\n            },\\n            {\\n                \\"__blob__\\": null,\\n                \\"__createdtime__\\": 1598290200116,\\n                \\"__updatedtime__\\": 1598290200116,\\n                \\"adorable\\": false,\\n                \\"age\\": 11,\\n                \\"breed_id\\": 241,\\n                \\"dog_name\\": \\"Big Louie\\",\\n                \\"id\\": 10,\\n                \\"owner_name\\": \\"Eli\\",\\n                \\"weight_lbs\\": 20\\n            }\\n        ]\\n    }\\n]"}]},{"name":"Read Transaction Log by username","event":[{"listen":"test","script":{"id":"e11feded-b6cf-48f6-868d-b8b333075997","exec":[""],"type":"text/javascript"}}],"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n    \\"operation\\": \\"read_transaction_log\\",\\n    \\"schema\\": \\"dev\\",\\n    \\"table\\": \\"dog\\",\\n    \\"search_type\\": \\"username\\",\\n    \\"search_values\\": [\\"HDB_ADMIN\\"]\\n}","options":{}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"<i><b>Operation is restricted to super_user roles only</b></i>\\n\\nThis Request shows how to request entries for a table\'s transaction log by username.\\n\\n<ul>\\n\\n<li><b>operation </b><i>(required)</i> - must always be read_transaction_log</li>\\n\\n<li><b>schema</b><i> (required)</i> - schema under which the transaction log resides</li>\\n\\n<li><b>table</b><i> (required)</i> - table under which the transaction log resides</li>\\n\\n<li><b>search_type</b><i> (required)</i> - username</li>\\n\\n<li><b>search_values</b><i> (required)</i> - The HarperDB user for whom you would like to view transactions.</li>\\n\\n\\n</ul>"},"response":[{"name":"Read Transaction Log by username","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\"operation\\":\\"read_transaction_log\\",\\n\\"schema\\":\\"dev\\",\\n\\"table\\":\\"dog\\",\\n\\"search_type\\": \\"username\\",\\n\\"search_values\\":[\\"HDB_ADMIN\\"]\\n}","options":{}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Vary","value":"Origin, Accept-Encoding"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Encoding","value":"gzip"},{"key":"Date","value":"Mon, 24 Aug 2020 18:51:24 GMT"},{"key":"Connection","value":"keep-alive"},{"key":"Transfer-Encoding","value":"chunked"}],"cookie":[],"body":"{\\n    \\"HDB_ADMIN\\": [\\n        {\\n            \\"operation\\": \\"insert\\",\\n            \\"user_name\\": \\"HDB_ADMIN\\",\\n            \\"timestamp\\": 1598290193686.446,\\n            \\"hash_values\\": [\\n                7\\n            ],\\n            \\"records\\": [\\n                {\\n                    \\"id\\": 7,\\n                    \\"dog_name\\": \\"Penny\\",\\n                    \\"owner_name\\": \\"Kyle\\",\\n                    \\"breed_id\\": 154,\\n                    \\"age\\": 5,\\n                    \\"weight_lbs\\": 35,\\n                    \\"adorable\\": true,\\n                    \\"__updatedtime__\\": 1598290193686,\\n                    \\"__createdtime__\\": 1598290193686\\n                }\\n            ]\\n        },\\n        {\\n            \\"operation\\": \\"insert\\",\\n            \\"user_name\\": \\"HDB_ADMIN\\",\\n            \\"timestamp\\": 1598290200117.106,\\n            \\"hash_values\\": [\\n                2,\\n                3,\\n                4,\\n                5,\\n                6,\\n                8,\\n                9,\\n                10\\n            ],\\n            \\"records\\": [\\n                {\\n                    \\"id\\": 2,\\n                    \\"dog_name\\": \\"Harper\\",\\n                    \\"owner_name\\": \\"Stephen\\",\\n                    \\"breed_id\\": 346,\\n                    \\"age\\": 5,\\n                    \\"weight_lbs\\": 55,\\n                    \\"adorable\\": true,\\n                    \\"__updatedtime__\\": 1598290200117,\\n                    \\"__createdtime__\\": 1598290200117\\n                },\\n                {\\n                    \\"id\\": 3,\\n                    \\"dog_name\\": \\"Alby\\",\\n                    \\"owner_name\\": \\"Kaylan\\",\\n                    \\"breed_id\\": 348,\\n                    \\"age\\": 5,\\n                    \\"weight_lbs\\": 84,\\n                    \\"adorable\\": true,\\n                    \\"__updatedtime__\\": 1598290200117,\\n                    \\"__createdtime__\\": 1598290200117\\n                },\\n                {\\n                    \\"id\\": 4,\\n                    \\"dog_name\\": \\"Billy\\",\\n                    \\"owner_name\\": \\"Zach\\",\\n                    \\"breed_id\\": 347,\\n                    \\"age\\": 4,\\n                    \\"weight_lbs\\": 60,\\n                    \\"adorable\\": true,\\n                    \\"__updatedtime__\\": 1598290200117,\\n                    \\"__createdtime__\\": 1598290200117\\n                },\\n                {\\n                    \\"id\\": 5,\\n                    \\"dog_name\\": \\"Rose Merry\\",\\n                    \\"owner_name\\": \\"Zach\\",\\n                    \\"breed_id\\": 348,\\n                    \\"age\\": 6,\\n                    \\"weight_lbs\\": 15,\\n                    \\"adorable\\": true,\\n                    \\"__updatedtime__\\": 1598290200117,\\n                    \\"__createdtime__\\": 1598290200117\\n                },\\n                {\\n                    \\"id\\": 6,\\n                    \\"dog_name\\": \\"Kato\\",\\n                    \\"owner_name\\": \\"Kyle\\",\\n                    \\"breed_id\\": 351,\\n                    \\"age\\": 4,\\n                    \\"weight_lbs\\": 28,\\n                    \\"adorable\\": true,\\n                    \\"__updatedtime__\\": 1598290200116,\\n                    \\"__createdtime__\\": 1598290200116\\n                },\\n                {\\n                    \\"id\\": 8,\\n                    \\"dog_name\\": \\"Gemma\\",\\n                    \\"owner_name\\": \\"Stephen\\",\\n                    \\"breed_id\\": 350,\\n                    \\"age\\": 3,\\n                    \\"weight_lbs\\": 55,\\n                    \\"adorable\\": true,\\n                    \\"__updatedtime__\\": 1598290200116,\\n                    \\"__createdtime__\\": 1598290200116\\n                },\\n                {\\n                    \\"id\\": 9,\\n                    \\"dog_name\\": \\"Gertrude\\",\\n                    \\"owner_name\\": \\"Eli\\",\\n                    \\"breed_id\\": 158,\\n                    \\"age\\": 5,\\n                    \\"weight_lbs\\": 70,\\n                    \\"adorable\\": true,\\n                    \\"__updatedtime__\\": 1598290200116,\\n                    \\"__createdtime__\\": 1598290200116\\n                },\\n                {\\n                    \\"id\\": 10,\\n                    \\"dog_name\\": \\"Big Louie\\",\\n                    \\"owner_name\\": \\"Eli\\",\\n                    \\"breed_id\\": 241,\\n                    \\"age\\": 11,\\n                    \\"weight_lbs\\": 20,\\n                    \\"adorable\\": false,\\n                    \\"__updatedtime__\\": 1598290200116,\\n                    \\"__createdtime__\\": 1598290200116\\n                }\\n            ]\\n        },\\n        {\\n            \\"operation\\": \\"update\\",\\n            \\"user_name\\": \\"HDB_ADMIN\\",\\n            \\"timestamp\\": 1598290235769.658,\\n            \\"hash_values\\": [\\n                7\\n            ],\\n            \\"records\\": [\\n                {\\n                    \\"id\\": 7,\\n                    \\"dog_name\\": \\"Penny Bernhardy\\",\\n                    \\"age\\": \\"8\\",\\n                    \\"__updatedtime__\\": 1598290235769\\n                }\\n            ],\\n            \\"original_records\\": [\\n                {\\n                    \\"__createdtime__\\": 1598290193686,\\n                    \\"__updatedtime__\\": 1598290193686,\\n                    \\"adorable\\": true,\\n                    \\"age\\": 5,\\n                    \\"breed_id\\": 154,\\n                    \\"dog_name\\": \\"Penny\\",\\n                    \\"id\\": 7,\\n                    \\"owner_name\\": \\"Kyle\\",\\n                    \\"weight_lbs\\": 35\\n                }\\n            ]\\n        },\\n        {\\n            \\"operation\\": \\"delete\\",\\n            \\"user_name\\": \\"HDB_ADMIN\\",\\n            \\"timestamp\\": 1598290282816.445,\\n            \\"hash_values\\": [\\n                9,\\n                10\\n            ],\\n            \\"original_records\\": [\\n                {\\n                    \\"__blob__\\": null,\\n                    \\"__createdtime__\\": 1598290200116,\\n                    \\"__updatedtime__\\": 1598290200116,\\n                    \\"adorable\\": true,\\n                    \\"age\\": 5,\\n                    \\"breed_id\\": 158,\\n                    \\"dog_name\\": \\"Gertrude\\",\\n                    \\"id\\": 9,\\n                    \\"owner_name\\": \\"Eli\\",\\n                    \\"weight_lbs\\": 70\\n                },\\n                {\\n                    \\"__blob__\\": null,\\n                    \\"__createdtime__\\": 1598290200116,\\n                    \\"__updatedtime__\\": 1598290200116,\\n                    \\"adorable\\": false,\\n                    \\"age\\": 11,\\n                    \\"breed_id\\": 241,\\n                    \\"dog_name\\": \\"Big Louie\\",\\n                    \\"id\\": 10,\\n                    \\"owner_name\\": \\"Eli\\",\\n                    \\"weight_lbs\\": 20\\n                }\\n            ]\\n        }\\n    ]\\n}"}]},{"name":"Read Transaction Log by hash_value","event":[{"listen":"test","script":{"id":"8570b8ef-fd76-43da-a681-67dad9a6bbe8","exec":[""],"type":"text/javascript"}}],"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n    \\"operation\\": \\"read_transaction_log\\",\\n    \\"schema\\": \\"dev\\",\\n    \\"table\\": \\"dog\\",\\n    \\"search_type\\": \\"hash_value\\",\\n    \\"search_values\\": [7, 3, 9]\\n}","options":{}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"<i><b>Operation is restricted to super_user roles only</b></i>\\n\\nThis Request shows how to request entries for a table\'s transaction log by hash_value(s).\\n\\n<ul>\\n\\n<li><b>operation </b><i>(required)</i> - must always be read_transaction_log</li>\\n\\n<li><b>schema</b><i> (required)</i> - schema under which the transaction log resides</li>\\n\\n<li><b>table</b><i> (required)</i> - table under which the transaction log resides</li>\\n\\n<li><b>search_type</b><i> (required)</i> - hash_value\\n\\n<li><b>search_values</b><i> (required)</i> - An array of hash_attributes for which you wish to see transaction logs.</li>\\n</ul>"},"response":[{"name":"Read Transaction Log by hash_value","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\"operation\\":\\"read_transaction_log\\",\\n\\"schema\\":\\"dev\\",\\n\\"table\\":\\"dog\\",\\n\\"search_type\\": \\"hash_value\\",\\n\\"search_values\\":[7, 3, 9]\\n}","options":{}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Vary","value":"Origin, Accept-Encoding"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Encoding","value":"gzip"},{"key":"Date","value":"Mon, 24 Aug 2020 18:56:58 GMT"},{"key":"Connection","value":"keep-alive"},{"key":"Transfer-Encoding","value":"chunked"}],"cookie":[],"body":"{\\n    \\"3\\": [\\n        {\\n            \\"operation\\": \\"insert\\",\\n            \\"user_name\\": \\"HDB_ADMIN\\",\\n            \\"timestamp\\": 1598290200117.106,\\n            \\"records\\": [\\n                {\\n                    \\"id\\": 3,\\n                    \\"dog_name\\": \\"Alby\\",\\n                    \\"owner_name\\": \\"Kaylan\\",\\n                    \\"breed_id\\": 348,\\n                    \\"age\\": 5,\\n                    \\"weight_lbs\\": 84,\\n                    \\"adorable\\": true,\\n                    \\"__updatedtime__\\": 1598290200117,\\n                    \\"__createdtime__\\": 1598290200117\\n                }\\n            ]\\n        }\\n    ],\\n    \\"7\\": [\\n        {\\n            \\"operation\\": \\"insert\\",\\n            \\"user_name\\": \\"HDB_ADMIN\\",\\n            \\"timestamp\\": 1598290193686.446,\\n            \\"records\\": [\\n                {\\n                    \\"id\\": 7,\\n                    \\"dog_name\\": \\"Penny\\",\\n                    \\"owner_name\\": \\"Kyle\\",\\n                    \\"breed_id\\": 154,\\n                    \\"age\\": 5,\\n                    \\"weight_lbs\\": 35,\\n                    \\"adorable\\": true,\\n                    \\"__updatedtime__\\": 1598290193686,\\n                    \\"__createdtime__\\": 1598290193686\\n                }\\n            ]\\n        },\\n        {\\n            \\"operation\\": \\"update\\",\\n            \\"user_name\\": \\"HDB_ADMIN\\",\\n            \\"timestamp\\": 1598290235769.658,\\n            \\"records\\": [\\n                {\\n                    \\"id\\": 7,\\n                    \\"dog_name\\": \\"Penny Bernhardy\\",\\n                    \\"age\\": \\"8\\",\\n                    \\"__updatedtime__\\": 1598290235769\\n                }\\n            ],\\n            \\"original_records\\": [\\n                {\\n                    \\"__createdtime__\\": 1598290193686,\\n                    \\"__updatedtime__\\": 1598290193686,\\n                    \\"adorable\\": true,\\n                    \\"age\\": 5,\\n                    \\"breed_id\\": 154,\\n                    \\"dog_name\\": \\"Penny\\",\\n                    \\"id\\": 7,\\n                    \\"owner_name\\": \\"Kyle\\",\\n                    \\"weight_lbs\\": 35\\n                }\\n            ]\\n        }\\n    ],\\n    \\"9\\": [\\n        {\\n            \\"operation\\": \\"insert\\",\\n            \\"user_name\\": \\"HDB_ADMIN\\",\\n            \\"timestamp\\": 1598290200117.106,\\n            \\"records\\": [\\n                {\\n                    \\"id\\": 9,\\n                    \\"dog_name\\": \\"Gertrude\\",\\n                    \\"owner_name\\": \\"Eli\\",\\n                    \\"breed_id\\": 158,\\n                    \\"age\\": 5,\\n                    \\"weight_lbs\\": 70,\\n                    \\"adorable\\": true,\\n                    \\"__updatedtime__\\": 1598290200116,\\n                    \\"__createdtime__\\": 1598290200116\\n                }\\n            ]\\n        },\\n        {\\n            \\"operation\\": \\"delete\\",\\n            \\"user_name\\": \\"HDB_ADMIN\\",\\n            \\"timestamp\\": 1598290282816.445,\\n            \\"original_records\\": [\\n                {\\n                    \\"__blob__\\": null,\\n                    \\"__createdtime__\\": 1598290200116,\\n                    \\"__updatedtime__\\": 1598290200116,\\n                    \\"adorable\\": true,\\n                    \\"age\\": 5,\\n                    \\"breed_id\\": 158,\\n                    \\"dog_name\\": \\"Gertrude\\",\\n                    \\"id\\": 9,\\n                    \\"owner_name\\": \\"Eli\\",\\n                    \\"weight_lbs\\": 70\\n                }\\n            ]\\n        }\\n    ]\\n}"}]},{"name":"Delete Transaction Log Before","event":[{"listen":"test","script":{"id":"8c9f171e-ae45-42f2-b89d-d8d5043784fe","exec":[""],"type":"text/javascript"}}],"request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"delete_transaction_logs_before\\",\\t\\n\\t\\"schema\\":\\"dev\\",\\n\\t\\"table\\":\\"dog\\",\\n    \\"timestamp\\":1598290282817\\n}","options":{}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"<i><b>Operation is restricted to super_user roles only</b></i>\\n\\nThis Request shows how to remove entries for a table\'s transaction log older than the provided timestamp.\\n\\n<ul>\\n\\n<li><b>operation </b><i>(required)</i> - must always be delete_transaction_log_before</li>\\n\\n<li><b>schema</b><i> (required)</i> - schema under which the transaction log resides</li>\\n\\n<li><b>table</b><i> (required)</i> - table under which the transaction log resides</li>\\n\\n<li><b>timestamp</b><i> (required)</i> - records older than this date will be deleted. Format is millisecond-based epoch in UTC</li>\\n</ul>"},"response":[{"name":"Read Transaction Log by hash_value","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\"operation\\":\\"read_transaction_log\\",\\n\\"schema\\":\\"dev\\",\\n\\"table\\":\\"dog\\",\\n\\"search_type\\": \\"hash_value\\",\\n\\"search_values\\":[7, 3, 9]\\n}","options":{}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Vary","value":"Origin, Accept-Encoding"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Encoding","value":"gzip"},{"key":"Date","value":"Mon, 24 Aug 2020 18:56:58 GMT"},{"key":"Connection","value":"keep-alive"},{"key":"Transfer-Encoding","value":"chunked"}],"cookie":[],"body":"{\\n    \\"3\\": [\\n        {\\n            \\"operation\\": \\"insert\\",\\n            \\"user_name\\": \\"HDB_ADMIN\\",\\n            \\"timestamp\\": 1598290200117.106,\\n            \\"records\\": [\\n                {\\n                    \\"id\\": 3,\\n                    \\"dog_name\\": \\"Alby\\",\\n                    \\"owner_name\\": \\"Kaylan\\",\\n                    \\"breed_id\\": 348,\\n                    \\"age\\": 5,\\n                    \\"weight_lbs\\": 84,\\n                    \\"adorable\\": true,\\n                    \\"__updatedtime__\\": 1598290200117,\\n                    \\"__createdtime__\\": 1598290200117\\n                }\\n            ]\\n        }\\n    ],\\n    \\"7\\": [\\n        {\\n            \\"operation\\": \\"insert\\",\\n            \\"user_name\\": \\"HDB_ADMIN\\",\\n            \\"timestamp\\": 1598290193686.446,\\n            \\"records\\": [\\n                {\\n                    \\"id\\": 7,\\n                    \\"dog_name\\": \\"Penny\\",\\n                    \\"owner_name\\": \\"Kyle\\",\\n                    \\"breed_id\\": 154,\\n                    \\"age\\": 5,\\n                    \\"weight_lbs\\": 35,\\n                    \\"adorable\\": true,\\n                    \\"__updatedtime__\\": 1598290193686,\\n                    \\"__createdtime__\\": 1598290193686\\n                }\\n            ]\\n        },\\n        {\\n            \\"operation\\": \\"update\\",\\n            \\"user_name\\": \\"HDB_ADMIN\\",\\n            \\"timestamp\\": 1598290235769.658,\\n            \\"records\\": [\\n                {\\n                    \\"id\\": 7,\\n                    \\"dog_name\\": \\"Penny Bernhardy\\",\\n                    \\"age\\": \\"8\\",\\n                    \\"__updatedtime__\\": 1598290235769\\n                }\\n            ],\\n            \\"original_records\\": [\\n                {\\n                    \\"__createdtime__\\": 1598290193686,\\n                    \\"__updatedtime__\\": 1598290193686,\\n                    \\"adorable\\": true,\\n                    \\"age\\": 5,\\n                    \\"breed_id\\": 154,\\n                    \\"dog_name\\": \\"Penny\\",\\n                    \\"id\\": 7,\\n                    \\"owner_name\\": \\"Kyle\\",\\n                    \\"weight_lbs\\": 35\\n                }\\n            ]\\n        }\\n    ],\\n    \\"9\\": [\\n        {\\n            \\"operation\\": \\"insert\\",\\n            \\"user_name\\": \\"HDB_ADMIN\\",\\n            \\"timestamp\\": 1598290200117.106,\\n            \\"records\\": [\\n                {\\n                    \\"id\\": 9,\\n                    \\"dog_name\\": \\"Gertrude\\",\\n                    \\"owner_name\\": \\"Eli\\",\\n                    \\"breed_id\\": 158,\\n                    \\"age\\": 5,\\n                    \\"weight_lbs\\": 70,\\n                    \\"adorable\\": true,\\n                    \\"__updatedtime__\\": 1598290200116,\\n                    \\"__createdtime__\\": 1598290200116\\n                }\\n            ]\\n        },\\n        {\\n            \\"operation\\": \\"delete\\",\\n            \\"user_name\\": \\"HDB_ADMIN\\",\\n            \\"timestamp\\": 1598290282816.445,\\n            \\"original_records\\": [\\n                {\\n                    \\"__blob__\\": null,\\n                    \\"__createdtime__\\": 1598290200116,\\n                    \\"__updatedtime__\\": 1598290200116,\\n                    \\"adorable\\": true,\\n                    \\"age\\": 5,\\n                    \\"breed_id\\": 158,\\n                    \\"dog_name\\": \\"Gertrude\\",\\n                    \\"id\\": 9,\\n                    \\"owner_name\\": \\"Eli\\",\\n                    \\"weight_lbs\\": 70\\n                }\\n            ]\\n        }\\n    ]\\n}"}]}],"protocolProfileBehavior":{}},{"name":"Utilities","item":[{"name":"Delete Files Before","request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"delete_files_before\\",\\n\\t\\"date\\":\\"2018-07-10T19:34:00.000Z\\",\\n\\t\\"schema\\":\\"dev\\",\\n\\t\\"table\\":\\"breed\\"\\n}","options":{}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"<i><b>Operation is restricted to super_user roles only</b></i>\\n<br/>\\nThis operation will delete data exclusively on the node where it is executed. Any clustered nodes with replicated data will retain that data.\\n<br/>\\n<ul>\\n\\n<li><b>operation </b><i>(required)</i> - must always be delete_files_before</li>\\n\\n<li><b>date </b><i>(required)</i> - records older than this date will be deleted. Supported format looks like: <i>YYYY-MM-DDThh:mm:ss.sZ</i></li>\\n\\n<li><b>schema</b><i> (required)</i> - name of the schema where you are deleting your data</li>\\n\\n<li><b>table </b><i>(required)</i> - name of the table where you are deleting your data</li>"},"response":[{"name":"Delete Files Before","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"delete_files_before\\",\\n\\t\\"date\\":\\"2018-07-10\\",\\n\\t\\"schema\\":\\"dev\\",\\n\\t\\"table\\":\\"breed\\"\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"_postman_previewlanguage":null,"header":null,"cookie":[],"body":null}]},{"name":"Export Local","request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"export_local\\",\\n\\t\\"format\\":\\"json\\",\\n\\t\\"path\\":\\"/data/\\",\\n\\t\\"search_operation\\":{\\n\\t\\t\\"operation\\": \\"sql\\",\\n\\t\\t\\"sql\\": \\"SELECT * FROM dev.breed\\"\\n\\t}\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"<i><b>Operation is restricted to super_user roles only</b></i>\\n<ul>\\n\\n<li><b>operation </b><i>(required)</i> - must always be export_local</li>\\n\\n<li><b>format</b><i> (required)</i> - the format you wish to export the data, options are json & csv</li>\\n\\n<li><b>path </b><i>(required)</i> - path local to the server to export the data</li>\\n\\n<li><b>search_operation </b><i>(required)</i> - search_operation of search_by_hash, search_by_value or sql</li>"},"response":[{"name":"Export Local","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"},{"key":"Authorization","value":"Basic SERCX0FETUlOOjE0MDA="}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"export_local\\",\\n\\t\\"format\\":\\"json\\",\\n\\t\\"path\\":\\"/data/export.json\\",\\n\\t\\"search_operation\\":{\\n\\t\\t\\"operation\\": \\"sql\\",\\n\\t\\t\\"sql\\": \\"SELECT * FROM dev.dog\\"\\n\\t}\\n}"},"url":{"raw":"http://localhost:9925","protocol":"http","host":["localhost"],"port":"9925"}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Connection","value":"keep-alive","name":"Connection","description":"Options that are desired for the connection"},{"key":"Content-Length","value":"71","name":"Content-Length","description":"The length of the response body in octets (8-bit bytes)"},{"key":"Content-Type","value":"application/json; charset=utf-8","name":"Content-Type","description":"The mime type of this content"},{"key":"Date","value":"Mon, 09 Jul 2018 21:53:40 GMT","name":"Date","description":"The date and time that the message was sent"},{"key":"ETag","value":"W/\\"47-GsESrzIIY4rWIq5P2Lao7SUwkzw\\"","name":"ETag","description":"An identifier for a specific version of a resource, often a message digest"},{"key":"Vary","value":"Origin","name":"Vary","description":"Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."}],"cookie":[],"body":""}]},{"name":"Export To S3","request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"export_to_s3\\",\\n\\t\\"format\\":\\"json\\",\\n\\t\\"s3\\":{\\n\\t\\t\\"aws_access_key_id\\":\\"YOUR_KEY\\",\\n\\t\\t\\"aws_secret_access_key\\":\\"YOUR_SECRET_KEY\\",\\n\\t\\t\\"bucket\\":\\"BUCKET\\",\\n\\t\\t\\"key\\":\\"FILENAME\\"\\n\\t},\\n\\t\\"search_operation\\":{\\n\\t\\t\\"operation\\": \\"sql\\",\\n\\t\\t\\"sql\\": \\"SELECT * FROM dev.dog\\"\\n\\t}\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"<i><b>Operation is restricted to super_user roles only</b></i>\\n<ul>\\n\\n<li><b>operation </b><i>(required)</i> - must always be export_to_s3</li>\\n\\n<li><b>format</b><i> (required)</i> - the format you wish to export the data, options are json & csv</li>\\n\\n<li><b>s3 </b><i>(required)</i> - details your access keys, bucket and key for saving the data to S3</li>\\n\\n<li><b>search_operation </b><i>(required)</i> - search_operation of search_by_hash, search_by_value or sql</li>"},"response":[{"name":"Export To S3","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"export_to_s3\\",\\n\\t\\"format\\":\\"json\\",\\n\\t\\"s3\\":{\\n\\t\\t\\"aws_access_key_id\\":\\"YOUR_KEY\\",\\n\\t\\t\\"aws_secret_access_key\\":\\"YOUR_SECRET_KEY\\",\\n\\t\\t\\"bucket\\":\\"BUCKET\\",\\n\\t\\t\\"key\\":\\"FILENAME\\"\\n\\t},\\n\\t\\"search_operation\\":{\\n\\t\\t\\"operation\\": \\"sql\\",\\n\\t\\t\\"sql\\": \\"SELECT * FROM dev.dog\\"\\n\\t}\\n}"},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"_postman_previewlanguage":null,"header":null,"cookie":[],"body":null}]},{"name":"System Information","request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"system_information\\"\\n}","options":{}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]},"description":"<i><b>Operation is restricted to super_user roles only</b></i>\\n<ul>\\n<li>\\n<b>operation</b> <i> (required) </i> - must always be \'system_information\'\\n</li>\\n\\n\\n<li>\\n<b>attributes </b><i>(optional)</i> - string array of top level attributes desired in the response, if no value is supplied all attributes will be returned. Available attributes are: [\'system\', \'time\', \'cpu\', \'memory\', \'disk\', \'network\', \'harperdb_processes\']\\n</li>\\n\\n</ul>\\n\\nA deeper dive into the return object can be found here: https://systeminformation.io/general.html"},"response":[{"name":"System Information","originalRequest":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\\n\\t\\"operation\\":\\"system_information\\"\\n}","options":{}},"url":{"raw":"{{HDB_ENDPOINT}}","host":["{{HDB_ENDPOINT}}"]}},"status":"OK","code":200,"_postman_previewlanguage":"json","header":[{"key":"Vary","value":"Origin, Accept-Encoding"},{"key":"Content-Type","value":"application/json; charset=utf-8"},{"key":"Content-Encoding","value":"gzip"},{"key":"Date","value":"Thu, 16 Apr 2020 15:16:31 GMT"},{"key":"Connection","value":"keep-alive"},{"key":"Transfer-Encoding","value":"chunked"}],"cookie":[],"body":"{\\n    \\"system\\": {\\n        \\"platform\\": \\"linux\\",\\n        \\"distro\\": \\"Ubuntu\\",\\n        \\"release\\": \\"18.04.4 LTS\\",\\n        \\"codename\\": \\"Bionic Beaver\\",\\n        \\"kernel\\": \\"5.3.0-46-generic\\",\\n        \\"arch\\": \\"x64\\",\\n        \\"hostname\\": \\"kyle3\\",\\n        \\"node_version\\": \\"12.16.2\\",\\n        \\"npm_version\\": \\"6.14.4\\"\\n    },\\n    \\"time\\": {\\n        \\"current\\": 1587050190861,\\n        \\"uptime\\": 328,\\n        \\"timezone\\": \\"GMT-0600\\",\\n        \\"timezoneName\\": \\"Mountain Daylight Time\\"\\n    },\\n    \\"cpu\\": {\\n        \\"manufacturer\\": \\"Intel\xae\\",\\n        \\"brand\\": \\"Core\u2122 i7-6700HQ\\",\\n        \\"vendor\\": \\"GenuineIntel\\",\\n        \\"speed\\": \\"2.60\\",\\n        \\"cores\\": 4,\\n        \\"physicalCores\\": 2,\\n        \\"processors\\": 1,\\n        \\"cpu_speed\\": {\\n            \\"min\\": 2.59,\\n            \\"max\\": 2.59,\\n            \\"avg\\": 2.59,\\n            \\"cores\\": [\\n                2.59,\\n                2.59,\\n                2.59,\\n                2.59\\n            ]\\n        },\\n        \\"current_load\\": {\\n            \\"avgload\\": 0.09,\\n            \\"currentload\\": 11.070059788440902,\\n            \\"currentload_user\\": 9.824467269661199,\\n            \\"currentload_system\\": 1.1697071899432776,\\n            \\"currentload_nice\\": 0.07588532883642496,\\n            \\"currentload_idle\\": 88.9299402115591,\\n            \\"currentload_irq\\": 0,\\n            \\"cpus\\": [\\n                {\\n                    \\"load\\": 11.661726565394591,\\n                    \\"load_user\\": 10.361862418179573,\\n                    \\"load_system\\": 1.2628133876744474,\\n                    \\"load_nice\\": 0.037050759540570584,\\n                    \\"load_idle\\": 88.33827343460541,\\n                    \\"load_irq\\": 0\\n                },\\n                {\\n                    \\"load\\": 10.828103474667076,\\n                    \\"load_user\\": 9.640287769784173,\\n                    \\"load_system\\": 1.1816929435175265,\\n                    \\"load_nice\\": 0.006122761365375784,\\n                    \\"load_idle\\": 89.17189652533293,\\n                    \\"load_irq\\": 0\\n                },\\n                {\\n                    \\"load\\": 10.980608062641464,\\n                    \\"load_user\\": 9.567504740931057,\\n                    \\"load_system\\": 1.1653514406313084,\\n                    \\"load_nice\\": 0.2477518810790971,\\n                    \\"load_idle\\": 89.01939193735853,\\n                    \\"load_irq\\": 0\\n                },\\n                {\\n                    \\"load\\": 10.815272215938618,\\n                    \\"load_user\\": 9.73313361660502,\\n                    \\"load_system\\": 1.0699110445388684,\\n                    \\"load_nice\\": 0.012227554794729924,\\n                    \\"load_idle\\": 89.18472778406138,\\n                    \\"load_irq\\": 0\\n                }\\n            ]\\n        }\\n    },\\n    \\"memory\\": {\\n        \\"total\\": 8118206464,\\n        \\"free\\": 4686876672,\\n        \\"used\\": 3431329792,\\n        \\"active\\": 2435858432,\\n        \\"available\\": 5682348032,\\n        \\"swaptotal\\": 1073737728,\\n        \\"swapused\\": 0,\\n        \\"swapfree\\": 1073737728\\n    },\\n    \\"disk\\": {\\n        \\"io\\": {\\n            \\"rIO\\": 38902,\\n            \\"wIO\\": 3786,\\n            \\"tIO\\": 42688\\n        },\\n        \\"read_write\\": {\\n            \\"rx\\": 1000512512,\\n            \\"wx\\": 60686848,\\n            \\"tx\\": 1061199360,\\n            \\"ms\\": 0\\n        },\\n        \\"size\\": [\\n            {\\n                \\"fs\\": \\"/dev/sda1\\",\\n                \\"type\\": \\"ext4\\",\\n                \\"size\\": 12301357056,\\n                \\"used\\": 9956159488,\\n                \\"use\\": 80.94,\\n                \\"mount\\": \\"/\\"\\n            },\\n            {\\n                \\"fs\\": \\"/dev/sda15\\",\\n                \\"type\\": \\"vfat\\",\\n                \\"size\\": 109422592,\\n                \\"used\\": 3756032,\\n                \\"use\\": 3.43,\\n                \\"mount\\": \\"/boot/efi\\"\\n            }\\n        ]\\n    },\\n    \\"network\\": {\\n        \\"default_interface\\": \\"eth0\\",\\n        \\"latency\\": {\\n            \\"url\\": \\"google.com\\",\\n            \\"ok\\": true,\\n            \\"status\\": 301,\\n            \\"ms\\": 72\\n        },\\n        \\"interfaces\\": [\\n            {\\n                \\"iface\\": \\"lo\\",\\n                \\"ifaceName\\": \\"lo\\",\\n                \\"ip4\\": \\"127.0.0.1\\",\\n                \\"ip6\\": \\"::1\\",\\n                \\"mac\\": \\"\\",\\n                \\"operstate\\": \\"unknown\\",\\n                \\"type\\": \\"virtual\\",\\n                \\"duplex\\": \\"\\",\\n                \\"speed\\": -1,\\n                \\"carrierChanges\\": 0\\n            },\\n            {\\n                \\"iface\\": \\"eth0\\",\\n                \\"ifaceName\\": \\"eth0\\",\\n                \\"ip4\\": \\"172.17.105.9\\",\\n                \\"ip6\\": \\"fe80::9ff5:a444:9e2c:5ef5\\",\\n                \\"mac\\": \\"00:15:5d:00:68:04\\",\\n                \\"operstate\\": \\"up\\",\\n                \\"type\\": \\"wired\\",\\n                \\"duplex\\": \\"full\\",\\n                \\"speed\\": 10000,\\n                \\"carrierChanges\\": 1\\n            }\\n        ],\\n        \\"stats\\": [\\n            {\\n                \\"iface\\": \\"eth0\\",\\n                \\"operstate\\": \\"up\\",\\n                \\"rx_bytes\\": 2669790,\\n                \\"rx_dropped\\": 0,\\n                \\"rx_errors\\": 0,\\n                \\"tx_bytes\\": 88141,\\n                \\"tx_dropped\\": 0,\\n                \\"tx_errors\\": 0\\n            }\\n        ],\\n        \\"connections\\": [\\n            {\\n                \\"protocol\\": \\"tcp\\",\\n                \\"localaddress\\": \\"127.0.0.53\\",\\n                \\"localport\\": \\"53\\",\\n                \\"peeraddress\\": \\"0.0.0.0\\",\\n                \\"peerport\\": \\"*\\",\\n                \\"state\\": \\"LISTEN\\",\\n                \\"pid\\": -1,\\n                \\"process\\": \\"\\"\\n            },\\n            {\\n                \\"protocol\\": \\"tcp\\",\\n                \\"localaddress\\": \\"127.0.0.1\\",\\n                \\"localport\\": \\"631\\",\\n                \\"peeraddress\\": \\"0.0.0.0\\",\\n                \\"peerport\\": \\"*\\",\\n                \\"state\\": \\"LISTEN\\",\\n                \\"pid\\": -1,\\n                \\"process\\": \\"\\"\\n            },\\n            {\\n                \\"protocol\\": \\"tcp\\",\\n                \\"localaddress\\": \\"172.17.105.9\\",\\n                \\"localport\\": \\"39248\\",\\n                \\"peeraddress\\": \\"172.217.1.206\\",\\n                \\"peerport\\": \\"80\\",\\n                \\"state\\": \\"TIME_WAIT\\",\\n                \\"pid\\": -1,\\n                \\"process\\": \\"\\"\\n            },\\n            {\\n                \\"protocol\\": \\"tcp\\",\\n                \\"localaddress\\": \\"172.17.105.9\\",\\n                \\"localport\\": \\"45940\\",\\n                \\"peeraddress\\": \\"199.232.10.49\\",\\n                \\"peerport\\": \\"443\\",\\n                \\"state\\": \\"ESTABLISHED\\",\\n                \\"pid\\": 2221,\\n                \\"process\\": \\"gnome-software\\"\\n            },\\n            {\\n                \\"protocol\\": \\"tcp\\",\\n                \\"localaddress\\": \\"127.0.0.1\\",\\n                \\"localport\\": \\"59176\\",\\n                \\"peeraddress\\": \\"127.0.0.1\\",\\n                \\"peerport\\": \\"12345\\",\\n                \\"state\\": \\"ESTABLISHED\\",\\n                \\"pid\\": 2154,\\n                \\"process\\": \\"node\\"\\n            },\\n            {\\n                \\"protocol\\": \\"tcp\\",\\n                \\"localaddress\\": \\"127.0.0.1\\",\\n                \\"localport\\": \\"59174\\",\\n                \\"peeraddress\\": \\"127.0.0.1\\",\\n                \\"peerport\\": \\"12345\\",\\n                \\"state\\": \\"ESTABLISHED\\",\\n                \\"pid\\": 2148,\\n                \\"process\\": \\"node\\"\\n            },\\n            {\\n                \\"protocol\\": \\"tcp\\",\\n                \\"localaddress\\": \\"172.17.105.9\\",\\n                \\"localport\\": \\"56698\\",\\n                \\"peeraddress\\": \\"8.43.85.13\\",\\n                \\"peerport\\": \\"443\\",\\n                \\"state\\": \\"CLOSE_WAIT\\",\\n                \\"pid\\": 2221,\\n                \\"process\\": \\"gnome-software\\"\\n            },\\n            {\\n                \\"protocol\\": \\"tcp\\",\\n                \\"localaddress\\": \\"172.17.105.9\\",\\n                \\"localport\\": \\"56702\\",\\n                \\"peeraddress\\": \\"8.43.85.13\\",\\n                \\"peerport\\": \\"443\\",\\n                \\"state\\": \\"CLOSE_WAIT\\",\\n                \\"pid\\": 2221,\\n                \\"process\\": \\"gnome-software\\"\\n            },\\n            {\\n                \\"protocol\\": \\"tcp6\\",\\n                \\"localaddress\\": \\"127.0.0.1\\",\\n                \\"localport\\": \\"63342\\",\\n                \\"peeraddress\\": \\"::\\",\\n                \\"peerport\\": \\"*\\",\\n                \\"state\\": \\"LISTEN\\",\\n                \\"pid\\": 1817,\\n                \\"process\\": \\"java\\"\\n            },\\n            {\\n                \\"protocol\\": \\"tcp6\\",\\n                \\"localaddress\\": \\"::\\",\\n                \\"localport\\": \\"31283\\",\\n                \\"peeraddress\\": \\"::\\",\\n                \\"peerport\\": \\"*\\",\\n                \\"state\\": \\"LISTEN\\",\\n                \\"pid\\": 2137,\\n                \\"process\\": \\"node\\"\\n            },\\n            {\\n                \\"protocol\\": \\"tcp6\\",\\n                \\"localaddress\\": \\"::1\\",\\n                \\"localport\\": \\"3350\\",\\n                \\"peeraddress\\": \\"::\\",\\n                \\"peerport\\": \\"*\\",\\n                \\"state\\": \\"LISTEN\\",\\n                \\"pid\\": -1,\\n                \\"process\\": \\"\\"\\n            },\\n            {\\n                \\"protocol\\": \\"tcp6\\",\\n                \\"localaddress\\": \\"::1\\",\\n                \\"localport\\": \\"631\\",\\n                \\"peeraddress\\": \\"::\\",\\n                \\"peerport\\": \\"*\\",\\n                \\"state\\": \\"LISTEN\\",\\n                \\"pid\\": -1,\\n                \\"process\\": \\"\\"\\n            },\\n            {\\n                \\"protocol\\": \\"tcp6\\",\\n                \\"localaddress\\": \\"::\\",\\n                \\"localport\\": \\"12345\\",\\n                \\"peeraddress\\": \\"::\\",\\n                \\"peerport\\": \\"*\\",\\n                \\"state\\": \\"LISTEN\\",\\n                \\"pid\\": 2191,\\n                \\"process\\": \\"node\\"\\n            },\\n            {\\n                \\"protocol\\": \\"tcp6\\",\\n                \\"localaddress\\": \\"127.0.0.1\\",\\n                \\"localport\\": \\"6942\\",\\n                \\"peeraddress\\": \\"::\\",\\n                \\"peerport\\": \\"*\\",\\n                \\"state\\": \\"LISTEN\\",\\n                \\"pid\\": 1817,\\n                \\"process\\": \\"java\\"\\n            },\\n            {\\n                \\"protocol\\": \\"tcp6\\",\\n                \\"localaddress\\": \\"::\\",\\n                \\"localport\\": \\"9925\\",\\n                \\"peeraddress\\": \\"::\\",\\n                \\"peerport\\": \\"*\\",\\n                \\"state\\": \\"LISTEN\\",\\n                \\"pid\\": 2137,\\n                \\"process\\": \\"node\\"\\n            },\\n            {\\n                \\"protocol\\": \\"tcp6\\",\\n                \\"localaddress\\": \\"127.0.0.1\\",\\n                \\"localport\\": \\"12345\\",\\n                \\"peeraddress\\": \\"127.0.0.1\\",\\n                \\"peerport\\": \\"59174\\",\\n                \\"state\\": \\"ESTABLISHED\\",\\n                \\"pid\\": 2198,\\n                \\"process\\": \\"node\\"\\n            },\\n            {\\n                \\"protocol\\": \\"tcp6\\",\\n                \\"localaddress\\": \\"172.17.105.9\\",\\n                \\"localport\\": \\"9925\\",\\n                \\"peeraddress\\": \\"172.17.105.1\\",\\n                \\"peerport\\": \\"51771\\",\\n                \\"state\\": \\"ESTABLISHED\\",\\n                \\"pid\\": 2148,\\n                \\"process\\": \\"node\\"\\n            },\\n            {\\n                \\"protocol\\": \\"tcp6\\",\\n                \\"localaddress\\": \\"127.0.0.1\\",\\n                \\"localport\\": \\"12345\\",\\n                \\"peeraddress\\": \\"127.0.0.1\\",\\n                \\"peerport\\": \\"59176\\",\\n                \\"state\\": \\"ESTABLISHED\\",\\n                \\"pid\\": 2198,\\n                \\"process\\": \\"node\\"\\n            }\\n        ]\\n    },\\n    \\"harperdb_processes\\": {\\n        \\"core\\": [\\n            {\\n                \\"pid\\": 2137,\\n                \\"parentPid\\": 1817,\\n                \\"name\\": \\"node\\",\\n                \\"pcpu\\": 0.09332392506771676,\\n                \\"pcpuu\\": 0.08497788298849006,\\n                \\"pcpus\\": 0.008346042079226701,\\n                \\"pmem\\": 0.9,\\n                \\"priority\\": 19,\\n                \\"mem_vsz\\": 420178500,\\n                \\"mem_rss\\": 76388,\\n                \\"nice\\": 0,\\n                \\"started\\": \\"2020-04-16 09:14:13\\",\\n                \\"state\\": \\"sleeping\\",\\n                \\"tty\\": \\"\\",\\n                \\"user\\": \\"kyle\\",\\n                \\"command\\": \\"node\\",\\n                \\"params\\": \\"/home/kyle/WebstormProjects/harperdb/server/hdb_express.js\\",\\n                \\"path\\": \\"/usr/bin\\"\\n            },\\n            {\\n                \\"pid\\": 2148,\\n                \\"parentPid\\": 2137,\\n                \\"name\\": \\"node\\",\\n                \\"pcpu\\": 0.13884779095440786,\\n                \\"pcpuu\\": 0.11077474032428168,\\n                \\"pcpus\\": 0.028073050630126176,\\n                \\"pmem\\": 1,\\n                \\"priority\\": 19,\\n                \\"mem_vsz\\": 315389400,\\n                \\"mem_rss\\": 84636,\\n                \\"nice\\": 0,\\n                \\"started\\": \\"2020-04-16 09:14:14\\",\\n                \\"state\\": \\"sleeping\\",\\n                \\"tty\\": \\"\\",\\n                \\"user\\": \\"kyle\\",\\n                \\"command\\": \\"node\\",\\n                \\"params\\": \\"/home/kyle/WebstormProjects/harperdb/server/hdb_express.js\\",\\n                \\"path\\": \\"/usr/bin\\"\\n            },\\n            {\\n                \\"pid\\": 2154,\\n                \\"parentPid\\": 2137,\\n                \\"name\\": \\"node\\",\\n                \\"pcpu\\": 0.08953026957715916,\\n                \\"pcpuu\\": 0.08270168969415549,\\n                \\"pcpus\\": 0.006828579883003665,\\n                \\"pmem\\": 1,\\n                \\"priority\\": 19,\\n                \\"mem_vsz\\": 315388840,\\n                \\"mem_rss\\": 82612,\\n                \\"nice\\": 0,\\n                \\"started\\": \\"2020-04-16 09:14:14\\",\\n                \\"state\\": \\"sleeping\\",\\n                \\"tty\\": \\"\\",\\n                \\"user\\": \\"kyle\\",\\n                \\"command\\": \\"node\\",\\n                \\"params\\": \\"/home/kyle/WebstormProjects/harperdb/server/hdb_express.js\\",\\n                \\"path\\": \\"/usr/bin\\"\\n            }\\n        ],\\n        \\"clustering\\": [\\n            {\\n                \\"pid\\": 2170,\\n                \\"parentPid\\": 2137,\\n                \\"name\\": \\"node\\",\\n                \\"pcpu\\": 0.018209546354676438,\\n                \\"pcpuu\\": 0.015174621962230366,\\n                \\"pcpus\\": 0.003034924392446073,\\n                \\"pmem\\": 0.5,\\n                \\"priority\\": 19,\\n                \\"mem_vsz\\": 606912,\\n                \\"mem_rss\\": 39860,\\n                \\"nice\\": 0,\\n                \\"started\\": \\"2020-04-16 09:14:15\\",\\n                \\"state\\": \\"sleeping\\",\\n                \\"tty\\": \\"\\",\\n                \\"user\\": \\"kyle\\",\\n                \\"command\\": \\"node\\",\\n                \\"params\\": \\"/home/kyle/WebstormProjects/harperdb/server/socketcluster/Server.js\\",\\n                \\"path\\": \\"/usr/bin\\"\\n            },\\n            {\\n                \\"pid\\": 2184,\\n                \\"parentPid\\": 2170,\\n                \\"name\\": \\"node\\",\\n                \\"pcpu\\": 0.013657159766007329,\\n                \\"pcpuu\\": 0.012139697569784292,\\n                \\"pcpus\\": 0.0015174621962230365,\\n                \\"pmem\\": 0.4,\\n                \\"priority\\": 19,\\n                \\"mem_vsz\\": 670988,\\n                \\"mem_rss\\": 37884,\\n                \\"nice\\": 0,\\n                \\"started\\": \\"2020-04-16 09:14:15\\",\\n                \\"state\\": \\"sleeping\\",\\n                \\"tty\\": \\"\\",\\n                \\"user\\": \\"kyle\\",\\n                \\"command\\": \\"node\\",\\n                \\"params\\": \\"/home/kyle/WebstormProjects/harperdb/server/socketcluster/broker.js {\\\\\\"id\\\\\\":0,\\\\\\"debug\\\\\\":null,\\\\\\"socketPath\\\\\\":\\\\\\"/tmp/socketcluster/socket_server_61253374f8/b0\\\\\\",\\\\\\"expiryAccuracy\\\\\\":5000,\\\\\\"downgradeToUser\\\\\\":false,\\\\\\"brokerControllerPath\\\\\\":\\\\\\"/home/kyle/WebstormProjects/harperdb/server/socketcluster/broker.js\\\\\\",\\\\\\"processTermTimeout\\\\\\":10000}\\",\\n                \\"path\\": \\"/usr/bin\\"\\n            },\\n            {\\n                \\"pid\\": 2191,\\n                \\"parentPid\\": 2170,\\n                \\"name\\": \\"node\\",\\n                \\"pcpu\\": 0.0037936554905575915,\\n                \\"pcpuu\\": 0.003034924392446073,\\n                \\"pcpus\\": 0.0007587310981115183,\\n                \\"pmem\\": 0.3,\\n                \\"priority\\": 19,\\n                \\"mem_vsz\\": 564444,\\n                \\"mem_rss\\": 29012,\\n                \\"nice\\": 0,\\n                \\"started\\": \\"2020-04-16 09:14:16\\",\\n                \\"state\\": \\"sleeping\\",\\n                \\"tty\\": \\"\\",\\n                \\"user\\": \\"kyle\\",\\n                \\"command\\": \\"node\\",\\n                \\"params\\": \\"/home/kyle/WebstormProjects/harperdb/node_modules/socketcluster/default-workercluster-controller.js\\",\\n                \\"path\\": \\"/usr/bin\\"\\n            },\\n            {\\n                \\"pid\\": 2198,\\n                \\"parentPid\\": 2191,\\n                \\"name\\": \\"node\\",\\n                \\"pcpu\\": 0.060698487848921456,\\n                \\"pcpuu\\": 0.057663563456475386,\\n                \\"pcpus\\": 0.003034924392446073,\\n                \\"pmem\\": 0.9,\\n                \\"priority\\": 19,\\n                \\"mem_vsz\\": 856396,\\n                \\"mem_rss\\": 71580,\\n                \\"nice\\": 0,\\n                \\"started\\": \\"2020-04-16 09:14:16\\",\\n                \\"state\\": \\"sleeping\\",\\n                \\"tty\\": \\"\\",\\n                \\"user\\": \\"kyle\\",\\n                \\"command\\": \\"node\\",\\n                \\"params\\": \\"/home/kyle/WebstormProjects/harperdb/server/socketcluster/worker/ClusterWorker.js\\",\\n                \\"path\\": \\"/usr/bin\\"\\n            }\\n        ]\\n    }\\n}"}]}],"event":[{"listen":"prerequest","script":{"id":"85805107-4951-41db-9e57-8b295d12ec13","type":"text/javascript","exec":[""]}},{"listen":"test","script":{"id":"a6ec78c3-7918-4e94-aaf6-444bba654017","type":"text/javascript","exec":[""]}}],"protocolProfileBehavior":{}}],"auth":{"type":"basic","basic":[{"key":"password","value":"{{HDB_PASSWORD}}","type":"string"},{"key":"username","value":"{{HDB_USER}}","type":"string"}]},"event":[{"listen":"prerequest","script":{"id":"b02e9d4c-33d2-45dd-8a8f-f1d5d3aaea13","type":"text/javascript","exec":[""]}},{"listen":"test","script":{"id":"8198ae1a-4ee7-4918-a3dc-78b5b2147e49","type":"text/javascript","exec":[""]}}],"variable":[{"id":"e4ce2361-5441-46e5-bbd0-881d8c02b501","key":"HDB_USER","value":"HDB_ADMIN"},{"id":"baa7fd0d-67e3-4e4a-b5d9-cea8dbdcf17b","key":"HDB_PASSWORD","value":"password"},{"id":"6edaa0ea-f80d-4ba2-a8f4-c33ed6dff633","key":"HDB_ENDPOINT","value":"http://localhost:9925"}],"protocolProfileBehavior":{}}'),i=async()=>{try{const e=await fetch(o.Z.postman_collection_url),n=await e.json();a.Z.update((e=>{e.postmanCollection=n}))}catch(e){a.Z.update((e=>{e.postmanCollection=r}))}}},8329:(e,n,t)=>{t.d(n,{Z:()=>o});var a=t(1842);const o=e=>{const n=[];return e.map((e=>{let{id:t,amount_decimal:o,interval:r,amount:i,active:s,subscription_id:l,name:d,quantity:c,available:u,metadata:{ram_allocation:p,instance_type:h,has_gpus:m}}=e;const y=l?0:parseInt(o,10)/100,_=(0,a.Z)(i),b=l?d:"0"===o?"FREE":"".concat(_),g=l?d:"0"===o?"FREE":"".concat(_,"/").concat(r),v=!!p&&parseInt(p,10),w="".concat(v/1024,"GB"),k="".concat(w," RAM  ").concat(m?"+ GPU Support ":"","\u2022  ").concat(l?"".concat(d,"  \u2022  ").concat(u," remaining"):"0"!==o?"".concat(_,"/").concat(r):"FREE"," ").concat(s?"":"(legacy)");return v&&n.push({label:k,value:{active:s,instance_type:h,stripe_plan_id:t,compute_interval:r,compute_subscription_name:d,compute_subscription_id:l,compute_quantity:c,compute_quantity_available:u,compute_ram:v,compute_ram_string:w,compute_price:y,compute_comma_amount:_,compute_price_string:b,compute_price_string_with_interval:g}})})),n.sort(((e,n)=>e.value.compute_ram===n.value.compute_ram?e.value.compute_subscription_name>n.value.compute_subscription_name?1:-1:e.value.compute_ram-n.value.compute_ram))}},9274:(e,n,t)=>{t.d(n,{Z:()=>o});var a=t(1842);const o=e=>{const n=[];return e.map((e=>{let{tiers:t,interval:o,active:r,id:i,subscription_id:s,name:l,available:d}=e;const c=t.find((e=>!!e.up_to)).up_to;return[...new Set([c,10,100,250,500,1e3,1500,2e3,2500,3e3,3500,4e3,4500,5e3,5500,6e3,6500,7e3,7500,8e3,8500,9e3,9500,1e4])].filter((e=>!s||e!==c)).map((e=>{const c=t.find((n=>n.up_to&&e<=n.up_to||!n.up_to)),u=s?0:e*(c.unit_amount/100),p=s?l:u?"$".concat((0,a.Z)(u.toFixed(2))):"FREE",h=s?l:u?"$".concat((0,a.Z)(u.toFixed(2)),"/").concat(o):"FREE",m=e>=1e3?"".concat(e/1e3,"TB"):"".concat(e,"GB"),y=d?d>1e3?"".concat((d/1024).toFixed(2),"TB"):"".concat(d,"GB"):0,_="".concat(m,"  \u2022  ").concat(s?"".concat(l,"  \u2022  ").concat(y," remaining"):u?"$".concat((0,a.Z)(u.toFixed(2)),"/").concat(o):"FREE"," ").concat(r?"":"(legacy)");return n.push({label:_,value:{active:r,data_volume_size:e,iops:3e3,storage_interval:o,stripe_storage_plan_id:i,storage_subscription_id:s,storage_subscription_name:l,storage_quantity_available:d,storage_price:u,storage_price_string:p,storage_price_string_with_interval:h,data_volume_size_string:m}})}))})),n.sort(((e,n)=>e.value.data_volume_size===n.value.data_volume_size?e.value.storage_subscription_name>n.value.storage_subscription_name?1:-1:e.value.data_volume_size-n.value.data_volume_size))}},6449:(e,n,t)=>{t.d(n,{Z:()=>a});const a=new(t(7387).yh)({auth:!1,customer:!1,users:!1,products:!1,regions:!1,integrations:!1,subscriptions:!1,instances:!1,alarms:!1,alarmsError:!1,hasCard:!1,lastUpdate:!1,orgSearch:"",filterSearch:"",filterLocal:!0,filterCloud:!0,version:!1,theme:"dark",postmanCollection:!1})},9266:(e,n,t)=>{t.d(n,{Z:()=>a});const a=(0,t(8131).Z)("persistedUser")},1842:(e,n,t)=>{t.d(n,{Z:()=>a});const a=e=>e&&e.toString().replace(/\B(?=(\d{3})+(?!\d))/g,",")}}]);
'use strict';

const rewire = require('rewire');
const search_util = rewire('../../../utility/lmdb/searchUtility');
const fs = require('fs-extra');
const environment_utility = rewire('../../../utility/lmdb/environmentUtility');
const write_utility = require('../../../utility/lmdb/writeUtility');
const test_utils = require('../../test_utils');
const path = require('path');
const assert = require('assert');
const test_data = require('../../personData.json');
const test_data2 = require('../../testData');
const sinon = require('sinon');
const arrayOfValues = test_utils.arrayOfValues;
const uuid = require('uuid').v4;
const sandbox = sinon.createSandbox();
const BASE_TEST_PATH = path.join(test_utils.getMockLMDBPath(), 'lmdbTest');
let TEST_ENVIRONMENT_NAME = 'test';
const HASH_ATTRIBUTE_NAME = 'id';
const LMDB_TEST_ERRORS = require('../../commonTestErrors').LMDB_ERRORS_ENUM;
const PERSON_ATTRIBUTES = ['id', 'first_name', 'state', 'age', 'alive', 'birth_month'];

const TIMESTAMP = Date.now();

describe('test lessThan function', () => {
	let env, transaction;
	before(async () => {
		global.lmdb_map = undefined;
		await fs.remove(test_utils.getMockLMDBPath());
		await fs.mkdirp(BASE_TEST_PATH);
		TEST_ENVIRONMENT_NAME = uuid();
		env = await environment_utility.createEnvironment(BASE_TEST_PATH, TEST_ENVIRONMENT_NAME);
		await environment_utility.createDBI(env, 'id', false, true);
		await environment_utility.createDBI(env, 'temperature', true);
		await environment_utility.createDBI(env, 'temperature_double', true);
		await environment_utility.createDBI(env, 'temperature_str', true);
		await environment_utility.createDBI(env, 'state', true);

		await write_utility.insertRecords(
			env,
			HASH_ATTRIBUTE_NAME,
			['id', 'temperature', 'temperature_double', 'temperature_str', 'state'],
			test_data2
		);
		transaction = env.useReadTransaction();
		transaction.database = env;
	});

	after(async () => {
		await env.close();
		global.lmdb_map = undefined;
		await fs.remove(test_utils.getMockLMDBPath());
	});

	it('test validation', () => {
		test_utils.assertErrorSync(search_util.lessThan, [], LMDB_TEST_ERRORS.ENV_REQUIRED, 'test no args');
		test_utils.assertErrorSync(
			search_util.lessThan,
			[HASH_ATTRIBUTE_NAME],
			LMDB_TEST_ERRORS.INVALID_ENVIRONMENT,
			'invalid env variable'
		);
		test_utils.assertErrorSync(
			search_util.lessThan,
			[transaction],
			LMDB_TEST_ERRORS.ATTRIBUTE_REQUIRED,
			'no hash attribute'
		);
		test_utils.assertErrorSync(
			search_util.lessThan,
			[transaction, 'id', 'temperature'],
			LMDB_TEST_ERRORS.SEARCH_VALUE_REQUIRED,
			'no search_value'
		);
		test_utils.assertErrorSync(
			search_util.lessThan,
			[transaction, 'id', 'temperature_str', '11111111'],
			undefined,
			'all arguments'
		);
	});

	/** TEST HASH ATTRIBUTE **/
	it('test lessThan 100 on hash column', () => {
		let expected = [
			0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
			31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58,
			59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86,
			87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99,
		];

		let results = arrayOfValues(search_util.lessThan(transaction, 'id', 'id', 100));
		assert.deepEqual(results.length, 100);
		assert.deepEqual(results, expected);
	});

	it('test lessThan 11 on hash column', () => {
		let expected = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];

		let results = arrayOfValues(search_util.lessThan(transaction, 'id', 'id', 11));
		assert.deepEqual(results.length, 11);
		assert.deepEqual(results, expected);
	});

	it('test lessThan 0 on hash column', () => {
		let expected = [];

		let results = arrayOfValues(search_util.lessThan(transaction, 'id', 'id', 0));
		assert.deepEqual(results.length, 0);
		assert.deepEqual(results, expected);
	});

	it('test lessThan 1000 (max value) on hash column', () => {
		let expected = [
			0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
			31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58,
			59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86,
			87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
			112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
			135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
			158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180,
			181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
			204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
			227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
			250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272,
			273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295,
			296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318,
			319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341,
			342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364,
			365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387,
			388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
			411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
			434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
			457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
			480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
			503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525,
			526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
			549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
			572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594,
			595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617,
			618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
			641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
			664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686,
			687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709,
			710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732,
			733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755,
			756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
			779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801,
			802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824,
			825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847,
			848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870,
			871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893,
			894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916,
			917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939,
			940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962,
			963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985,
			986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999,
		];

		let results = arrayOfValues(search_util.lessThan(transaction, 'id', 'id', 1000));
		assert.deepEqual(results.length, 1000);
		assert.deepEqual(results, expected);
	});

	it('test lessThan 1111 (a value larger than the max) on hash column', () => {
		let results = arrayOfValues(search_util.lessThan(transaction, 'id', 'id', '1111'));
		assert.strictEqual(results.length, 0);
	});

	it('test lessThan -8 on hash column', () => {
		let results = arrayOfValues(search_util.lessThan(transaction, 'id', 'id', -8));
		assert.deepStrictEqual(results, []);
	});

	/**DOUBLE**/

	it('test lessThan 100 on double key column', () => {
		let expected = [
			596, 104, 4, 710, 929, 647, 860, 433, 520, 604, 489, 292, 982, 155, 1, 518, 880, 877, 237, 741, 527, 472, 579,
			200, 267, 55, 57, 441, 935, 539, 779, 73, 705, 499, 617, 244, 194, 419, 407, 187, 6, 147, 725, 421, 786, 118, 262,
			689, 440, 497, 112, 679, 13, 708, 254, 458, 252, 279, 232, 216, 788, 144, 713, 462, 321, 733, 508, 869, 845, 100,
			648, 392, 610, 803, 997, 882, 666, 174, 624, 973, 977, 482, 447, 327, 19, 139, 947, 526, 911, 333, 559, 221, 722,
			686, 339, 302, 404, 53, 371, 131, 808, 818, 522, 168, 541, 191, 40, 784, 446, 980, 424, 82, 772, 195, 924, 449,
			154, 642, 940, 875, 31, 749, 814, 926, 993, 664, 494, 43, 241, 351, 172, 887, 791, 87, 670, 671, 899, 176, 273,
			42, 465, 151, 904, 33, 454, 169, 550, 711, 178, 657, 585, 537, 427, 702, 256, 606, 799, 352, 228, 616, 724, 127,
			475, 329, 731, 406, 391, 9, 91, 135, 312, 415, 948, 416, 683, 383, 767, 186, 336, 394, 698, 735, 177, 747, 820,
			361, 315, 640, 242, 307, 349, 278, 994, 46, 601, 511, 324, 881, 255, 551, 358, 320, 162, 107, 782, 67, 775, 15,
			605, 789, 456, 758, 629, 754, 577, 861, 771, 876, 762, 141, 756, 222, 27, 591, 922, 452, 631, 830, 457, 486, 382,
			5, 650, 337, 439, 983, 714, 372, 569, 350, 916, 560, 622, 615, 208, 746, 86, 360, 48, 967, 276, 495, 225, 582,
			687, 386, 557, 902, 797, 122, 480, 136, 976, 565, 460, 544, 517, 503, 575, 259, 78, 621, 332, 303, 651, 864, 792,
			70, 493, 991, 970, 840, 515, 837, 744, 119, 357, 509, 865, 38, 504, 106, 65, 576, 545, 625, 93, 0, 872, 72, 695,
			23, 294, 500, 270, 885, 129, 28, 892, 496, 530, 984, 748, 995, 258, 923, 368, 395, 553, 210, 422, 274, 954, 842,
			268, 658, 224, 519, 641, 740, 662, 445, 230, 239, 938, 823, 612, 600, 132, 960, 665, 133, 80, 189, 667, 691, 468,
			387, 690, 987, 101, 17, 704, 742, 295, 126, 932, 298, 806, 828, 966, 894, 275, 716, 878, 450, 850, 402, 783, 3,
			167, 245, 423, 487, 62, 316, 266, 715, 888, 50, 283, 663, 802, 701, 466, 192, 432, 649, 848, 405, 281, 399, 453,
			296, 197, 68, 217, 288, 253, 414, 903, 800, 925, 128, 655, 912, 745, 523, 874, 514, 59, 589, 978, 822, 470, 318,
			646, 220, 838, 198, 964, 836, 464, 110, 953, 870, 173, 729, 219, 77, 21, 14, 753, 299, 158, 397, 412, 30, 586,
			293, 819, 282, 723, 718, 443, 531, 377, 909, 369, 816, 962, 770, 676, 61, 883, 289, 834, 781, 426, 570, 512, 343,
			193, 661, 854, 150, 636, 111, 287, 261, 751, 901, 898, 554, 164, 137, 780, 37, 182, 813, 478, 146, 26, 171, 727,
			628, 436, 760, 310, 389, 90, 474, 401, 359, 824, 763, 54, 231, 269, 218, 975, 233, 124, 317, 98, 592, 393, 18,
			535, 418, 736, 123, 755, 476, 921, 540, 284, 688, 121, 632, 955, 920, 71, 425, 681, 769, 120, 272, 841, 227, 620,
			619, 680, 992, 51, 809, 971, 669, 937, 108, 858, 558, 979, 490, 285, 946, 340, 362, 152, 314, 180, 300, 608, 719,
			463, 778, 105, 485, 84, 694, 335, 140, 159, 378, 477, 202, 322, 311, 810, 761, 998, 384, 513, 897, 184, 795, 532,
			685, 356, 411, 305, 644, 229, 574, 206, 908, 325, 832, 821, 85, 41, 867, 114, 855, 566, 491, 801, 660, 919, 251,
			203, 75, 609, 444, 759, 951, 247, 738, 611, 555, 721, 645, 546, 408, 950, 634, 750, 552, 844, 857, 326, 696, 138,
			97, 843, 117, 556, 355, 66, 798, 413, 243, 328, 707, 633, 957, 794, 891, 20, 793, 7, 331, 896, 338, 590, 581, 618,
			313, 201, 626, 700, 161, 492, 89, 379, 471, 790, 12, 743, 157, 400, 473, 506, 931, 388, 263, 367, 988, 409, 757,
			286, 739, 765, 639, 910, 859, 240, 777, 728, 768, 831, 24, 934, 213, 720, 613, 972, 573, 364, 212, 734, 35, 561,
			847, 956, 417, 29, 673, 264, 58, 986, 47, 483, 571, 342, 113, 963, 148, 907, 547, 99, 985, 583, 969, 528, 717,
			627, 36, 142, 599, 428, 94, 776, 347, 215, 521, 595, 45, 952, 385, 933, 999, 890, 672, 562, 365, 752, 16, 8, 889,
			807, 941, 529, 226, 109, 271, 149, 507, 597, 257, 706, 410, 234, 207, 196, 430, 930, 250, 703, 584, 323, 505, 981,
			949, 96, 88, 374, 95, 580, 205, 766, 434, 442, 905, 163, 996, 839, 835, 469, 588, 805, 52, 63, 11, 623, 190, 156,
			587, 145, 238, 10, 534, 209, 538, 306, 914, 699, 804, 677, 183, 179, 936, 593, 74, 165, 319, 199, 811, 130, 958,
			277, 829, 103, 420, 249, 730, 39, 248, 856, 974, 886, 353, 175, 525, 638, 812, 2, 873, 32, 290, 668, 693, 785,
			968, 817, 594, 76, 913, 461, 578, 563, 79, 871, 852, 928, 297, 682, 815, 223, 170, 236, 376, 884, 764, 607, 291,
			459, 366, 692, 787, 341, 346, 403, 348, 774, 961, 709, 92, 435, 265, 134, 684, 246, 944, 637, 942, 712, 567, 732,
			906, 102, 60, 479, 185, 990, 879, 502, 773, 467, 345, 81, 572, 488, 166, 635, 516, 939, 373, 659, 915, 918, 380,
			143, 330, 451, 396, 851, 498, 917, 437, 643, 448, 280, 868, 737, 49, 125, 543, 614, 602, 484, 827, 381, 603, 160,
			64, 549, 959, 524, 849, 548, 943, 674, 334, 116, 153, 438, 862, 344, 455, 598, 390, 863, 653, 188, 69, 363, 214,
			726, 308, 652, 853, 697, 370, 510, 927, 895, 568, 204, 354, 25, 656, 675, 301, 945, 989, 34, 796, 833, 22, 211,
			181, 826, 900, 564, 56, 398, 893, 429, 630, 83, 678, 866, 431, 44, 235, 536, 309, 375, 825, 304, 542, 260, 965,
			115, 846, 533, 481, 654, 501,
		];

		let results = arrayOfValues(search_util.lessThan(transaction, 'id', 'temperature_double', 100));
		assert.deepEqual(results.length, 1000);
		assert.deepEqual(results, expected);
	});

	it('test lessThan 11 on double key column', () => {
		let expected = [
			596, 104, 4, 710, 929, 647, 860, 433, 520, 604, 489, 292, 982, 155, 1, 518, 880, 877, 237, 741, 527, 472, 579,
			200, 267, 55, 57, 441, 935, 539, 779, 73, 705, 499, 617, 244, 194, 419, 407, 187, 6, 147, 725, 421, 786, 118, 262,
			689, 440, 497, 112, 679, 13, 708, 254, 458, 252, 279, 232, 216, 788, 144, 713, 462, 321, 733, 508, 869, 845, 100,
			648, 392, 610, 803, 997, 882, 666, 174, 624, 973, 977, 482, 447, 327, 19, 139, 947, 526, 911, 333, 559, 221, 722,
			686, 339, 302, 404, 53, 371, 131, 808, 818, 522, 168, 541, 191, 40, 784, 446, 980, 424, 82, 772, 195, 924, 449,
			154, 642, 940, 875, 31, 749, 814, 926, 993, 664, 494, 43, 241, 351, 172, 887, 791, 87, 670, 671, 899, 176, 273,
			42, 465, 151, 904, 33, 454, 169, 550, 711, 178, 657, 585, 537, 427, 702, 256, 606, 799, 352, 228, 616, 724, 127,
			475, 329, 731, 406, 391, 9, 91, 135, 312, 415, 948, 416, 683, 383, 767, 186, 336, 394, 698, 735, 177, 747, 820,
			361, 315, 640, 242, 307, 349, 278, 994, 46, 601, 511, 324, 881, 255, 551, 358, 320, 162, 107, 782, 67, 775, 15,
			605, 789, 456, 758, 629, 754, 577,
		];

		let results = arrayOfValues(search_util.lessThan(transaction, 'id', 'temperature_double', 11));
		assert.deepEqual(results.length, 215);
		assert.deepEqual(results, expected);
	});

	it('test lessThan 0 on double key column', () => {
		let expected = [
			596, 104, 4, 710, 929, 647, 860, 433, 520, 604, 489, 292, 982, 155, 1, 518, 880, 877, 237, 741, 527, 472, 579,
			200, 267, 55, 57, 441, 935, 539, 779, 73, 705, 499, 617, 244, 194, 419, 407, 187, 6, 147, 725, 421, 786, 118, 262,
			689, 440, 497, 112, 679, 13, 708, 254, 458, 252, 279, 232, 216, 788, 144, 713, 462, 321, 733, 508, 869, 845, 100,
			648, 392, 610, 803, 997, 882, 666, 174, 624, 973, 977, 482, 447, 327, 19, 139, 947, 526, 911, 333, 559, 221, 722,
			686, 339, 302, 404, 53, 371, 131, 808, 818, 522, 168, 541, 191, 40, 784, 446, 980,
		];

		let results = arrayOfValues(search_util.lessThan(transaction, 'id', 'temperature_double', 0));
		assert.deepEqual(results.length, 110);
		assert.deepEqual(results, expected);
	});

	it('test lessThan 111 on double key column', () => {
		let expected = [
			596, 104, 4, 710, 929, 647, 860, 433, 520, 604, 489, 292, 982, 155, 1, 518, 880, 877, 237, 741, 527, 472, 579,
			200, 267, 55, 57, 441, 935, 539, 779, 73, 705, 499, 617, 244, 194, 419, 407, 187, 6, 147, 725, 421, 786, 118, 262,
			689, 440, 497, 112, 679, 13, 708, 254, 458, 252, 279, 232, 216, 788, 144, 713, 462, 321, 733, 508, 869, 845, 100,
			648, 392, 610, 803, 997, 882, 666, 174, 624, 973, 977, 482, 447, 327, 19, 139, 947, 526, 911, 333, 559, 221, 722,
			686, 339, 302, 404, 53, 371, 131, 808, 818, 522, 168, 541, 191, 40, 784, 446, 980, 424, 82, 772, 195, 924, 449,
			154, 642, 940, 875, 31, 749, 814, 926, 993, 664, 494, 43, 241, 351, 172, 887, 791, 87, 670, 671, 899, 176, 273,
			42, 465, 151, 904, 33, 454, 169, 550, 711, 178, 657, 585, 537, 427, 702, 256, 606, 799, 352, 228, 616, 724, 127,
			475, 329, 731, 406, 391, 9, 91, 135, 312, 415, 948, 416, 683, 383, 767, 186, 336, 394, 698, 735, 177, 747, 820,
			361, 315, 640, 242, 307, 349, 278, 994, 46, 601, 511, 324, 881, 255, 551, 358, 320, 162, 107, 782, 67, 775, 15,
			605, 789, 456, 758, 629, 754, 577, 861, 771, 876, 762, 141, 756, 222, 27, 591, 922, 452, 631, 830, 457, 486, 382,
			5, 650, 337, 439, 983, 714, 372, 569, 350, 916, 560, 622, 615, 208, 746, 86, 360, 48, 967, 276, 495, 225, 582,
			687, 386, 557, 902, 797, 122, 480, 136, 976, 565, 460, 544, 517, 503, 575, 259, 78, 621, 332, 303, 651, 864, 792,
			70, 493, 991, 970, 840, 515, 837, 744, 119, 357, 509, 865, 38, 504, 106, 65, 576, 545, 625, 93, 0, 872, 72, 695,
			23, 294, 500, 270, 885, 129, 28, 892, 496, 530, 984, 748, 995, 258, 923, 368, 395, 553, 210, 422, 274, 954, 842,
			268, 658, 224, 519, 641, 740, 662, 445, 230, 239, 938, 823, 612, 600, 132, 960, 665, 133, 80, 189, 667, 691, 468,
			387, 690, 987, 101, 17, 704, 742, 295, 126, 932, 298, 806, 828, 966, 894, 275, 716, 878, 450, 850, 402, 783, 3,
			167, 245, 423, 487, 62, 316, 266, 715, 888, 50, 283, 663, 802, 701, 466, 192, 432, 649, 848, 405, 281, 399, 453,
			296, 197, 68, 217, 288, 253, 414, 903, 800, 925, 128, 655, 912, 745, 523, 874, 514, 59, 589, 978, 822, 470, 318,
			646, 220, 838, 198, 964, 836, 464, 110, 953, 870, 173, 729, 219, 77, 21, 14, 753, 299, 158, 397, 412, 30, 586,
			293, 819, 282, 723, 718, 443, 531, 377, 909, 369, 816, 962, 770, 676, 61, 883, 289, 834, 781, 426, 570, 512, 343,
			193, 661, 854, 150, 636, 111, 287, 261, 751, 901, 898, 554, 164, 137, 780, 37, 182, 813, 478, 146, 26, 171, 727,
			628, 436, 760, 310, 389, 90, 474, 401, 359, 824, 763, 54, 231, 269, 218, 975, 233, 124, 317, 98, 592, 393, 18,
			535, 418, 736, 123, 755, 476, 921, 540, 284, 688, 121, 632, 955, 920, 71, 425, 681, 769, 120, 272, 841, 227, 620,
			619, 680, 992, 51, 809, 971, 669, 937, 108, 858, 558, 979, 490, 285, 946, 340, 362, 152, 314, 180, 300, 608, 719,
			463, 778, 105, 485, 84, 694, 335, 140, 159, 378, 477, 202, 322, 311, 810, 761, 998, 384, 513, 897, 184, 795, 532,
			685, 356, 411, 305, 644, 229, 574, 206, 908, 325, 832, 821, 85, 41, 867, 114, 855, 566, 491, 801, 660, 919, 251,
			203, 75, 609, 444, 759, 951, 247, 738, 611, 555, 721, 645, 546, 408, 950, 634, 750, 552, 844, 857, 326, 696, 138,
			97, 843, 117, 556, 355, 66, 798, 413, 243, 328, 707, 633, 957, 794, 891, 20, 793, 7, 331, 896, 338, 590, 581, 618,
			313, 201, 626, 700, 161, 492, 89, 379, 471, 790, 12, 743, 157, 400, 473, 506, 931, 388, 263, 367, 988, 409, 757,
			286, 739, 765, 639, 910, 859, 240, 777, 728, 768, 831, 24, 934, 213, 720, 613, 972, 573, 364, 212, 734, 35, 561,
			847, 956, 417, 29, 673, 264, 58, 986, 47, 483, 571, 342, 113, 963, 148, 907, 547, 99, 985, 583, 969, 528, 717,
			627, 36, 142, 599, 428, 94, 776, 347, 215, 521, 595, 45, 952, 385, 933, 999, 890, 672, 562, 365, 752, 16, 8, 889,
			807, 941, 529, 226, 109, 271, 149, 507, 597, 257, 706, 410, 234, 207, 196, 430, 930, 250, 703, 584, 323, 505, 981,
			949, 96, 88, 374, 95, 580, 205, 766, 434, 442, 905, 163, 996, 839, 835, 469, 588, 805, 52, 63, 11, 623, 190, 156,
			587, 145, 238, 10, 534, 209, 538, 306, 914, 699, 804, 677, 183, 179, 936, 593, 74, 165, 319, 199, 811, 130, 958,
			277, 829, 103, 420, 249, 730, 39, 248, 856, 974, 886, 353, 175, 525, 638, 812, 2, 873, 32, 290, 668, 693, 785,
			968, 817, 594, 76, 913, 461, 578, 563, 79, 871, 852, 928, 297, 682, 815, 223, 170, 236, 376, 884, 764, 607, 291,
			459, 366, 692, 787, 341, 346, 403, 348, 774, 961, 709, 92, 435, 265, 134, 684, 246, 944, 637, 942, 712, 567, 732,
			906, 102, 60, 479, 185, 990, 879, 502, 773, 467, 345, 81, 572, 488, 166, 635, 516, 939, 373, 659, 915, 918, 380,
			143, 330, 451, 396, 851, 498, 917, 437, 643, 448, 280, 868, 737, 49, 125, 543, 614, 602, 484, 827, 381, 603, 160,
			64, 549, 959, 524, 849, 548, 943, 674, 334, 116, 153, 438, 862, 344, 455, 598, 390, 863, 653, 188, 69, 363, 214,
			726, 308, 652, 853, 697, 370, 510, 927, 895, 568, 204, 354, 25, 656, 675, 301, 945, 989, 34, 796, 833, 22, 211,
			181, 826, 900, 564, 56, 398, 893, 429, 630, 83, 678, 866, 431, 44, 235, 536, 309, 375, 825, 304, 542, 260, 965,
			115, 846, 533, 481, 654, 501,
		];

		let results = arrayOfValues(search_util.lessThan(transaction, 'id', 'temperature_double', 111));
		assert.deepEqual(results.length, 1000);
		assert.deepEqual(results, expected);
	});

	it('test lessThan 1111 on double key column', () => {
		let expected = [
			596, 104, 4, 710, 929, 647, 860, 433, 520, 604, 489, 292, 982, 155, 1, 518, 880, 877, 237, 741, 527, 472, 579,
			200, 267, 55, 57, 441, 935, 539, 779, 73, 705, 499, 617, 244, 194, 419, 407, 187, 6, 147, 725, 421, 786, 118, 262,
			689, 440, 497, 112, 679, 13, 708, 254, 458, 252, 279, 232, 216, 788, 144, 713, 462, 321, 733, 508, 869, 845, 100,
			648, 392, 610, 803, 997, 882, 666, 174, 624, 973, 977, 482, 447, 327, 19, 139, 947, 526, 911, 333, 559, 221, 722,
			686, 339, 302, 404, 53, 371, 131, 808, 818, 522, 168, 541, 191, 40, 784, 446, 980, 424, 82, 772, 195, 924, 449,
			154, 642, 940, 875, 31, 749, 814, 926, 993, 664, 494, 43, 241, 351, 172, 887, 791, 87, 670, 671, 899, 176, 273,
			42, 465, 151, 904, 33, 454, 169, 550, 711, 178, 657, 585, 537, 427, 702, 256, 606, 799, 352, 228, 616, 724, 127,
			475, 329, 731, 406, 391, 9, 91, 135, 312, 415, 948, 416, 683, 383, 767, 186, 336, 394, 698, 735, 177, 747, 820,
			361, 315, 640, 242, 307, 349, 278, 994, 46, 601, 511, 324, 881, 255, 551, 358, 320, 162, 107, 782, 67, 775, 15,
			605, 789, 456, 758, 629, 754, 577, 861, 771, 876, 762, 141, 756, 222, 27, 591, 922, 452, 631, 830, 457, 486, 382,
			5, 650, 337, 439, 983, 714, 372, 569, 350, 916, 560, 622, 615, 208, 746, 86, 360, 48, 967, 276, 495, 225, 582,
			687, 386, 557, 902, 797, 122, 480, 136, 976, 565, 460, 544, 517, 503, 575, 259, 78, 621, 332, 303, 651, 864, 792,
			70, 493, 991, 970, 840, 515, 837, 744, 119, 357, 509, 865, 38, 504, 106, 65, 576, 545, 625, 93, 0, 872, 72, 695,
			23, 294, 500, 270, 885, 129, 28, 892, 496, 530, 984, 748, 995, 258, 923, 368, 395, 553, 210, 422, 274, 954, 842,
			268, 658, 224, 519, 641, 740, 662, 445, 230, 239, 938, 823, 612, 600, 132, 960, 665, 133, 80, 189, 667, 691, 468,
			387, 690, 987, 101, 17, 704, 742, 295, 126, 932, 298, 806, 828, 966, 894, 275, 716, 878, 450, 850, 402, 783, 3,
			167, 245, 423, 487, 62, 316, 266, 715, 888, 50, 283, 663, 802, 701, 466, 192, 432, 649, 848, 405, 281, 399, 453,
			296, 197, 68, 217, 288, 253, 414, 903, 800, 925, 128, 655, 912, 745, 523, 874, 514, 59, 589, 978, 822, 470, 318,
			646, 220, 838, 198, 964, 836, 464, 110, 953, 870, 173, 729, 219, 77, 21, 14, 753, 299, 158, 397, 412, 30, 586,
			293, 819, 282, 723, 718, 443, 531, 377, 909, 369, 816, 962, 770, 676, 61, 883, 289, 834, 781, 426, 570, 512, 343,
			193, 661, 854, 150, 636, 111, 287, 261, 751, 901, 898, 554, 164, 137, 780, 37, 182, 813, 478, 146, 26, 171, 727,
			628, 436, 760, 310, 389, 90, 474, 401, 359, 824, 763, 54, 231, 269, 218, 975, 233, 124, 317, 98, 592, 393, 18,
			535, 418, 736, 123, 755, 476, 921, 540, 284, 688, 121, 632, 955, 920, 71, 425, 681, 769, 120, 272, 841, 227, 620,
			619, 680, 992, 51, 809, 971, 669, 937, 108, 858, 558, 979, 490, 285, 946, 340, 362, 152, 314, 180, 300, 608, 719,
			463, 778, 105, 485, 84, 694, 335, 140, 159, 378, 477, 202, 322, 311, 810, 761, 998, 384, 513, 897, 184, 795, 532,
			685, 356, 411, 305, 644, 229, 574, 206, 908, 325, 832, 821, 85, 41, 867, 114, 855, 566, 491, 801, 660, 919, 251,
			203, 75, 609, 444, 759, 951, 247, 738, 611, 555, 721, 645, 546, 408, 950, 634, 750, 552, 844, 857, 326, 696, 138,
			97, 843, 117, 556, 355, 66, 798, 413, 243, 328, 707, 633, 957, 794, 891, 20, 793, 7, 331, 896, 338, 590, 581, 618,
			313, 201, 626, 700, 161, 492, 89, 379, 471, 790, 12, 743, 157, 400, 473, 506, 931, 388, 263, 367, 988, 409, 757,
			286, 739, 765, 639, 910, 859, 240, 777, 728, 768, 831, 24, 934, 213, 720, 613, 972, 573, 364, 212, 734, 35, 561,
			847, 956, 417, 29, 673, 264, 58, 986, 47, 483, 571, 342, 113, 963, 148, 907, 547, 99, 985, 583, 969, 528, 717,
			627, 36, 142, 599, 428, 94, 776, 347, 215, 521, 595, 45, 952, 385, 933, 999, 890, 672, 562, 365, 752, 16, 8, 889,
			807, 941, 529, 226, 109, 271, 149, 507, 597, 257, 706, 410, 234, 207, 196, 430, 930, 250, 703, 584, 323, 505, 981,
			949, 96, 88, 374, 95, 580, 205, 766, 434, 442, 905, 163, 996, 839, 835, 469, 588, 805, 52, 63, 11, 623, 190, 156,
			587, 145, 238, 10, 534, 209, 538, 306, 914, 699, 804, 677, 183, 179, 936, 593, 74, 165, 319, 199, 811, 130, 958,
			277, 829, 103, 420, 249, 730, 39, 248, 856, 974, 886, 353, 175, 525, 638, 812, 2, 873, 32, 290, 668, 693, 785,
			968, 817, 594, 76, 913, 461, 578, 563, 79, 871, 852, 928, 297, 682, 815, 223, 170, 236, 376, 884, 764, 607, 291,
			459, 366, 692, 787, 341, 346, 403, 348, 774, 961, 709, 92, 435, 265, 134, 684, 246, 944, 637, 942, 712, 567, 732,
			906, 102, 60, 479, 185, 990, 879, 502, 773, 467, 345, 81, 572, 488, 166, 635, 516, 939, 373, 659, 915, 918, 380,
			143, 330, 451, 396, 851, 498, 917, 437, 643, 448, 280, 868, 737, 49, 125, 543, 614, 602, 484, 827, 381, 603, 160,
			64, 549, 959, 524, 849, 548, 943, 674, 334, 116, 153, 438, 862, 344, 455, 598, 390, 863, 653, 188, 69, 363, 214,
			726, 308, 652, 853, 697, 370, 510, 927, 895, 568, 204, 354, 25, 656, 675, 301, 945, 989, 34, 796, 833, 22, 211,
			181, 826, 900, 564, 56, 398, 893, 429, 630, 83, 678, 866, 431, 44, 235, 536, 309, 375, 825, 304, 542, 260, 965,
			115, 846, 533, 481, 654, 501, 1000,
		];

		let results = arrayOfValues(search_util.lessThan(transaction, 'id', 'temperature_double', 1111));
		assert.deepEqual(results.length, 1001);
		assert.deepEqual(results, expected);
	});

	it('test lessThan -8.854640366043895  on double key column', () => {
		let expected = [596, 104, 4, 710, 929, 647, 860, 433];

		let results = arrayOfValues(search_util.lessThan(transaction, 'id', 'temperature_double', -8.854640366043895));
		assert.deepEqual(results.length, 8);
		assert.deepEqual(results, expected);
	});

	it('test lessThan -888.854640366043895  on double key column', () => {
		let results = arrayOfValues(search_util.lessThan(transaction, 'id', 'temperature_double', -888.854640366043895));
		assert.deepStrictEqual(results, []);
	});

	/** INT **/

	it('test lessThan 100 on numeric key column', () => {
		let expected = [
			307, 479, 517, 674, 860, 989, 32, 34, 45, 218, 675, 699, 951, 998, 371, 453, 456, 689, 25, 756, 807, 945, 963, 84,
			143, 325, 509, 664, 66, 152, 548, 613, 734, 11, 163, 165, 349, 484, 525, 765, 850, 7, 54, 137, 153, 204, 225, 445,
			489, 497, 725, 792, 842, 896, 969, 6, 140, 490, 563, 573, 746, 867, 890, 897, 932, 33, 157, 239, 273, 337, 402,
			688, 116, 182, 246, 436, 510, 748, 782, 865, 941, 996, 63, 197, 280, 284, 317, 320, 332, 367, 584, 787, 855, 881,
			930, 150, 203, 297, 398, 459, 566, 789, 811, 889, 892, 944, 78, 92, 167, 381, 515, 572, 621, 634, 803, 818, 827,
			975, 15, 300, 482, 653, 894, 992, 53, 125, 207, 263, 471, 562, 639, 743, 793, 979, 30, 91, 110, 133, 404, 421,
			575, 588, 592, 649, 650, 669, 683, 731, 754, 805, 879, 29, 219, 224, 323, 359, 488, 508, 851, 866, 925, 961, 31,
			75, 127, 272, 277, 285, 643, 898, 28, 51, 251, 302, 418, 446, 690, 835, 875, 934, 964, 222, 261, 310, 425, 535,
			568, 577, 684, 752, 776, 9, 69, 247, 311, 405, 543, 558, 834, 13, 403, 432, 473, 526, 595, 641, 711, 878, 8, 62,
			77, 80, 210, 267, 319, 631, 796, 799, 862, 984, 2, 123, 306, 527, 663, 828, 854, 884, 903, 962, 172, 268, 619,
			710, 848, 864, 276, 356, 557, 574, 921, 931, 583, 729, 753, 971, 132, 523, 551, 888, 49, 142, 335, 388, 426, 594,
			773, 801, 352, 358, 360, 532, 651, 254, 328, 598, 648, 712, 936, 99, 369, 610, 625, 715, 830, 119, 170, 396, 679,
			691, 709, 784, 122, 134, 242, 451, 633, 682, 902, 46, 79, 192, 407, 468, 559, 623, 662, 723, 933, 965, 298, 415,
			454, 646, 667, 4, 86, 141, 158, 216, 245, 309, 322, 622, 980, 16, 70, 126, 193, 372, 427, 696, 767, 973, 3, 279,
			292, 304, 491, 561, 632, 50, 187, 264, 321, 341, 430, 531, 534, 576, 832, 924, 221, 346, 775, 791, 804, 135, 262,
			419, 486, 520, 524, 537, 640, 659, 917, 107, 383, 409, 420, 495, 790, 846, 869, 22, 108, 171, 238, 354, 376, 716,
			794, 798, 823, 870, 883, 909, 923, 949, 58, 357, 378, 390, 627, 806, 920, 211, 762, 786, 968, 985, 195, 236, 379,
			462, 740, 916, 942, 17, 105, 177, 607, 665, 737, 755, 966, 986, 39, 117, 253, 513, 604, 677, 935, 1, 12, 24, 138,
			235, 288, 465, 505, 538, 569, 768, 774, 837, 859, 55, 250, 308, 336, 412, 413, 448, 609, 656, 928, 953, 129, 205,
			802, 814, 103, 146, 186, 350, 444, 555, 915, 35, 109, 467, 686, 702, 724, 778, 906, 161, 169, 392, 533, 706, 839,
			877, 919, 990, 48, 159, 164, 223, 290, 382, 457, 474, 661, 987, 85, 287, 429, 478, 518, 545, 727, 852, 853, 19,
			149, 732, 810, 824, 128, 519, 587, 614, 658, 695, 697, 719, 742, 788, 826, 880, 190, 315, 148, 196, 504, 635, 809,
			821, 887, 937, 64, 312, 389, 498, 626, 89, 324, 345, 395, 437, 597, 670, 816, 872, 901, 269, 275, 399, 450, 492,
			528, 567, 580, 645, 720, 52, 120, 198, 281, 353, 377, 460, 461, 536, 722, 745, 995, 71, 431, 707, 812, 873, 907,
			947, 113, 121, 147, 181, 286, 293, 433, 443, 540, 717, 967, 36, 40, 179, 260, 476, 599, 611, 726, 822, 891, 918,
			978, 0, 83, 303, 343, 481, 487, 589, 705, 718, 795, 230, 241, 374, 424, 681, 948, 23, 175, 348, 397, 400, 735,
			766, 770, 843, 900, 908, 233, 313, 368, 370, 387, 615, 636, 104, 155, 278, 439, 506, 605, 612, 630, 637, 687, 886,
			939, 59, 82, 112, 282, 333, 496, 618, 628, 981, 991, 57, 61, 200, 393, 502, 680, 730, 212, 440, 904, 14, 27, 72,
			131, 139, 201, 228, 252, 314, 347, 384, 749, 763, 871, 96, 363, 410, 480, 547, 676, 693, 694, 764, 838, 876, 911,
			361, 178, 226, 234, 237, 243, 296, 385, 449, 472, 668, 708, 833, 927, 952, 26, 87, 130, 365, 738, 780, 185, 229,
			364, 570, 578, 596, 647, 938, 977, 257, 375, 466, 590, 882, 5, 151, 199, 232, 255, 362, 620, 672, 721, 758, 777,
			893, 999, 114, 327, 330, 339, 386, 657, 713, 736, 744, 800, 20, 98, 176, 215, 249, 256, 417, 470, 581, 673, 960,
			970, 73, 406, 542, 560, 654, 660, 783, 861, 958, 38, 173, 259, 294, 512, 514, 831, 858, 972, 982, 291, 452, 868,
			974, 18, 145, 174, 283, 295, 434, 464, 477, 655, 671, 815, 895, 43, 100, 191, 206, 271, 603, 857, 950, 47, 227,
			316, 340, 442, 601, 624, 819, 847, 922, 41, 56, 248, 266, 373, 428, 483, 493, 530, 820, 905, 959, 976, 144, 214,
			516, 608, 617, 703, 760, 772, 101, 202, 435, 539, 797, 42, 44, 180, 188, 503, 550, 913, 983, 441, 494, 546, 757,
			771, 785, 817, 997, 95, 111, 209, 438, 458, 564, 582, 652, 728, 845, 115, 344, 423, 529, 553, 586, 602, 700, 741,
			836, 844, 988, 76, 88, 258, 326, 331, 380, 447, 511, 579, 585, 759, 899, 943, 954, 90, 217, 318, 500, 541, 769,
			856, 162, 240, 422, 606, 629, 678, 68, 118, 208, 265, 274, 411, 455, 469, 571, 666, 733, 825, 849, 81, 106, 124,
			166, 329, 552, 874, 955, 183, 244, 414, 463, 501, 692, 926, 189, 194, 289, 394, 591, 750, 779, 840, 60, 231, 554,
			565, 644, 910, 994, 102, 299, 301, 401, 522, 593, 698, 761, 885, 912, 21, 94, 184, 338, 366,
		];

		let results = arrayOfValues(search_util.lessThan(transaction, 'id', 'temperature', 100));
		assert.deepEqual(results.length, 945);
		assert.deepEqual(results, expected);
	});

	it('test lessThan 11 on numeric key column', () => {
		let expected = [
			307, 479, 517, 674, 860, 989, 32, 34, 45, 218, 675, 699, 951, 998, 371, 453, 456, 689, 25, 756, 807, 945, 963, 84,
			143, 325, 509, 664, 66, 152, 548, 613, 734, 11, 163, 165, 349, 484, 525, 765, 850, 7, 54, 137, 153, 204, 225, 445,
			489, 497, 725, 792, 842, 896, 969, 6, 140, 490, 563, 573, 746, 867, 890, 897, 932, 33, 157, 239, 273, 337, 402,
			688, 116, 182, 246, 436, 510, 748, 782, 865, 941, 996, 63, 197, 280, 284, 317, 320, 332, 367, 584, 787, 855, 881,
			930, 150, 203, 297, 398, 459, 566, 789, 811, 889, 892, 944, 78, 92, 167, 381, 515, 572, 621, 634, 803, 818, 827,
			975, 15, 300, 482, 653, 894, 992, 53, 125, 207, 263, 471, 562, 639, 743, 793, 979, 30, 91, 110, 133, 404, 421,
			575, 588, 592, 649, 650, 669, 683, 731, 754, 805, 879, 29, 219, 224, 323, 359, 488, 508, 851, 866, 925, 961, 31,
			75, 127, 272, 277, 285, 643, 898, 28, 51, 251, 302, 418, 446, 690, 835, 875, 934, 964, 222, 261, 310, 425, 535,
			568, 577, 684, 752, 776,
		];

		let results = arrayOfValues(search_util.lessThan(transaction, 'id', 'temperature', 11));
		assert.deepEqual(results.length, 191);
		assert.deepEqual(results, expected);
	});

	it('test lessThan 0 on numeric key column', () => {
		let expected = [
			307, 479, 517, 674, 860, 989, 32, 34, 45, 218, 675, 699, 951, 998, 371, 453, 456, 689, 25, 756, 807, 945, 963, 84,
			143, 325, 509, 664, 66, 152, 548, 613, 734, 11, 163, 165, 349, 484, 525, 765, 850, 7, 54, 137, 153, 204, 225, 445,
			489, 497, 725, 792, 842, 896, 969, 6, 140, 490, 563, 573, 746, 867, 890, 897, 932, 33, 157, 239, 273, 337, 402,
			688,
		];

		let results = arrayOfValues(search_util.lessThan(transaction, 'id', 'temperature', 0));
		assert.deepEqual(results.length, 72);
		assert.deepEqual(results, expected);
	});

	it('test lessThan 111 on numeric key column', () => {
		let expected = [
			307, 479, 517, 674, 860, 989, 32, 34, 45, 218, 675, 699, 951, 998, 371, 453, 456, 689, 25, 756, 807, 945, 963, 84,
			143, 325, 509, 664, 66, 152, 548, 613, 734, 11, 163, 165, 349, 484, 525, 765, 850, 7, 54, 137, 153, 204, 225, 445,
			489, 497, 725, 792, 842, 896, 969, 6, 140, 490, 563, 573, 746, 867, 890, 897, 932, 33, 157, 239, 273, 337, 402,
			688, 116, 182, 246, 436, 510, 748, 782, 865, 941, 996, 63, 197, 280, 284, 317, 320, 332, 367, 584, 787, 855, 881,
			930, 150, 203, 297, 398, 459, 566, 789, 811, 889, 892, 944, 78, 92, 167, 381, 515, 572, 621, 634, 803, 818, 827,
			975, 15, 300, 482, 653, 894, 992, 53, 125, 207, 263, 471, 562, 639, 743, 793, 979, 30, 91, 110, 133, 404, 421,
			575, 588, 592, 649, 650, 669, 683, 731, 754, 805, 879, 29, 219, 224, 323, 359, 488, 508, 851, 866, 925, 961, 31,
			75, 127, 272, 277, 285, 643, 898, 28, 51, 251, 302, 418, 446, 690, 835, 875, 934, 964, 222, 261, 310, 425, 535,
			568, 577, 684, 752, 776, 9, 69, 247, 311, 405, 543, 558, 834, 13, 403, 432, 473, 526, 595, 641, 711, 878, 8, 62,
			77, 80, 210, 267, 319, 631, 796, 799, 862, 984, 2, 123, 306, 527, 663, 828, 854, 884, 903, 962, 172, 268, 619,
			710, 848, 864, 276, 356, 557, 574, 921, 931, 583, 729, 753, 971, 132, 523, 551, 888, 49, 142, 335, 388, 426, 594,
			773, 801, 352, 358, 360, 532, 651, 254, 328, 598, 648, 712, 936, 99, 369, 610, 625, 715, 830, 119, 170, 396, 679,
			691, 709, 784, 122, 134, 242, 451, 633, 682, 902, 46, 79, 192, 407, 468, 559, 623, 662, 723, 933, 965, 298, 415,
			454, 646, 667, 4, 86, 141, 158, 216, 245, 309, 322, 622, 980, 16, 70, 126, 193, 372, 427, 696, 767, 973, 3, 279,
			292, 304, 491, 561, 632, 50, 187, 264, 321, 341, 430, 531, 534, 576, 832, 924, 221, 346, 775, 791, 804, 135, 262,
			419, 486, 520, 524, 537, 640, 659, 917, 107, 383, 409, 420, 495, 790, 846, 869, 22, 108, 171, 238, 354, 376, 716,
			794, 798, 823, 870, 883, 909, 923, 949, 58, 357, 378, 390, 627, 806, 920, 211, 762, 786, 968, 985, 195, 236, 379,
			462, 740, 916, 942, 17, 105, 177, 607, 665, 737, 755, 966, 986, 39, 117, 253, 513, 604, 677, 935, 1, 12, 24, 138,
			235, 288, 465, 505, 538, 569, 768, 774, 837, 859, 55, 250, 308, 336, 412, 413, 448, 609, 656, 928, 953, 129, 205,
			802, 814, 103, 146, 186, 350, 444, 555, 915, 35, 109, 467, 686, 702, 724, 778, 906, 161, 169, 392, 533, 706, 839,
			877, 919, 990, 48, 159, 164, 223, 290, 382, 457, 474, 661, 987, 85, 287, 429, 478, 518, 545, 727, 852, 853, 19,
			149, 732, 810, 824, 128, 519, 587, 614, 658, 695, 697, 719, 742, 788, 826, 880, 190, 315, 148, 196, 504, 635, 809,
			821, 887, 937, 64, 312, 389, 498, 626, 89, 324, 345, 395, 437, 597, 670, 816, 872, 901, 269, 275, 399, 450, 492,
			528, 567, 580, 645, 720, 52, 120, 198, 281, 353, 377, 460, 461, 536, 722, 745, 995, 71, 431, 707, 812, 873, 907,
			947, 113, 121, 147, 181, 286, 293, 433, 443, 540, 717, 967, 36, 40, 179, 260, 476, 599, 611, 726, 822, 891, 918,
			978, 0, 83, 303, 343, 481, 487, 589, 705, 718, 795, 230, 241, 374, 424, 681, 948, 23, 175, 348, 397, 400, 735,
			766, 770, 843, 900, 908, 233, 313, 368, 370, 387, 615, 636, 104, 155, 278, 439, 506, 605, 612, 630, 637, 687, 886,
			939, 59, 82, 112, 282, 333, 496, 618, 628, 981, 991, 57, 61, 200, 393, 502, 680, 730, 212, 440, 904, 14, 27, 72,
			131, 139, 201, 228, 252, 314, 347, 384, 749, 763, 871, 96, 363, 410, 480, 547, 676, 693, 694, 764, 838, 876, 911,
			361, 178, 226, 234, 237, 243, 296, 385, 449, 472, 668, 708, 833, 927, 952, 26, 87, 130, 365, 738, 780, 185, 229,
			364, 570, 578, 596, 647, 938, 977, 257, 375, 466, 590, 882, 5, 151, 199, 232, 255, 362, 620, 672, 721, 758, 777,
			893, 999, 114, 327, 330, 339, 386, 657, 713, 736, 744, 800, 20, 98, 176, 215, 249, 256, 417, 470, 581, 673, 960,
			970, 73, 406, 542, 560, 654, 660, 783, 861, 958, 38, 173, 259, 294, 512, 514, 831, 858, 972, 982, 291, 452, 868,
			974, 18, 145, 174, 283, 295, 434, 464, 477, 655, 671, 815, 895, 43, 100, 191, 206, 271, 603, 857, 950, 47, 227,
			316, 340, 442, 601, 624, 819, 847, 922, 41, 56, 248, 266, 373, 428, 483, 493, 530, 820, 905, 959, 976, 144, 214,
			516, 608, 617, 703, 760, 772, 101, 202, 435, 539, 797, 42, 44, 180, 188, 503, 550, 913, 983, 441, 494, 546, 757,
			771, 785, 817, 997, 95, 111, 209, 438, 458, 564, 582, 652, 728, 845, 115, 344, 423, 529, 553, 586, 602, 700, 741,
			836, 844, 988, 76, 88, 258, 326, 331, 380, 447, 511, 579, 585, 759, 899, 943, 954, 90, 217, 318, 500, 541, 769,
			856, 162, 240, 422, 606, 629, 678, 68, 118, 208, 265, 274, 411, 455, 469, 571, 666, 733, 825, 849, 81, 106, 124,
			166, 329, 552, 874, 955, 183, 244, 414, 463, 501, 692, 926, 189, 194, 289, 394, 591, 750, 779, 840, 60, 231, 554,
			565, 644, 910, 994, 102, 299, 301, 401, 522, 593, 698, 761, 885, 912, 21, 94, 184, 338, 366, 74, 156, 220, 408,
			507, 67, 213, 556, 714, 97, 136, 154, 521, 747, 808, 956, 37, 334, 351, 638, 751, 781, 841, 940, 957, 168, 544,
			739, 355, 929, 10, 499, 600, 616, 685, 701, 704, 93, 160, 305, 342, 416, 475, 813, 946, 993, 65, 270, 391, 549,
			914, 485, 642, 829, 863,
		];

		let results = arrayOfValues(search_util.lessThan(transaction, 'id', 'temperature', 111));
		assert.deepEqual(results.length, 1000);
		assert.deepEqual(results, expected);
	});

	it('test lessThan 1111 on numeric key column', () => {
		let expected = [
			307, 479, 517, 674, 860, 989, 32, 34, 45, 218, 675, 699, 951, 998, 371, 453, 456, 689, 25, 756, 807, 945, 963, 84,
			143, 325, 509, 664, 66, 152, 548, 613, 734, 11, 163, 165, 349, 484, 525, 765, 850, 7, 54, 137, 153, 204, 225, 445,
			489, 497, 725, 792, 842, 896, 969, 6, 140, 490, 563, 573, 746, 867, 890, 897, 932, 33, 157, 239, 273, 337, 402,
			688, 116, 182, 246, 436, 510, 748, 782, 865, 941, 996, 63, 197, 280, 284, 317, 320, 332, 367, 584, 787, 855, 881,
			930, 150, 203, 297, 398, 459, 566, 789, 811, 889, 892, 944, 78, 92, 167, 381, 515, 572, 621, 634, 803, 818, 827,
			975, 15, 300, 482, 653, 894, 992, 53, 125, 207, 263, 471, 562, 639, 743, 793, 979, 30, 91, 110, 133, 404, 421,
			575, 588, 592, 649, 650, 669, 683, 731, 754, 805, 879, 29, 219, 224, 323, 359, 488, 508, 851, 866, 925, 961, 31,
			75, 127, 272, 277, 285, 643, 898, 28, 51, 251, 302, 418, 446, 690, 835, 875, 934, 964, 222, 261, 310, 425, 535,
			568, 577, 684, 752, 776, 9, 69, 247, 311, 405, 543, 558, 834, 13, 403, 432, 473, 526, 595, 641, 711, 878, 8, 62,
			77, 80, 210, 267, 319, 631, 796, 799, 862, 984, 2, 123, 306, 527, 663, 828, 854, 884, 903, 962, 172, 268, 619,
			710, 848, 864, 276, 356, 557, 574, 921, 931, 583, 729, 753, 971, 132, 523, 551, 888, 49, 142, 335, 388, 426, 594,
			773, 801, 352, 358, 360, 532, 651, 254, 328, 598, 648, 712, 936, 99, 369, 610, 625, 715, 830, 119, 170, 396, 679,
			691, 709, 784, 122, 134, 242, 451, 633, 682, 902, 46, 79, 192, 407, 468, 559, 623, 662, 723, 933, 965, 298, 415,
			454, 646, 667, 4, 86, 141, 158, 216, 245, 309, 322, 622, 980, 16, 70, 126, 193, 372, 427, 696, 767, 973, 3, 279,
			292, 304, 491, 561, 632, 50, 187, 264, 321, 341, 430, 531, 534, 576, 832, 924, 221, 346, 775, 791, 804, 135, 262,
			419, 486, 520, 524, 537, 640, 659, 917, 107, 383, 409, 420, 495, 790, 846, 869, 22, 108, 171, 238, 354, 376, 716,
			794, 798, 823, 870, 883, 909, 923, 949, 58, 357, 378, 390, 627, 806, 920, 211, 762, 786, 968, 985, 195, 236, 379,
			462, 740, 916, 942, 17, 105, 177, 607, 665, 737, 755, 966, 986, 39, 117, 253, 513, 604, 677, 935, 1, 12, 24, 138,
			235, 288, 465, 505, 538, 569, 768, 774, 837, 859, 55, 250, 308, 336, 412, 413, 448, 609, 656, 928, 953, 129, 205,
			802, 814, 103, 146, 186, 350, 444, 555, 915, 35, 109, 467, 686, 702, 724, 778, 906, 161, 169, 392, 533, 706, 839,
			877, 919, 990, 48, 159, 164, 223, 290, 382, 457, 474, 661, 987, 85, 287, 429, 478, 518, 545, 727, 852, 853, 19,
			149, 732, 810, 824, 128, 519, 587, 614, 658, 695, 697, 719, 742, 788, 826, 880, 190, 315, 148, 196, 504, 635, 809,
			821, 887, 937, 64, 312, 389, 498, 626, 89, 324, 345, 395, 437, 597, 670, 816, 872, 901, 269, 275, 399, 450, 492,
			528, 567, 580, 645, 720, 52, 120, 198, 281, 353, 377, 460, 461, 536, 722, 745, 995, 71, 431, 707, 812, 873, 907,
			947, 113, 121, 147, 181, 286, 293, 433, 443, 540, 717, 967, 36, 40, 179, 260, 476, 599, 611, 726, 822, 891, 918,
			978, 0, 83, 303, 343, 481, 487, 589, 705, 718, 795, 230, 241, 374, 424, 681, 948, 23, 175, 348, 397, 400, 735,
			766, 770, 843, 900, 908, 233, 313, 368, 370, 387, 615, 636, 104, 155, 278, 439, 506, 605, 612, 630, 637, 687, 886,
			939, 59, 82, 112, 282, 333, 496, 618, 628, 981, 991, 57, 61, 200, 393, 502, 680, 730, 212, 440, 904, 14, 27, 72,
			131, 139, 201, 228, 252, 314, 347, 384, 749, 763, 871, 96, 363, 410, 480, 547, 676, 693, 694, 764, 838, 876, 911,
			361, 178, 226, 234, 237, 243, 296, 385, 449, 472, 668, 708, 833, 927, 952, 26, 87, 130, 365, 738, 780, 185, 229,
			364, 570, 578, 596, 647, 938, 977, 257, 375, 466, 590, 882, 5, 151, 199, 232, 255, 362, 620, 672, 721, 758, 777,
			893, 999, 114, 327, 330, 339, 386, 657, 713, 736, 744, 800, 20, 98, 176, 215, 249, 256, 417, 470, 581, 673, 960,
			970, 73, 406, 542, 560, 654, 660, 783, 861, 958, 38, 173, 259, 294, 512, 514, 831, 858, 972, 982, 291, 452, 868,
			974, 18, 145, 174, 283, 295, 434, 464, 477, 655, 671, 815, 895, 43, 100, 191, 206, 271, 603, 857, 950, 47, 227,
			316, 340, 442, 601, 624, 819, 847, 922, 41, 56, 248, 266, 373, 428, 483, 493, 530, 820, 905, 959, 976, 144, 214,
			516, 608, 617, 703, 760, 772, 101, 202, 435, 539, 797, 42, 44, 180, 188, 503, 550, 913, 983, 441, 494, 546, 757,
			771, 785, 817, 997, 95, 111, 209, 438, 458, 564, 582, 652, 728, 845, 115, 344, 423, 529, 553, 586, 602, 700, 741,
			836, 844, 988, 76, 88, 258, 326, 331, 380, 447, 511, 579, 585, 759, 899, 943, 954, 90, 217, 318, 500, 541, 769,
			856, 162, 240, 422, 606, 629, 678, 68, 118, 208, 265, 274, 411, 455, 469, 571, 666, 733, 825, 849, 81, 106, 124,
			166, 329, 552, 874, 955, 183, 244, 414, 463, 501, 692, 926, 189, 194, 289, 394, 591, 750, 779, 840, 60, 231, 554,
			565, 644, 910, 994, 102, 299, 301, 401, 522, 593, 698, 761, 885, 912, 21, 94, 184, 338, 366, 74, 156, 220, 408,
			507, 67, 213, 556, 714, 97, 136, 154, 521, 747, 808, 956, 37, 334, 351, 638, 751, 781, 841, 940, 957, 168, 544,
			739, 355, 929, 10, 499, 600, 616, 685, 701, 704, 93, 160, 305, 342, 416, 475, 813, 946, 993, 65, 270, 391, 549,
			914, 485, 642, 829, 863, 1000,
		];

		let results = arrayOfValues(search_util.lessThan(transaction, 'id', 'temperature', 1111));
		assert.deepEqual(results.length, 1001);
		assert.deepEqual(results, expected);
	});

	it('test lessThan 110 (a temperature not indexed) on numeric key column', () => {
		let expected = [
			307, 479, 517, 674, 860, 989, 32, 34, 45, 218, 675, 699, 951, 998, 371, 453, 456, 689, 25, 756, 807, 945, 963, 84,
			143, 325, 509, 664, 66, 152, 548, 613, 734, 11, 163, 165, 349, 484, 525, 765, 850, 7, 54, 137, 153, 204, 225, 445,
			489, 497, 725, 792, 842, 896, 969, 6, 140, 490, 563, 573, 746, 867, 890, 897, 932, 33, 157, 239, 273, 337, 402,
			688, 116, 182, 246, 436, 510, 748, 782, 865, 941, 996, 63, 197, 280, 284, 317, 320, 332, 367, 584, 787, 855, 881,
			930, 150, 203, 297, 398, 459, 566, 789, 811, 889, 892, 944, 78, 92, 167, 381, 515, 572, 621, 634, 803, 818, 827,
			975, 15, 300, 482, 653, 894, 992, 53, 125, 207, 263, 471, 562, 639, 743, 793, 979, 30, 91, 110, 133, 404, 421,
			575, 588, 592, 649, 650, 669, 683, 731, 754, 805, 879, 29, 219, 224, 323, 359, 488, 508, 851, 866, 925, 961, 31,
			75, 127, 272, 277, 285, 643, 898, 28, 51, 251, 302, 418, 446, 690, 835, 875, 934, 964, 222, 261, 310, 425, 535,
			568, 577, 684, 752, 776, 9, 69, 247, 311, 405, 543, 558, 834, 13, 403, 432, 473, 526, 595, 641, 711, 878, 8, 62,
			77, 80, 210, 267, 319, 631, 796, 799, 862, 984, 2, 123, 306, 527, 663, 828, 854, 884, 903, 962, 172, 268, 619,
			710, 848, 864, 276, 356, 557, 574, 921, 931, 583, 729, 753, 971, 132, 523, 551, 888, 49, 142, 335, 388, 426, 594,
			773, 801, 352, 358, 360, 532, 651, 254, 328, 598, 648, 712, 936, 99, 369, 610, 625, 715, 830, 119, 170, 396, 679,
			691, 709, 784, 122, 134, 242, 451, 633, 682, 902, 46, 79, 192, 407, 468, 559, 623, 662, 723, 933, 965, 298, 415,
			454, 646, 667, 4, 86, 141, 158, 216, 245, 309, 322, 622, 980, 16, 70, 126, 193, 372, 427, 696, 767, 973, 3, 279,
			292, 304, 491, 561, 632, 50, 187, 264, 321, 341, 430, 531, 534, 576, 832, 924, 221, 346, 775, 791, 804, 135, 262,
			419, 486, 520, 524, 537, 640, 659, 917, 107, 383, 409, 420, 495, 790, 846, 869, 22, 108, 171, 238, 354, 376, 716,
			794, 798, 823, 870, 883, 909, 923, 949, 58, 357, 378, 390, 627, 806, 920, 211, 762, 786, 968, 985, 195, 236, 379,
			462, 740, 916, 942, 17, 105, 177, 607, 665, 737, 755, 966, 986, 39, 117, 253, 513, 604, 677, 935, 1, 12, 24, 138,
			235, 288, 465, 505, 538, 569, 768, 774, 837, 859, 55, 250, 308, 336, 412, 413, 448, 609, 656, 928, 953, 129, 205,
			802, 814, 103, 146, 186, 350, 444, 555, 915, 35, 109, 467, 686, 702, 724, 778, 906, 161, 169, 392, 533, 706, 839,
			877, 919, 990, 48, 159, 164, 223, 290, 382, 457, 474, 661, 987, 85, 287, 429, 478, 518, 545, 727, 852, 853, 19,
			149, 732, 810, 824, 128, 519, 587, 614, 658, 695, 697, 719, 742, 788, 826, 880, 190, 315, 148, 196, 504, 635, 809,
			821, 887, 937, 64, 312, 389, 498, 626, 89, 324, 345, 395, 437, 597, 670, 816, 872, 901, 269, 275, 399, 450, 492,
			528, 567, 580, 645, 720, 52, 120, 198, 281, 353, 377, 460, 461, 536, 722, 745, 995, 71, 431, 707, 812, 873, 907,
			947, 113, 121, 147, 181, 286, 293, 433, 443, 540, 717, 967, 36, 40, 179, 260, 476, 599, 611, 726, 822, 891, 918,
			978, 0, 83, 303, 343, 481, 487, 589, 705, 718, 795, 230, 241, 374, 424, 681, 948, 23, 175, 348, 397, 400, 735,
			766, 770, 843, 900, 908, 233, 313, 368, 370, 387, 615, 636, 104, 155, 278, 439, 506, 605, 612, 630, 637, 687, 886,
			939, 59, 82, 112, 282, 333, 496, 618, 628, 981, 991, 57, 61, 200, 393, 502, 680, 730, 212, 440, 904, 14, 27, 72,
			131, 139, 201, 228, 252, 314, 347, 384, 749, 763, 871, 96, 363, 410, 480, 547, 676, 693, 694, 764, 838, 876, 911,
			361, 178, 226, 234, 237, 243, 296, 385, 449, 472, 668, 708, 833, 927, 952, 26, 87, 130, 365, 738, 780, 185, 229,
			364, 570, 578, 596, 647, 938, 977, 257, 375, 466, 590, 882, 5, 151, 199, 232, 255, 362, 620, 672, 721, 758, 777,
			893, 999, 114, 327, 330, 339, 386, 657, 713, 736, 744, 800, 20, 98, 176, 215, 249, 256, 417, 470, 581, 673, 960,
			970, 73, 406, 542, 560, 654, 660, 783, 861, 958, 38, 173, 259, 294, 512, 514, 831, 858, 972, 982, 291, 452, 868,
			974, 18, 145, 174, 283, 295, 434, 464, 477, 655, 671, 815, 895, 43, 100, 191, 206, 271, 603, 857, 950, 47, 227,
			316, 340, 442, 601, 624, 819, 847, 922, 41, 56, 248, 266, 373, 428, 483, 493, 530, 820, 905, 959, 976, 144, 214,
			516, 608, 617, 703, 760, 772, 101, 202, 435, 539, 797, 42, 44, 180, 188, 503, 550, 913, 983, 441, 494, 546, 757,
			771, 785, 817, 997, 95, 111, 209, 438, 458, 564, 582, 652, 728, 845, 115, 344, 423, 529, 553, 586, 602, 700, 741,
			836, 844, 988, 76, 88, 258, 326, 331, 380, 447, 511, 579, 585, 759, 899, 943, 954, 90, 217, 318, 500, 541, 769,
			856, 162, 240, 422, 606, 629, 678, 68, 118, 208, 265, 274, 411, 455, 469, 571, 666, 733, 825, 849, 81, 106, 124,
			166, 329, 552, 874, 955, 183, 244, 414, 463, 501, 692, 926, 189, 194, 289, 394, 591, 750, 779, 840, 60, 231, 554,
			565, 644, 910, 994, 102, 299, 301, 401, 522, 593, 698, 761, 885, 912, 21, 94, 184, 338, 366, 74, 156, 220, 408,
			507, 67, 213, 556, 714, 97, 136, 154, 521, 747, 808, 956, 37, 334, 351, 638, 751, 781, 841, 940, 957, 168, 544,
			739, 355, 929, 10, 499, 600, 616, 685, 701, 704, 93, 160, 305, 342, 416, 475, 813, 946, 993, 65, 270, 391, 549,
			914, 485, 642, 829, 863,
		];

		let results = arrayOfValues(search_util.lessThan(transaction, 'id', 'temperature', 110));
		assert.deepEqual(results.length, 1000);
		assert.deepEqual(results, expected);
	});

	it('test lessThan -8  on numeric key column', () => {
		let expected = [307, 479, 517, 674, 860, 989, 32, 34, 45, 218, 675, 699, 951, 998];

		let results = arrayOfValues(search_util.lessThan(transaction, 'id', 'temperature', -8));
		assert.deepEqual(results.length, 14);
		assert.deepEqual(results, expected);
	});

	it('test lessThan -888  on numeric key column', () => {
		let results = arrayOfValues(search_util.lessThan(transaction, 'id', 'temperature', -888));
		assert.deepStrictEqual(results, []);
	});

	/** STRING **/

	it('test lessThan CO on string key column', () => {
		let expected = [
			62, 63, 133, 237, 282, 482, 543, 648, 696, 745, 844, 1, 13, 199, 268, 279, 393, 472, 529, 631, 660, 663, 667, 686,
			700, 780, 812, 820, 966, 76, 105, 108, 139, 168, 208, 238, 286, 346, 369, 374, 386, 391, 452, 526, 589, 688, 690,
			748, 882, 996, 16, 152, 216, 243, 260, 261, 270, 273, 610, 670, 707, 743, 765, 800, 831, 841, 26, 173, 247, 251,
			376, 392, 411, 554, 593, 650, 708, 825, 880, 894, 959, 985,
		];

		let results = arrayOfValues(search_util.lessThan(transaction, 'id', 'state', 'CO'));
		assert.deepEqual(results.length, 82);
		assert.deepEqual(results, expected);
	});

	it('test lessThan W on string key column', () => {
		let expected = [
			62, 63, 133, 237, 282, 482, 543, 648, 696, 745, 844, 1, 13, 199, 268, 279, 393, 472, 529, 631, 660, 663, 667, 686,
			700, 780, 812, 820, 966, 76, 105, 108, 139, 168, 208, 238, 286, 346, 369, 374, 386, 391, 452, 526, 589, 688, 690,
			748, 882, 996, 16, 152, 216, 243, 260, 261, 270, 273, 610, 670, 707, 743, 765, 800, 831, 841, 26, 173, 247, 251,
			376, 392, 411, 554, 593, 650, 708, 825, 880, 894, 959, 985, 7, 23, 84, 93, 122, 134, 144, 217, 294, 375, 382, 512,
			537, 572, 622, 682, 698, 781, 809, 855, 929, 964, 998, 38, 128, 150, 182, 207, 257, 287, 298, 310, 345, 352, 443,
			456, 491, 628, 681, 684, 746, 794, 874, 997, 33, 70, 119, 125, 140, 183, 206, 231, 325, 395, 429, 488, 501, 550,
			623, 632, 668, 672, 928, 939, 952, 992, 75, 107, 149, 159, 197, 240, 241, 274, 406, 587, 706, 714, 750, 763, 852,
			853, 869, 896, 917, 993, 31, 106, 178, 194, 233, 289, 303, 324, 380, 396, 435, 457, 484, 520, 525, 640, 674, 711,
			769, 921, 942, 947, 960, 990, 89, 112, 117, 138, 172, 263, 308, 355, 370, 389, 487, 492, 515, 673, 676, 798, 838,
			859, 53, 61, 87, 90, 309, 311, 312, 332, 378, 405, 524, 570, 699, 806, 823, 873, 881, 901, 946, 950, 971, 12, 24,
			71, 229, 235, 394, 398, 438, 447, 503, 532, 533, 702, 724, 732, 943, 11, 97, 177, 244, 318, 321, 343, 353, 364,
			399, 448, 485, 564, 576, 579, 666, 733, 774, 782, 784, 801, 864, 968, 975, 45, 46, 72, 110, 166, 192, 193, 361,
			371, 402, 420, 476, 479, 513, 521, 566, 671, 678, 725, 790, 836, 875, 885, 115, 118, 158, 185, 223, 271, 293, 301,
			306, 317, 330, 351, 471, 474, 498, 508, 531, 562, 584, 592, 643, 645, 687, 695, 701, 715, 734, 860, 898, 907, 963,
			973, 142, 179, 201, 212, 236, 281, 313, 316, 329, 356, 363, 459, 468, 620, 662, 807, 818, 828, 936, 945, 970, 999,
			5, 32, 58, 96, 113, 137, 155, 254, 266, 292, 295, 504, 511, 534, 600, 625, 633, 738, 751, 758, 759, 772, 156, 169,
			195, 314, 373, 381, 530, 549, 560, 641, 719, 832, 856, 982, 19, 39, 50, 57, 99, 322, 328, 360, 437, 446, 481, 489,
			506, 509, 546, 565, 591, 596, 677, 771, 808, 814, 961, 976, 987, 37, 73, 161, 180, 222, 278, 348, 418, 467, 561,
			603, 616, 639, 656, 691, 756, 793, 850, 868, 21, 54, 66, 82, 85, 154, 174, 213, 338, 458, 470, 563, 601, 607, 614,
			651, 680, 697, 739, 761, 766, 822, 49, 100, 116, 165, 176, 224, 253, 288, 379, 401, 439, 449, 473, 580, 594, 683,
			718, 157, 191, 198, 210, 214, 249, 264, 283, 366, 372, 408, 419, 461, 505, 629, 694, 749, 779, 785, 804, 845, 847,
			876, 895, 913, 18, 92, 181, 228, 255, 307, 384, 469, 499, 538, 624, 646, 747, 773, 854, 904, 909, 962, 967, 44,
			131, 189, 284, 302, 390, 519, 527, 617, 657, 722, 776, 786, 788, 819, 889, 981, 4, 55, 56, 88, 114, 315, 349, 354,
			357, 425, 581, 658, 705, 813, 865, 937, 980, 995, 8, 40, 74, 202, 209, 242, 272, 319, 334, 421, 551, 585, 728,
			757, 848, 877, 886, 29, 36, 121, 127, 130, 320, 339, 342, 477, 517, 577, 609, 653, 713, 744, 775, 803, 857, 965,
			2, 184, 188, 331, 368, 463, 510, 659, 669, 911, 941, 956, 972, 47, 280, 304, 326, 327, 365, 412, 414, 415, 440,
			573, 583, 611, 618, 619, 636, 753, 764, 792, 810, 830, 887, 897, 900, 914, 934, 935, 938, 954, 979, 9, 34, 79,
			111, 230, 239, 246, 296, 335, 424, 455, 494, 595, 621, 627, 655, 762, 778, 915, 25, 52, 91, 102, 153, 397, 480,
			559, 626, 840, 871, 905, 957, 0, 22, 27, 64, 143, 175, 219, 259, 388, 404, 586, 602, 815, 826, 829, 902, 986, 35,
			344, 423, 436, 500, 523, 608, 675, 726, 729, 817, 849, 878, 28, 98, 190, 220, 225, 252, 267, 362, 465, 507, 539,
			597, 606, 638, 644, 652, 821, 888, 919, 974, 80, 95, 123, 151, 205, 218, 234, 269, 337, 407, 547, 552, 578, 654,
			693, 735, 740, 795, 834, 835, 920, 925, 931, 969, 30, 129, 160, 232, 340, 350, 377, 387, 450, 464, 502, 540, 541,
			571, 590, 604, 685, 689, 721, 862, 870, 872, 891, 910, 918, 955, 989, 60, 67, 78, 126, 305, 409, 422, 460, 493,
			535, 545, 548, 692, 720, 777, 839, 861, 883, 978, 1000, 20, 81, 132, 146, 148, 215, 258, 276, 285, 300, 341, 400,
			428, 430, 432, 553, 569, 710, 717, 727, 730, 799, 805, 984, 15, 51, 186, 227, 245, 403, 434, 441, 518, 567, 630,
			634, 704, 742, 816, 824, 833, 851, 892, 906, 940, 944, 958, 14, 94, 171, 204, 383, 431, 433, 451, 613, 615, 637,
			661, 679, 723, 783, 787, 827, 923, 924, 951, 86, 103, 124, 136, 170, 196, 290, 426, 442, 454, 556, 664, 731, 737,
			879, 953, 994, 3, 17, 77, 164, 203, 256, 333, 358, 359, 367, 427, 516, 612, 665, 927, 983, 988, 6, 48, 69, 120,
			145, 187, 221, 226, 248, 265, 297, 486, 574, 605, 635, 712, 768, 791, 837, 842, 949, 59, 167, 211, 323, 445, 490,
			495, 598, 649, 752, 754, 846, 903, 916, 977, 109, 135, 141, 413, 599, 642, 736, 741, 858, 884, 926,
		];

		let results = arrayOfValues(search_util.lessThan(transaction, 'id', 'state', 'W'));
		assert.deepEqual(results.length, 926);
		assert.deepEqual(results, expected);
	});

	it('test lessThan WY on state key column', () => {
		let expected = [
			62, 63, 133, 237, 282, 482, 543, 648, 696, 745, 844, 1, 13, 199, 268, 279, 393, 472, 529, 631, 660, 663, 667, 686,
			700, 780, 812, 820, 966, 76, 105, 108, 139, 168, 208, 238, 286, 346, 369, 374, 386, 391, 452, 526, 589, 688, 690,
			748, 882, 996, 16, 152, 216, 243, 260, 261, 270, 273, 610, 670, 707, 743, 765, 800, 831, 841, 26, 173, 247, 251,
			376, 392, 411, 554, 593, 650, 708, 825, 880, 894, 959, 985, 7, 23, 84, 93, 122, 134, 144, 217, 294, 375, 382, 512,
			537, 572, 622, 682, 698, 781, 809, 855, 929, 964, 998, 38, 128, 150, 182, 207, 257, 287, 298, 310, 345, 352, 443,
			456, 491, 628, 681, 684, 746, 794, 874, 997, 33, 70, 119, 125, 140, 183, 206, 231, 325, 395, 429, 488, 501, 550,
			623, 632, 668, 672, 928, 939, 952, 992, 75, 107, 149, 159, 197, 240, 241, 274, 406, 587, 706, 714, 750, 763, 852,
			853, 869, 896, 917, 993, 31, 106, 178, 194, 233, 289, 303, 324, 380, 396, 435, 457, 484, 520, 525, 640, 674, 711,
			769, 921, 942, 947, 960, 990, 89, 112, 117, 138, 172, 263, 308, 355, 370, 389, 487, 492, 515, 673, 676, 798, 838,
			859, 53, 61, 87, 90, 309, 311, 312, 332, 378, 405, 524, 570, 699, 806, 823, 873, 881, 901, 946, 950, 971, 12, 24,
			71, 229, 235, 394, 398, 438, 447, 503, 532, 533, 702, 724, 732, 943, 11, 97, 177, 244, 318, 321, 343, 353, 364,
			399, 448, 485, 564, 576, 579, 666, 733, 774, 782, 784, 801, 864, 968, 975, 45, 46, 72, 110, 166, 192, 193, 361,
			371, 402, 420, 476, 479, 513, 521, 566, 671, 678, 725, 790, 836, 875, 885, 115, 118, 158, 185, 223, 271, 293, 301,
			306, 317, 330, 351, 471, 474, 498, 508, 531, 562, 584, 592, 643, 645, 687, 695, 701, 715, 734, 860, 898, 907, 963,
			973, 142, 179, 201, 212, 236, 281, 313, 316, 329, 356, 363, 459, 468, 620, 662, 807, 818, 828, 936, 945, 970, 999,
			5, 32, 58, 96, 113, 137, 155, 254, 266, 292, 295, 504, 511, 534, 600, 625, 633, 738, 751, 758, 759, 772, 156, 169,
			195, 314, 373, 381, 530, 549, 560, 641, 719, 832, 856, 982, 19, 39, 50, 57, 99, 322, 328, 360, 437, 446, 481, 489,
			506, 509, 546, 565, 591, 596, 677, 771, 808, 814, 961, 976, 987, 37, 73, 161, 180, 222, 278, 348, 418, 467, 561,
			603, 616, 639, 656, 691, 756, 793, 850, 868, 21, 54, 66, 82, 85, 154, 174, 213, 338, 458, 470, 563, 601, 607, 614,
			651, 680, 697, 739, 761, 766, 822, 49, 100, 116, 165, 176, 224, 253, 288, 379, 401, 439, 449, 473, 580, 594, 683,
			718, 157, 191, 198, 210, 214, 249, 264, 283, 366, 372, 408, 419, 461, 505, 629, 694, 749, 779, 785, 804, 845, 847,
			876, 895, 913, 18, 92, 181, 228, 255, 307, 384, 469, 499, 538, 624, 646, 747, 773, 854, 904, 909, 962, 967, 44,
			131, 189, 284, 302, 390, 519, 527, 617, 657, 722, 776, 786, 788, 819, 889, 981, 4, 55, 56, 88, 114, 315, 349, 354,
			357, 425, 581, 658, 705, 813, 865, 937, 980, 995, 8, 40, 74, 202, 209, 242, 272, 319, 334, 421, 551, 585, 728,
			757, 848, 877, 886, 29, 36, 121, 127, 130, 320, 339, 342, 477, 517, 577, 609, 653, 713, 744, 775, 803, 857, 965,
			2, 184, 188, 331, 368, 463, 510, 659, 669, 911, 941, 956, 972, 47, 280, 304, 326, 327, 365, 412, 414, 415, 440,
			573, 583, 611, 618, 619, 636, 753, 764, 792, 810, 830, 887, 897, 900, 914, 934, 935, 938, 954, 979, 9, 34, 79,
			111, 230, 239, 246, 296, 335, 424, 455, 494, 595, 621, 627, 655, 762, 778, 915, 25, 52, 91, 102, 153, 397, 480,
			559, 626, 840, 871, 905, 957, 0, 22, 27, 64, 143, 175, 219, 259, 388, 404, 586, 602, 815, 826, 829, 902, 986, 35,
			344, 423, 436, 500, 523, 608, 675, 726, 729, 817, 849, 878, 28, 98, 190, 220, 225, 252, 267, 362, 465, 507, 539,
			597, 606, 638, 644, 652, 821, 888, 919, 974, 80, 95, 123, 151, 205, 218, 234, 269, 337, 407, 547, 552, 578, 654,
			693, 735, 740, 795, 834, 835, 920, 925, 931, 969, 30, 129, 160, 232, 340, 350, 377, 387, 450, 464, 502, 540, 541,
			571, 590, 604, 685, 689, 721, 862, 870, 872, 891, 910, 918, 955, 989, 60, 67, 78, 126, 305, 409, 422, 460, 493,
			535, 545, 548, 692, 720, 777, 839, 861, 883, 978, 1000, 20, 81, 132, 146, 148, 215, 258, 276, 285, 300, 341, 400,
			428, 430, 432, 553, 569, 710, 717, 727, 730, 799, 805, 984, 15, 51, 186, 227, 245, 403, 434, 441, 518, 567, 630,
			634, 704, 742, 816, 824, 833, 851, 892, 906, 940, 944, 958, 14, 94, 171, 204, 383, 431, 433, 451, 613, 615, 637,
			661, 679, 723, 783, 787, 827, 923, 924, 951, 86, 103, 124, 136, 170, 196, 290, 426, 442, 454, 556, 664, 731, 737,
			879, 953, 994, 3, 17, 77, 164, 203, 256, 333, 358, 359, 367, 427, 516, 612, 665, 927, 983, 988, 6, 48, 69, 120,
			145, 187, 221, 226, 248, 265, 297, 486, 574, 605, 635, 712, 768, 791, 837, 842, 949, 59, 167, 211, 323, 445, 490,
			495, 598, 649, 752, 754, 846, 903, 916, 977, 109, 135, 141, 413, 599, 642, 736, 741, 858, 884, 926, 41, 42, 275,
			347, 416, 466, 483, 497, 522, 536, 558, 760, 767, 796, 797, 802, 867, 890, 899, 908, 147, 291, 299, 336, 453, 478,
			496, 514, 544, 555, 582, 647, 709, 716, 863, 922, 10, 43, 65, 68, 83, 101, 104, 162, 163, 200, 250, 262, 444, 462,
			475, 528, 542, 557, 568, 575, 588, 789, 843, 912, 930, 933, 948, 991,
		];

		let results = arrayOfValues(search_util.lessThan(transaction, 'id', 'state', 'WY'));
		assert.deepEqual(results.length, 990);
		assert.deepEqual(results, expected);
	});

	it('test lessThan CC on state key column', () => {
		let expected = [
			62, 63, 133, 237, 282, 482, 543, 648, 696, 745, 844, 1, 13, 199, 268, 279, 393, 472, 529, 631, 660, 663, 667, 686,
			700, 780, 812, 820, 966, 76, 105, 108, 139, 168, 208, 238, 286, 346, 369, 374, 386, 391, 452, 526, 589, 688, 690,
			748, 882, 996, 16, 152, 216, 243, 260, 261, 270, 273, 610, 670, 707, 743, 765, 800, 831, 841, 26, 173, 247, 251,
			376, 392, 411, 554, 593, 650, 708, 825, 880, 894, 959, 985,
		];

		let results = arrayOfValues(search_util.lessThan(transaction, 'id', 'state', 'CC'));
		assert.deepEqual(results.length, 82);
		assert.deepEqual(results, expected);
	});

	it('test lessThan AK on state key column', () => {
		let results = arrayOfValues(search_util.lessThan(transaction, 'id', 'state', 'AK'));
		assert.deepStrictEqual(results, []);
	});

	it('test lessThan A on state key column', () => {
		let results = arrayOfValues(search_util.lessThan(transaction, 'id', 'state', 'A'));
		assert.deepStrictEqual(results, []);
	});

	it('test lessThan 1111 on state string key column', () => {
		let results = arrayOfValues(search_util.lessThan(transaction, 'id', 'state', 1111));
		assert.deepStrictEqual(results, []);
	});

	it('test search on attribute no exist', () => {
		let results = test_utils.assertErrorSync(
			search_util.lessThan,
			[transaction, 'id', 'fake', 'bad'],
			LMDB_TEST_ERRORS.DBI_DOES_NOT_EXIST
		);
		assert.deepStrictEqual(results, undefined);
	});
});

describe('test lessThan function reverse limit offset', () => {
	let env, transaction;
	let date_stub;
	before(async () => {
		date_stub = sandbox.stub(Date, 'now').returns(TIMESTAMP);
		global.lmdb_map = undefined;
		await fs.remove(test_utils.getMockLMDBPath());
		await fs.mkdirp(BASE_TEST_PATH);
		TEST_ENVIRONMENT_NAME = uuid();
		env = await environment_utility.createEnvironment(BASE_TEST_PATH, TEST_ENVIRONMENT_NAME);
		await environment_utility.createDBI(env, 'id', false, true);
		await write_utility.insertRecords(
			env,
			HASH_ATTRIBUTE_NAME,
			test_utils.deepClone(PERSON_ATTRIBUTES),
			test_utils.deepClone(test_data)
		);
		transaction = env.useReadTransaction();
		transaction.database = env;
	});

	after(async () => {
		date_stub.restore();
		await env.close();
		global.lmdb_map = undefined;
		await fs.remove(test_utils.getMockLMDBPath());
	});

	/** TEST HASH ATTRIBUTE **/
	it('test lessThan 100 on hash column limit 20', () => {
		let expected = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19];

		let results = arrayOfValues(search_util.lessThan(transaction, 'id', 'id', 100, false, 20));
		assert.deepEqual(results.length, 20);
		assert.deepEqual(results, expected);
	});

	it('test lessThan 100 on hash column offset 20', () => {
		let expected = [
			20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,
			48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75,
			76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99,
		];

		let results = arrayOfValues(search_util.lessThan(transaction, 'id', 'id', 100, false, undefined, 20));
		assert.deepEqual(results.length, 80);
		assert.deepEqual(results, expected);
	});

	it('test lessThan 100 on hash column limit 20 offset 20', () => {
		let expected = [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39];

		let results = arrayOfValues(search_util.lessThan(transaction, 'id', 'id', 100, false, 20, 20));
		assert.deepEqual(results.length, 20);
		assert.deepEqual(results, expected);
	});

	it('test lessThan 100 on hash column reverse', () => {
		let expected = [
			99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72,
			71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44,
			43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16,
			15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0,
		];

		let results = arrayOfValues(search_util.lessThan(transaction, 'id', 'id', 100, true));
		assert.deepEqual(results.length, 100);
		assert.deepEqual(results, expected);
	});

	it('test lessThan 999 on hash column reverse', () => {
		let expected = [
			998, 997, 996, 995, 994, 993, 992, 991, 990, 989, 988, 987, 986, 985, 984, 983, 982, 981, 980, 979, 978, 977, 976,
			975, 974, 973, 972, 971, 970, 969, 968, 967, 966, 965, 964, 963, 962, 961, 960, 959, 958, 957, 956, 955, 954, 953,
			952, 951, 950, 949, 948, 947, 946, 945, 944, 943, 942, 941, 940, 939, 938, 937, 936, 935, 934, 933, 932, 931, 930,
			929, 928, 927, 926, 925, 924, 923, 922, 921, 920, 919, 918, 917, 916, 915, 914, 913, 912, 911, 910, 909, 908, 907,
			906, 905, 904, 903, 902, 901, 900, 899, 898, 897, 896, 895, 894, 893, 892, 891, 890, 889, 888, 887, 886, 885, 884,
			883, 882, 881, 880, 879, 878, 877, 876, 875, 874, 873, 872, 871, 870, 869, 868, 867, 866, 865, 864, 863, 862, 861,
			860, 859, 858, 857, 856, 855, 854, 853, 852, 851, 850, 849, 848, 847, 846, 845, 844, 843, 842, 841, 840, 839, 838,
			837, 836, 835, 834, 833, 832, 831, 830, 829, 828, 827, 826, 825, 824, 823, 822, 821, 820, 819, 818, 817, 816, 815,
			814, 813, 812, 811, 810, 809, 808, 807, 806, 805, 804, 803, 802, 801, 800, 799, 798, 797, 796, 795, 794, 793, 792,
			791, 790, 789, 788, 787, 786, 785, 784, 783, 782, 781, 780, 779, 778, 777, 776, 775, 774, 773, 772, 771, 770, 769,
			768, 767, 766, 765, 764, 763, 762, 761, 760, 759, 758, 757, 756, 755, 754, 753, 752, 751, 750, 749, 748, 747, 746,
			745, 744, 743, 742, 741, 740, 739, 738, 737, 736, 735, 734, 733, 732, 731, 730, 729, 728, 727, 726, 725, 724, 723,
			722, 721, 720, 719, 718, 717, 716, 715, 714, 713, 712, 711, 710, 709, 708, 707, 706, 705, 704, 703, 702, 701, 700,
			699, 698, 697, 696, 695, 694, 693, 692, 691, 690, 689, 688, 687, 686, 685, 684, 683, 682, 681, 680, 679, 678, 677,
			676, 675, 674, 673, 672, 671, 670, 669, 668, 667, 666, 665, 664, 663, 662, 661, 660, 659, 658, 657, 656, 655, 654,
			653, 652, 651, 650, 649, 648, 647, 646, 645, 644, 643, 642, 641, 640, 639, 638, 637, 636, 635, 634, 633, 632, 631,
			630, 629, 628, 627, 626, 625, 624, 623, 622, 621, 620, 619, 618, 617, 616, 615, 614, 613, 612, 611, 610, 609, 608,
			607, 606, 605, 604, 603, 602, 601, 600, 599, 598, 597, 596, 595, 594, 593, 592, 591, 590, 589, 588, 587, 586, 585,
			584, 583, 582, 581, 580, 579, 578, 577, 576, 575, 574, 573, 572, 571, 570, 569, 568, 567, 566, 565, 564, 563, 562,
			561, 560, 559, 558, 557, 556, 555, 554, 553, 552, 551, 550, 549, 548, 547, 546, 545, 544, 543, 542, 541, 540, 539,
			538, 537, 536, 535, 534, 533, 532, 531, 530, 529, 528, 527, 526, 525, 524, 523, 522, 521, 520, 519, 518, 517, 516,
			515, 514, 513, 512, 511, 510, 509, 508, 507, 506, 505, 504, 503, 502, 501, 500, 499, 498, 497, 496, 495, 494, 493,
			492, 491, 490, 489, 488, 487, 486, 485, 484, 483, 482, 481, 480, 479, 478, 477, 476, 475, 474, 473, 472, 471, 470,
			469, 468, 467, 466, 465, 464, 463, 462, 461, 460, 459, 458, 457, 456, 455, 454, 453, 452, 451, 450, 449, 448, 447,
			446, 445, 444, 443, 442, 441, 440, 439, 438, 437, 436, 435, 434, 433, 432, 431, 430, 429, 428, 427, 426, 425, 424,
			423, 422, 421, 420, 419, 418, 417, 416, 415, 414, 413, 412, 411, 410, 409, 408, 407, 406, 405, 404, 403, 402, 401,
			400, 399, 398, 397, 396, 395, 394, 393, 392, 391, 390, 389, 388, 387, 386, 385, 384, 383, 382, 381, 380, 379, 378,
			377, 376, 375, 374, 373, 372, 371, 370, 369, 368, 367, 366, 365, 364, 363, 362, 361, 360, 359, 358, 357, 356, 355,
			354, 353, 352, 351, 350, 349, 348, 347, 346, 345, 344, 343, 342, 341, 340, 339, 338, 337, 336, 335, 334, 333, 332,
			331, 330, 329, 328, 327, 326, 325, 324, 323, 322, 321, 320, 319, 318, 317, 316, 315, 314, 313, 312, 311, 310, 309,
			308, 307, 306, 305, 304, 303, 302, 301, 300, 299, 298, 297, 296, 295, 294, 293, 292, 291, 290, 289, 288, 287, 286,
			285, 284, 283, 282, 281, 280, 279, 278, 277, 276, 275, 274, 273, 272, 271, 270, 269, 268, 267, 266, 265, 264, 263,
			262, 261, 260, 259, 258, 257, 256, 255, 254, 253, 252, 251, 250, 249, 248, 247, 246, 245, 244, 243, 242, 241, 240,
			239, 238, 237, 236, 235, 234, 233, 232, 231, 230, 229, 228, 227, 226, 225, 224, 223, 222, 221, 220, 219, 218, 217,
			216, 215, 214, 213, 212, 211, 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194,
			193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171,
			170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148,
			147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125,
			124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102,
			101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74,
			73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46,
			45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18,
			17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0,
		];

		let results = arrayOfValues(search_util.lessThan(transaction, 'id', 'id', 999, true));
		assert.deepEqual(results.length, 999);
		assert.deepEqual(results, expected);
	});

	it('test lessThan 100 on hash column reverse limit 20', () => {
		let expected = [99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80];

		let results = arrayOfValues(search_util.lessThan(transaction, 'id', 'id', 100, true, 20));
		assert.deepEqual(results.length, 20);
		assert.deepEqual(results, expected);
	});

	it('test lessThan 100 on hash column reverse offset 20', () => {
		let expected = [
			79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52,
			51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24,
			23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0,
		];

		let results = arrayOfValues(search_util.lessThan(transaction, 'id', 'id', 100, true, undefined, 20));
		assert.deepEqual(results.length, 80);
		assert.deepEqual(results, expected);
	});

	it('test lessThan 100 on hash column reverse limit 20 offset 20', () => {
		let expected = [79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60];

		let results = arrayOfValues(search_util.lessThan(transaction, 'id', 'id', 100, true, 20, 20));
		assert.deepEqual(results.length, 20);
		assert.deepEqual(results, expected);
	});

	/**number**/

	it('test lessThan 83 on age limit 20', () => {
		let expected = [97, 265, 299, 356, 389, 567, 710, 54, 222, 268, 422, 490, 506, 535, 547, 591, 668, 767, 196, 259];

		let results = arrayOfValues(search_util.lessThan(transaction, 'id', 'age', 83, false, 20));
		assert.deepEqual(results.length, 20);
		assert.deepEqual(results, expected);
	});

	it('test lessThan 83 on age limit 20 offset 20', () => {
		let expected = [384, 603, 757, 840, 861, 900, 930, 125, 387, 509, 619, 780, 858, 924, 63, 163, 348, 400, 410, 515];

		let results = arrayOfValues(search_util.lessThan(transaction, 'id', 'age', 83, false, 20, 20));
		assert.deepEqual(results.length, 20);
		assert.deepEqual(results, expected);
	});

	it('test lessThan 83 on age reverse ', () => {
		let expected = [
			959, 905, 756, 752, 698, 687, 583, 569, 529, 403, 270, 154, 8, 963, 923, 879, 819, 570, 441, 394, 153, 120, 111,
			77, 821, 782, 731, 661, 616, 565, 358, 288, 206, 191, 172, 142, 625, 596, 539, 112, 70, 855, 849, 842, 830, 822,
			787, 702, 652, 629, 496, 430, 397, 368, 246, 902, 854, 808, 758, 743, 726, 716, 712, 688, 685, 645, 622, 528, 362,
			309, 263, 84, 69, 971, 827, 811, 770, 707, 660, 656, 294, 231, 133, 117, 73, 44, 28, 966, 954, 887, 850, 815, 748,
			677, 494, 178, 791, 614, 558, 320, 307, 202, 141, 129, 72, 61, 23, 12, 866, 846, 810, 750, 623, 554, 541, 415,
			325, 116, 778, 681, 557, 478, 465, 398, 138, 4, 686, 658, 643, 568, 474, 197, 105, 91, 62, 979, 936, 595, 593,
			335, 313, 279, 257, 237, 174, 134, 59, 962, 945, 829, 684, 662, 542, 492, 342, 149, 926, 796, 760, 590, 353, 328,
			283, 93, 853, 769, 536, 305, 266, 140, 71, 51, 950, 729, 573, 381, 322, 109, 799, 789, 475, 451, 371, 365, 332,
			304, 234, 104, 552, 527, 499, 455, 318, 89, 7, 999, 759, 730, 700, 693, 672, 654, 571, 564, 480, 431, 293, 224,
			11, 860, 725, 621, 607, 537, 514, 402, 258, 214, 867, 824, 745, 578, 575, 508, 438, 360, 338, 323, 101, 949, 766,
			736, 630, 533, 448, 426, 282, 83, 67, 983, 874, 655, 407, 247, 243, 220, 200, 41, 25, 964, 934, 921, 805, 473,
			931, 911, 783, 774, 764, 705, 666, 599, 436, 242, 57, 34, 13, 918, 671, 555, 526, 458, 445, 386, 261, 215, 56, 39,
			16, 875, 788, 771, 648, 572, 470, 168, 126, 19, 912, 890, 838, 785, 615, 560, 489, 466, 321, 296, 275, 169, 118,
			80, 21, 899, 505, 428, 298, 24, 976, 972, 903, 793, 608, 602, 592, 504, 366, 319, 160, 957, 636, 326, 218, 189,
			40, 995, 948, 938, 773, 674, 302, 260, 15, 939, 933, 831, 816, 802, 741, 634, 580, 516, 495, 418, 312, 287, 284,
			204, 199, 35, 994, 940, 747, 699, 611, 252, 762, 689, 589, 449, 429, 291, 238, 20, 749, 739, 728, 657, 641, 609,
			435, 412, 364, 251, 143, 119, 977, 806, 350, 281, 110, 96, 768, 659, 377, 248, 92, 883, 714, 632, 339, 244, 910,
			901, 894, 692, 315, 223, 207, 66, 49, 691, 481, 341, 230, 960, 868, 856, 600, 396, 300, 297, 139, 33, 841, 732,
			467, 401, 227, 208, 161, 10, 987, 942, 653, 637, 556, 498, 349, 145, 94, 998, 967, 909, 837, 754, 491, 180, 98,
			991, 896, 786, 733, 624, 217, 176, 171, 55, 847, 720, 604, 562, 543, 532, 468, 425, 250, 162, 965, 952, 880, 813,
			761, 610, 586, 544, 419, 411, 213, 31, 955, 947, 914, 882, 628, 546, 221, 195, 188, 177, 99, 823, 680, 646, 310,
			292, 271, 210, 179, 100, 992, 956, 695, 678, 588, 538, 434, 347, 277, 203, 124, 717, 392, 374, 280, 173, 147, 131,
			1, 982, 862, 711, 664, 644, 598, 452, 832, 561, 551, 477, 378, 289, 272, 216, 175, 159, 123, 36, 922, 834, 784,
			679, 525, 523, 493, 439, 433, 324, 157, 974, 944, 908, 825, 734, 605, 550, 530, 456, 427, 388, 379, 2, 985, 925,
			915, 888, 708, 522, 286, 219, 136, 50, 38, 14, 904, 892, 836, 518, 510, 503, 409, 920, 631, 626, 520, 502, 413,
			156, 74, 5, 990, 975, 864, 719, 334, 198, 190, 22, 844, 843, 737, 727, 620, 581, 563, 440, 380, 241, 86, 9, 927,
			906, 812, 696, 667, 642, 627, 617, 507, 406, 46, 26, 919, 724, 694, 534, 464, 351, 317, 314, 253, 193, 166, 152,
			113, 32, 897, 877, 797, 735, 676, 663, 513, 444, 416, 391, 78, 42, 893, 857, 848, 826, 814, 779, 715, 327, 301,
			184, 989, 981, 820, 512, 511, 463, 442, 355, 229, 211, 187, 182, 128, 17, 869, 863, 763, 751, 471, 393, 884, 721,
			584, 395, 278, 269, 225, 170, 961, 873, 859, 790, 746, 450, 363, 354, 262, 256, 186, 106, 79, 76, 928, 765, 673,
			635, 524, 417, 357, 85, 27, 3, 993, 980, 932, 706, 485, 459, 457, 447, 424, 390, 311, 201, 185, 103, 984, 970,
			889, 881, 809, 800, 722, 585, 501, 484, 482, 454, 421, 382, 240, 194, 164, 127, 122, 37, 907, 683, 566, 549, 483,
			369, 345, 331, 255, 851, 835, 755, 697, 639, 612, 460, 352, 306, 285, 192, 150, 943, 917, 898, 865, 670, 606, 472,
			453, 404, 226, 135, 115, 81, 64, 929, 647, 228, 95, 891, 871, 775, 209, 144, 130, 102, 43, 997, 718, 521, 515,
			410, 400, 348, 163, 63, 924, 858, 780, 619, 509, 387, 125, 930, 900, 861, 840, 757, 603, 384, 259, 196, 767, 668,
			591, 547, 535, 506, 490, 422, 268, 222, 54, 710, 567, 389, 356, 299, 265, 97,
		];

		let results = arrayOfValues(search_util.lessThan(transaction, 'id', 'age', 83, true));
		assert.deepEqual(results.length, 824);
		assert.deepEqual(results, expected);
	});

	it('test lessThan 83 on age reverse limit 20', () => {
		let expected = [959, 905, 756, 752, 698, 687, 583, 569, 529, 403, 270, 154, 8, 963, 923, 879, 819, 570, 441, 394];

		let results = arrayOfValues(search_util.lessThan(transaction, 'id', 'age', 83, true, 20));
		assert.deepEqual(results.length, 20);
		assert.deepEqual(results, expected);
	});

	it('test lessThan 83 on age limit 20 reverse offset 20', () => {
		let expected = [153, 120, 111, 77, 821, 782, 731, 661, 616, 565, 358, 288, 206, 191, 172, 142, 625, 596, 539, 112];

		let results = arrayOfValues(search_util.lessThan(transaction, 'id', 'age', 83, true, 20, 20));
		assert.deepEqual(results.length, 20);
		assert.deepEqual(results, expected);
	});

	/** STRING **/

	it('test lessThan CO on string key column limit 20', () => {
		let expected = [32, 87, 124, 138, 146, 163, 169, 337, 350, 469, 543, 653, 852, 923, 71, 75, 127, 174, 225, 240];

		let results = arrayOfValues(search_util.lessThan(transaction, 'id', 'state', 'CO', false, 20));
		assert.deepEqual(results.length, 20);
		assert.deepEqual(results, expected);
	});

	it('test lessThan CO on string key column limit 20 offset 20', () => {
		let expected = [364, 437, 459, 500, 524, 530, 550, 553, 603, 643, 692, 955, 984, 39, 90, 211, 215, 270, 308, 628];

		let results = arrayOfValues(search_util.lessThan(transaction, 'id', 'state', 'CO', false, 20, 20));
		assert.deepEqual(results.length, 20);
		assert.deepEqual(results, expected);
	});

	it('test lessThan CO on string key column reverse limit 20', () => {
		let expected = [996, 973, 951, 944, 904, 744, 726, 668, 607, 604, 504, 484, 455, 421, 358, 262, 254, 239, 219, 126];

		let results = arrayOfValues(search_util.lessThan(transaction, 'id', 'state', 'CO', true, 20));
		assert.deepEqual(results.length, 20);
		assert.deepEqual(results, expected);
	});

	it('test lessThan CO on string key column reverse limit 20 offset 20', () => {
		let expected = [44, 964, 957, 953, 948, 935, 919, 857, 691, 690, 689, 680, 676, 602, 574, 468, 453, 412, 344, 273];

		let results = arrayOfValues(search_util.lessThan(transaction, 'id', 'state', 'CO', true, 20, 20));
		assert.deepEqual(results.length, 20);
		assert.deepEqual(results, expected);
	});

	it('test lessThan W on string key column limit 20', () => {
		let expected = [32, 87, 124, 138, 146, 163, 169, 337, 350, 469, 543, 653, 852, 923, 71, 75, 127, 174, 225, 240];

		let results = arrayOfValues(search_util.lessThan(transaction, 'id', 'state', 'W', false, 20));
		assert.deepEqual(results.length, 20);
		assert.deepEqual(results, expected);
	});

	it('test lessThan W on string key column limit 20 offset 20', () => {
		let expected = [364, 437, 459, 500, 524, 530, 550, 553, 603, 643, 692, 955, 984, 39, 90, 211, 215, 270, 308, 628];

		let results = arrayOfValues(search_util.lessThan(transaction, 'id', 'state', 'W', false, 20, 20));
		assert.deepEqual(results.length, 20);
		assert.deepEqual(results, expected);
	});

	it('test lessThan W on string key column reverse limit 20', () => {
		let expected = [994, 927, 835, 831, 821, 788, 667, 654, 650, 638, 571, 566, 509, 507, 505, 477, 409, 382, 340, 310];

		let results = arrayOfValues(search_util.lessThan(transaction, 'id', 'state', 'W', true, 20));
		assert.deepEqual(results.length, 20);
		assert.deepEqual(results, expected);
	});

	it('test lessThan W on string key column reverse limit 20 offset 20', () => {
		let expected = [303, 234, 203, 77, 958, 930, 926, 872, 838, 778, 776, 730, 678, 669, 655, 622, 609, 606, 588, 565];

		let results = arrayOfValues(search_util.lessThan(transaction, 'id', 'state', 'W', true, 20, 20));
		assert.deepEqual(results.length, 20);
		assert.deepEqual(results, expected);
	});
	it('test lessThan A really long string on string key column', () => {
		let expected = [999];
		let results = arrayOfValues(search_util.lessThan(transaction, 'id', 'first_name', 'A really long z'));
		assert.deepEqual(results.length, 1);
		assert.deepEqual(results, expected);
	});
});

'use strict';

const rewire = require('rewire');
const search_util = rewire('../../../utility/lmdb/searchUtility');
const fs = require('fs-extra');
const environment_utility = rewire('../../../utility/lmdb/environmentUtility');
const write_utility = require('../../../utility/lmdb/writeUtility');
const test_utils = require('../../test_utils');
const path = require('path');
const assert = require('assert');
const test_data = require('../../personData.json');
const sinon = require('sinon');
const sandbox = sinon.createSandbox();
const BASE_TEST_PATH = path.join(test_utils.getMockFSPath(), 'lmdbTest');
const TEST_ENVIRONMENT_NAME = 'test';
const HASH_ATTRIBUTE_NAME = 'id';

const PERSON_ATTRIBUTES = ['id', 'first_name', 'state', 'age', 'alive', 'birth_month'];

const TIMESTAMP = Date.now();

describe('test lessThanEqual function', ()=> {
    let env;
    let date_stub;
    before(async () => {
        date_stub = sandbox.stub(Date, 'now').returns(TIMESTAMP);
        await fs.mkdirp(BASE_TEST_PATH);
        global.lmdb_map = undefined;
        env = await environment_utility.createEnvironment(BASE_TEST_PATH, TEST_ENVIRONMENT_NAME);
        await environment_utility.createDBI(env, 'id', false, true);
        await write_utility.insertRecords(env, HASH_ATTRIBUTE_NAME, test_utils.deepClone(PERSON_ATTRIBUTES), test_utils.deepClone(test_data));
    });

    after(async () => {
        date_stub.restore();
        env.close();
        await fs.remove(BASE_TEST_PATH);
        global.lmdb_map = undefined;
    });

    /** TEST HASH ATTRIBUTE **/
    it("test lessThanEqual 100 on hash column limit 20", () => {
        let expected = { "0": { "id": 0 }, "1": { "id": 1 }, "2": { "id": 2 }, "3": { "id": 3 }, "4": { "id": 4 }, "5": { "id": 5 }, "6": { "id": 6 }, "7": { "id": 7 }, "8": { "id": 8 }, "9": { "id": 9 }, "10": { "id": 10 }, "11": { "id": 11 }, "12": { "id": 12 }, "13": { "id": 13 }, "14": { "id": 14 }, "15": { "id": 15 }, "16": { "id": 16 }, "17": { "id": 17 }, "18": { "id": 18 }, "19": { "id": 19 } };

        let results = test_utils.assertErrorSync(search_util.lessThanEqual, [env, 'id', 'id', '100', false, 20], undefined);
        assert.deepStrictEqual(Object.keys(results).length, 20);
        assert.deepEqual(results, expected);
    });

    it("test lessThanEqual 100 on hash column limit 20 offset 20", () => {
        let expected = { "20": { "id": 20 }, "21": { "id": 21 }, "22": { "id": 22 }, "23": { "id": 23 }, "24": { "id": 24 }, "25": { "id": 25 }, "26": { "id": 26 }, "27": { "id": 27 }, "28": { "id": 28 }, "29": { "id": 29 }, "30": { "id": 30 }, "31": { "id": 31 }, "32": { "id": 32 }, "33": { "id": 33 }, "34": { "id": 34 }, "35": { "id": 35 }, "36": { "id": 36 }, "37": { "id": 37 }, "38": { "id": 38 }, "39": { "id": 39 } };

        let results = test_utils.assertErrorSync(search_util.lessThanEqual, [env, 'id', 'id', '100', false, 20, 20], undefined);
        assert.deepStrictEqual(Object.keys(results).length, 20);
        assert.deepEqual(results, expected);
    });

    it("test lessThanEqual 100 on hash column reverse", () => {
        let expected = { "0": { "id": 0 }, "1": { "id": 1 }, "2": { "id": 2 }, "3": { "id": 3 }, "4": { "id": 4 }, "5": { "id": 5 }, "6": { "id": 6 }, "7": { "id": 7 }, "8": { "id": 8 }, "9": { "id": 9 }, "10": { "id": 10 }, "11": { "id": 11 }, "12": { "id": 12 }, "13": { "id": 13 }, "14": { "id": 14 }, "15": { "id": 15 }, "16": { "id": 16 }, "17": { "id": 17 }, "18": { "id": 18 }, "19": { "id": 19 }, "20": { "id": 20 }, "21": { "id": 21 }, "22": { "id": 22 }, "23": { "id": 23 }, "24": { "id": 24 }, "25": { "id": 25 }, "26": { "id": 26 }, "27": { "id": 27 }, "28": { "id": 28 }, "29": { "id": 29 }, "30": { "id": 30 }, "31": { "id": 31 }, "32": { "id": 32 }, "33": { "id": 33 }, "34": { "id": 34 }, "35": { "id": 35 }, "36": { "id": 36 }, "37": { "id": 37 }, "38": { "id": 38 }, "39": { "id": 39 }, "40": { "id": 40 }, "41": { "id": 41 }, "42": { "id": 42 }, "43": { "id": 43 }, "44": { "id": 44 }, "45": { "id": 45 }, "46": { "id": 46 }, "47": { "id": 47 }, "48": { "id": 48 }, "49": { "id": 49 }, "50": { "id": 50 }, "51": { "id": 51 }, "52": { "id": 52 }, "53": { "id": 53 }, "54": { "id": 54 }, "55": { "id": 55 }, "56": { "id": 56 }, "57": { "id": 57 }, "58": { "id": 58 }, "59": { "id": 59 }, "60": { "id": 60 }, "61": { "id": 61 }, "62": { "id": 62 }, "63": { "id": 63 }, "64": { "id": 64 }, "65": { "id": 65 }, "66": { "id": 66 }, "67": { "id": 67 }, "68": { "id": 68 }, "69": { "id": 69 }, "70": { "id": 70 }, "71": { "id": 71 }, "72": { "id": 72 }, "73": { "id": 73 }, "74": { "id": 74 }, "75": { "id": 75 }, "76": { "id": 76 }, "77": { "id": 77 }, "78": { "id": 78 }, "79": { "id": 79 }, "80": { "id": 80 }, "81": { "id": 81 }, "82": { "id": 82 }, "83": { "id": 83 }, "84": { "id": 84 }, "85": { "id": 85 }, "86": { "id": 86 }, "87": { "id": 87 }, "88": { "id": 88 }, "89": { "id": 89 }, "90": { "id": 90 }, "91": { "id": 91 }, "92": { "id": 92 }, "93": { "id": 93 }, "94": { "id": 94 }, "95": { "id": 95 }, "96": { "id": 96 }, "97": { "id": 97 }, "98": { "id": 98 }, "99": { "id": 99 }, "100": { "id": 100 } };

        let results = test_utils.assertErrorSync(search_util.lessThanEqual, [env, 'id', 'id', '100', true], undefined);
        assert.deepStrictEqual(Object.keys(results).length, 101);
        assert.deepEqual(results, expected);
    });

    it("test lessThanEqual 100 on hash column reverse limit 20", () => {
        let expected = { "81": { "id": 81 }, "82": { "id": 82 }, "83": { "id": 83 }, "84": { "id": 84 }, "85": { "id": 85 }, "86": { "id": 86 }, "87": { "id": 87 }, "88": { "id": 88 }, "89": { "id": 89 }, "90": { "id": 90 }, "91": { "id": 91 }, "92": { "id": 92 }, "93": { "id": 93 }, "94": { "id": 94 }, "95": { "id": 95 }, "96": { "id": 96 }, "97": { "id": 97 }, "98": { "id": 98 }, "99": { "id": 99 }, "100": { "id": 100 } };

        let results = test_utils.assertErrorSync(search_util.lessThanEqual, [env, 'id', 'id', '100', true, 20], undefined);
        assert.deepStrictEqual(Object.keys(results).length, 20);
        assert.deepEqual(results, expected);
    });

    it("test lessThanEqual 100 on hash column reverse offset 20", () => {
        let expected = { "0": { "id": 0 }, "1": { "id": 1 }, "2": { "id": 2 }, "3": { "id": 3 }, "4": { "id": 4 }, "5": { "id": 5 }, "6": { "id": 6 }, "7": { "id": 7 }, "8": { "id": 8 }, "9": { "id": 9 }, "10": { "id": 10 }, "11": { "id": 11 }, "12": { "id": 12 }, "13": { "id": 13 }, "14": { "id": 14 }, "15": { "id": 15 }, "16": { "id": 16 }, "17": { "id": 17 }, "18": { "id": 18 }, "19": { "id": 19 }, "20": { "id": 20 }, "21": { "id": 21 }, "22": { "id": 22 }, "23": { "id": 23 }, "24": { "id": 24 }, "25": { "id": 25 }, "26": { "id": 26 }, "27": { "id": 27 }, "28": { "id": 28 }, "29": { "id": 29 }, "30": { "id": 30 }, "31": { "id": 31 }, "32": { "id": 32 }, "33": { "id": 33 }, "34": { "id": 34 }, "35": { "id": 35 }, "36": { "id": 36 }, "37": { "id": 37 }, "38": { "id": 38 }, "39": { "id": 39 }, "40": { "id": 40 }, "41": { "id": 41 }, "42": { "id": 42 }, "43": { "id": 43 }, "44": { "id": 44 }, "45": { "id": 45 }, "46": { "id": 46 }, "47": { "id": 47 }, "48": { "id": 48 }, "49": { "id": 49 }, "50": { "id": 50 }, "51": { "id": 51 }, "52": { "id": 52 }, "53": { "id": 53 }, "54": { "id": 54 }, "55": { "id": 55 }, "56": { "id": 56 }, "57": { "id": 57 }, "58": { "id": 58 }, "59": { "id": 59 }, "60": { "id": 60 }, "61": { "id": 61 }, "62": { "id": 62 }, "63": { "id": 63 }, "64": { "id": 64 }, "65": { "id": 65 }, "66": { "id": 66 }, "67": { "id": 67 }, "68": { "id": 68 }, "69": { "id": 69 }, "70": { "id": 70 }, "71": { "id": 71 }, "72": { "id": 72 }, "73": { "id": 73 }, "74": { "id": 74 }, "75": { "id": 75 }, "76": { "id": 76 }, "77": { "id": 77 }, "78": { "id": 78 }, "79": { "id": 79 }, "80": { "id": 80 } };

        let results = test_utils.assertErrorSync(search_util.lessThanEqual, [env, 'id', 'id', '100', true, undefined, 20], undefined);
        assert.deepStrictEqual(Object.keys(results).length, 81);
        assert.deepEqual(results, expected);
    });

    it("test lessThanEqual 100 on hash column reverse limit 20 offset 20", () => {
        let expected = { "61": { "id": 61 }, "62": { "id": 62 }, "63": { "id": 63 }, "64": { "id": 64 }, "65": { "id": 65 }, "66": { "id": 66 }, "67": { "id": 67 }, "68": { "id": 68 }, "69": { "id": 69 }, "70": { "id": 70 }, "71": { "id": 71 }, "72": { "id": 72 }, "73": { "id": 73 }, "74": { "id": 74 }, "75": { "id": 75 }, "76": { "id": 76 }, "77": { "id": 77 }, "78": { "id": 78 }, "79": { "id": 79 }, "80": { "id": 80 } };

        let results = test_utils.assertErrorSync(search_util.lessThanEqual, [env, 'id', 'id', '100', true, 20, 20], undefined);
        assert.deepStrictEqual(Object.keys(results).length, 20);
        assert.deepEqual(results, expected);
    });

    it("test lessThanEqual 47 on age limit 20", () => {
        let expected = { "54": { "age": 1, "id": 54 }, "97": { "age": 0, "id": 97 }, "196": { "age": 2, "id": 196 }, "222": { "age": 1, "id": 222 }, "259": { "age": 2, "id": 259 }, "265": { "age": 0, "id": 265 }, "268": { "age": 1, "id": 268 }, "299": { "age": 0, "id": 299 }, "356": { "age": 0, "id": 356 }, "389": { "age": 0, "id": 389 }, "422": { "age": 1, "id": 422 }, "490": { "age": 1, "id": 490 }, "506": { "age": 1, "id": 506 }, "535": { "age": 1, "id": 535 }, "547": { "age": 1, "id": 547 }, "567": { "age": 0, "id": 567 }, "591": { "age": 1, "id": 591 }, "668": { "age": 1, "id": 668 }, "710": { "age": 0, "id": 710 }, "767": { "age": 1, "id": 767 } };

        let results = test_utils.assertErrorSync(search_util.lessThanEqual, [env, 'id', 'age', 47, false, 20], undefined);
        assert.deepStrictEqual(Object.keys(results).length, 20);
        assert.deepEqual(results, expected);
    });

    it("test lessThanEqual 47 on age limit 20 offset 20", () => {
        let expected = { "63": { "age": 4, "id": 63 }, "125": { "age": 3, "id": 125 }, "163": { "age": 4, "id": 163 }, "348": { "age": 4, "id": 348 }, "384": { "age": 2, "id": 384 }, "387": { "age": 3, "id": 387 }, "400": { "age": 4, "id": 400 }, "410": { "age": 4, "id": 410 }, "509": { "age": 3, "id": 509 }, "515": { "age": 4, "id": 515 }, "603": { "age": 2, "id": 603 }, "619": { "age": 3, "id": 619 }, "757": { "age": 2, "id": 757 }, "780": { "age": 3, "id": 780 }, "840": { "age": 2, "id": 840 }, "858": { "age": 3, "id": 858 }, "861": { "age": 2, "id": 861 }, "900": { "age": 2, "id": 900 }, "924": { "age": 3, "id": 924 }, "930": { "age": 2, "id": 930 } };

        let results = test_utils.assertErrorSync(search_util.lessThanEqual, [env, 'id', 'age', 47, false, 20, 20], undefined);
        assert.deepStrictEqual(Object.keys(results).length, 20);
        assert.deepEqual(results, expected);
    });

    it("test lessThanEqual 47 on age reverse", () => {
        let expected = { "1": { "age": 30, "id": 1 }, "2": { "age": 26, "id": 2 }, "3": { "age": 12, "id": 3 }, "5": { "age": 23, "id": 5 }, "9": { "age": 21, "id": 9 }, "10": { "age": 39, "id": 10 }, "14": { "age": 25, "id": 14 }, "17": { "age": 16, "id": 17 }, "20": { "age": 47, "id": 20 }, "22": { "age": 22, "id": 22 }, "26": { "age": 20, "id": 26 }, "27": { "age": 12, "id": 27 }, "31": { "age": 34, "id": 31 }, "32": { "age": 19, "id": 32 }, "33": { "age": 40, "id": 33 }, "36": { "age": 28, "id": 36 }, "37": { "age": 10, "id": 37 }, "38": { "age": 25, "id": 38 }, "42": { "age": 18, "id": 42 }, "43": { "age": 5, "id": 43 }, "46": { "age": 20, "id": 46 }, "49": { "age": 42, "id": 49 }, "50": { "age": 25, "id": 50 }, "54": { "age": 1, "id": 54 }, "55": { "age": 36, "id": 55 }, "63": { "age": 4, "id": 63 }, "64": { "age": 7, "id": 64 }, "66": { "age": 42, "id": 66 }, "74": { "age": 23, "id": 74 }, "76": { "age": 13, "id": 76 }, "78": { "age": 18, "id": 78 }, "79": { "age": 13, "id": 79 }, "81": { "age": 7, "id": 81 }, "85": { "age": 12, "id": 85 }, "86": { "age": 21, "id": 86 }, "92": { "age": 44, "id": 92 }, "94": { "age": 38, "id": 94 }, "95": { "age": 6, "id": 95 }, "96": { "age": 45, "id": 96 }, "97": { "age": 0, "id": 97 }, "98": { "age": 37, "id": 98 }, "99": { "age": 33, "id": 99 }, "100": { "age": 32, "id": 100 }, "102": { "age": 5, "id": 102 }, "103": { "age": 11, "id": 103 }, "106": { "age": 13, "id": 106 }, "110": { "age": 45, "id": 110 }, "113": { "age": 19, "id": 113 }, "115": { "age": 7, "id": 115 }, "119": { "age": 46, "id": 119 }, "122": { "age": 10, "id": 122 }, "123": { "age": 28, "id": 123 }, "124": { "age": 31, "id": 124 }, "125": { "age": 3, "id": 125 }, "127": { "age": 10, "id": 127 }, "128": { "age": 16, "id": 128 }, "130": { "age": 5, "id": 130 }, "131": { "age": 30, "id": 131 }, "135": { "age": 7, "id": 135 }, "136": { "age": 25, "id": 136 }, "139": { "age": 40, "id": 139 }, "143": { "age": 46, "id": 143 }, "144": { "age": 5, "id": 144 }, "145": { "age": 38, "id": 145 }, "147": { "age": 30, "id": 147 }, "150": { "age": 8, "id": 150 }, "152": { "age": 19, "id": 152 }, "156": { "age": 23, "id": 156 }, "157": { "age": 27, "id": 157 }, "159": { "age": 28, "id": 159 }, "161": { "age": 39, "id": 161 }, "162": { "age": 35, "id": 162 }, "163": { "age": 4, "id": 163 }, "164": { "age": 10, "id": 164 }, "166": { "age": 19, "id": 166 }, "170": { "age": 14, "id": 170 }, "171": { "age": 36, "id": 171 }, "173": { "age": 30, "id": 173 }, "175": { "age": 28, "id": 175 }, "176": { "age": 36, "id": 176 }, "177": { "age": 33, "id": 177 }, "179": { "age": 32, "id": 179 }, "180": { "age": 37, "id": 180 }, "182": { "age": 16, "id": 182 }, "184": { "age": 17, "id": 184 }, "185": { "age": 11, "id": 185 }, "186": { "age": 13, "id": 186 }, "187": { "age": 16, "id": 187 }, "188": { "age": 33, "id": 188 }, "190": { "age": 22, "id": 190 }, "192": { "age": 8, "id": 192 }, "193": { "age": 19, "id": 193 }, "194": { "age": 10, "id": 194 }, "195": { "age": 33, "id": 195 }, "196": { "age": 2, "id": 196 }, "198": { "age": 22, "id": 198 }, "201": { "age": 11, "id": 201 }, "203": { "age": 31, "id": 203 }, "207": { "age": 42, "id": 207 }, "208": { "age": 39, "id": 208 }, "209": { "age": 5, "id": 209 }, "210": { "age": 32, "id": 210 }, "211": { "age": 16, "id": 211 }, "213": { "age": 34, "id": 213 }, "216": { "age": 28, "id": 216 }, "217": { "age": 36, "id": 217 }, "219": { "age": 25, "id": 219 }, "221": { "age": 33, "id": 221 }, "222": { "age": 1, "id": 222 }, "223": { "age": 42, "id": 223 }, "225": { "age": 14, "id": 225 }, "226": { "age": 7, "id": 226 }, "227": { "age": 39, "id": 227 }, "228": { "age": 6, "id": 228 }, "229": { "age": 16, "id": 229 }, "230": { "age": 41, "id": 230 }, "238": { "age": 47, "id": 238 }, "240": { "age": 10, "id": 240 }, "241": { "age": 21, "id": 241 }, "244": { "age": 43, "id": 244 }, "248": { "age": 44, "id": 248 }, "250": { "age": 35, "id": 250 }, "251": { "age": 46, "id": 251 }, "253": { "age": 19, "id": 253 }, "255": { "age": 9, "id": 255 }, "256": { "age": 13, "id": 256 }, "259": { "age": 2, "id": 259 }, "262": { "age": 13, "id": 262 }, "265": { "age": 0, "id": 265 }, "268": { "age": 1, "id": 268 }, "269": { "age": 14, "id": 269 }, "271": { "age": 32, "id": 271 }, "272": { "age": 28, "id": 272 }, "277": { "age": 31, "id": 277 }, "278": { "age": 14, "id": 278 }, "280": { "age": 30, "id": 280 }, "281": { "age": 45, "id": 281 }, "285": { "age": 8, "id": 285 }, "286": { "age": 25, "id": 286 }, "289": { "age": 28, "id": 289 }, "291": { "age": 47, "id": 291 }, "292": { "age": 32, "id": 292 }, "297": { "age": 40, "id": 297 }, "299": { "age": 0, "id": 299 }, "300": { "age": 40, "id": 300 }, "301": { "age": 17, "id": 301 }, "306": { "age": 8, "id": 306 }, "310": { "age": 32, "id": 310 }, "311": { "age": 11, "id": 311 }, "314": { "age": 19, "id": 314 }, "315": { "age": 42, "id": 315 }, "317": { "age": 19, "id": 317 }, "324": { "age": 27, "id": 324 }, "327": { "age": 17, "id": 327 }, "331": { "age": 9, "id": 331 }, "334": { "age": 22, "id": 334 }, "339": { "age": 43, "id": 339 }, "341": { "age": 41, "id": 341 }, "345": { "age": 9, "id": 345 }, "347": { "age": 31, "id": 347 }, "348": { "age": 4, "id": 348 }, "349": { "age": 38, "id": 349 }, "350": { "age": 45, "id": 350 }, "351": { "age": 19, "id": 351 }, "352": { "age": 8, "id": 352 }, "354": { "age": 13, "id": 354 }, "355": { "age": 16, "id": 355 }, "356": { "age": 0, "id": 356 }, "357": { "age": 12, "id": 357 }, "363": { "age": 13, "id": 363 }, "364": { "age": 46, "id": 364 }, "369": { "age": 9, "id": 369 }, "374": { "age": 30, "id": 374 }, "377": { "age": 44, "id": 377 }, "378": { "age": 28, "id": 378 }, "379": { "age": 26, "id": 379 }, "380": { "age": 21, "id": 380 }, "382": { "age": 10, "id": 382 }, "384": { "age": 2, "id": 384 }, "387": { "age": 3, "id": 387 }, "388": { "age": 26, "id": 388 }, "389": { "age": 0, "id": 389 }, "390": { "age": 11, "id": 390 }, "391": { "age": 18, "id": 391 }, "392": { "age": 30, "id": 392 }, "393": { "age": 15, "id": 393 }, "395": { "age": 14, "id": 395 }, "396": { "age": 40, "id": 396 }, "400": { "age": 4, "id": 400 }, "401": { "age": 39, "id": 401 }, "404": { "age": 7, "id": 404 }, "406": { "age": 20, "id": 406 }, "409": { "age": 24, "id": 409 }, "410": { "age": 4, "id": 410 }, "411": { "age": 34, "id": 411 }, "412": { "age": 46, "id": 412 }, "413": { "age": 23, "id": 413 }, "416": { "age": 18, "id": 416 }, "417": { "age": 12, "id": 417 }, "419": { "age": 34, "id": 419 }, "421": { "age": 10, "id": 421 }, "422": { "age": 1, "id": 422 }, "424": { "age": 11, "id": 424 }, "425": { "age": 35, "id": 425 }, "427": { "age": 26, "id": 427 }, "429": { "age": 47, "id": 429 }, "433": { "age": 27, "id": 433 }, "434": { "age": 31, "id": 434 }, "435": { "age": 46, "id": 435 }, "439": { "age": 27, "id": 439 }, "440": { "age": 21, "id": 440 }, "442": { "age": 16, "id": 442 }, "444": { "age": 18, "id": 444 }, "447": { "age": 11, "id": 447 }, "449": { "age": 47, "id": 449 }, "450": { "age": 13, "id": 450 }, "452": { "age": 29, "id": 452 }, "453": { "age": 7, "id": 453 }, "454": { "age": 10, "id": 454 }, "456": { "age": 26, "id": 456 }, "457": { "age": 11, "id": 457 }, "459": { "age": 11, "id": 459 }, "460": { "age": 8, "id": 460 }, "463": { "age": 16, "id": 463 }, "464": { "age": 19, "id": 464 }, "467": { "age": 39, "id": 467 }, "468": { "age": 35, "id": 468 }, "471": { "age": 15, "id": 471 }, "472": { "age": 7, "id": 472 }, "477": { "age": 28, "id": 477 }, "481": { "age": 41, "id": 481 }, "482": { "age": 10, "id": 482 }, "483": { "age": 9, "id": 483 }, "484": { "age": 10, "id": 484 }, "485": { "age": 11, "id": 485 }, "490": { "age": 1, "id": 490 }, "491": { "age": 37, "id": 491 }, "493": { "age": 27, "id": 493 }, "498": { "age": 38, "id": 498 }, "501": { "age": 10, "id": 501 }, "502": { "age": 23, "id": 502 }, "503": { "age": 24, "id": 503 }, "506": { "age": 1, "id": 506 }, "507": { "age": 20, "id": 507 }, "509": { "age": 3, "id": 509 }, "510": { "age": 24, "id": 510 }, "511": { "age": 16, "id": 511 }, "512": { "age": 16, "id": 512 }, "513": { "age": 18, "id": 513 }, "515": { "age": 4, "id": 515 }, "518": { "age": 24, "id": 518 }, "520": { "age": 23, "id": 520 }, "521": { "age": 4, "id": 521 }, "522": { "age": 25, "id": 522 }, "523": { "age": 27, "id": 523 }, "524": { "age": 12, "id": 524 }, "525": { "age": 27, "id": 525 }, "530": { "age": 26, "id": 530 }, "532": { "age": 35, "id": 532 }, "534": { "age": 19, "id": 534 }, "535": { "age": 1, "id": 535 }, "538": { "age": 31, "id": 538 }, "543": { "age": 35, "id": 543 }, "544": { "age": 34, "id": 544 }, "546": { "age": 33, "id": 546 }, "547": { "age": 1, "id": 547 }, "549": { "age": 9, "id": 549 }, "550": { "age": 26, "id": 550 }, "551": { "age": 28, "id": 551 }, "556": { "age": 38, "id": 556 }, "561": { "age": 28, "id": 561 }, "562": { "age": 35, "id": 562 }, "563": { "age": 21, "id": 563 }, "566": { "age": 9, "id": 566 }, "567": { "age": 0, "id": 567 }, "581": { "age": 21, "id": 581 }, "584": { "age": 14, "id": 584 }, "585": { "age": 10, "id": 585 }, "586": { "age": 34, "id": 586 }, "588": { "age": 31, "id": 588 }, "589": { "age": 47, "id": 589 }, "591": { "age": 1, "id": 591 }, "598": { "age": 29, "id": 598 }, "600": { "age": 40, "id": 600 }, "603": { "age": 2, "id": 603 }, "604": { "age": 35, "id": 604 }, "605": { "age": 26, "id": 605 }, "606": { "age": 7, "id": 606 }, "609": { "age": 46, "id": 609 }, "610": { "age": 34, "id": 610 }, "612": { "age": 8, "id": 612 }, "617": { "age": 20, "id": 617 }, "619": { "age": 3, "id": 619 }, "620": { "age": 21, "id": 620 }, "624": { "age": 36, "id": 624 }, "626": { "age": 23, "id": 626 }, "627": { "age": 20, "id": 627 }, "628": { "age": 33, "id": 628 }, "631": { "age": 23, "id": 631 }, "632": { "age": 43, "id": 632 }, "635": { "age": 12, "id": 635 }, "637": { "age": 38, "id": 637 }, "639": { "age": 8, "id": 639 }, "641": { "age": 46, "id": 641 }, "642": { "age": 20, "id": 642 }, "644": { "age": 29, "id": 644 }, "646": { "age": 32, "id": 646 }, "647": { "age": 6, "id": 647 }, "653": { "age": 38, "id": 653 }, "657": { "age": 46, "id": 657 }, "659": { "age": 44, "id": 659 }, "663": { "age": 18, "id": 663 }, "664": { "age": 29, "id": 664 }, "667": { "age": 20, "id": 667 }, "668": { "age": 1, "id": 668 }, "670": { "age": 7, "id": 670 }, "673": { "age": 12, "id": 673 }, "676": { "age": 18, "id": 676 }, "678": { "age": 31, "id": 678 }, "679": { "age": 27, "id": 679 }, "680": { "age": 32, "id": 680 }, "683": { "age": 9, "id": 683 }, "689": { "age": 47, "id": 689 }, "691": { "age": 41, "id": 691 }, "692": { "age": 42, "id": 692 }, "694": { "age": 19, "id": 694 }, "695": { "age": 31, "id": 695 }, "696": { "age": 20, "id": 696 }, "697": { "age": 8, "id": 697 }, "706": { "age": 11, "id": 706 }, "708": { "age": 25, "id": 708 }, "710": { "age": 0, "id": 710 }, "711": { "age": 29, "id": 711 }, "714": { "age": 43, "id": 714 }, "715": { "age": 17, "id": 715 }, "717": { "age": 30, "id": 717 }, "718": { "age": 4, "id": 718 }, "719": { "age": 22, "id": 719 }, "720": { "age": 35, "id": 720 }, "721": { "age": 14, "id": 721 }, "722": { "age": 10, "id": 722 }, "724": { "age": 19, "id": 724 }, "727": { "age": 21, "id": 727 }, "728": { "age": 46, "id": 728 }, "732": { "age": 39, "id": 732 }, "733": { "age": 36, "id": 733 }, "734": { "age": 26, "id": 734 }, "735": { "age": 18, "id": 735 }, "737": { "age": 21, "id": 737 }, "739": { "age": 46, "id": 739 }, "746": { "age": 13, "id": 746 }, "749": { "age": 46, "id": 749 }, "751": { "age": 15, "id": 751 }, "754": { "age": 37, "id": 754 }, "755": { "age": 8, "id": 755 }, "757": { "age": 2, "id": 757 }, "761": { "age": 34, "id": 761 }, "762": { "age": 47, "id": 762 }, "763": { "age": 15, "id": 763 }, "765": { "age": 12, "id": 765 }, "767": { "age": 1, "id": 767 }, "768": { "age": 44, "id": 768 }, "775": { "age": 5, "id": 775 }, "779": { "age": 17, "id": 779 }, "780": { "age": 3, "id": 780 }, "784": { "age": 27, "id": 784 }, "786": { "age": 36, "id": 786 }, "790": { "age": 13, "id": 790 }, "797": { "age": 18, "id": 797 }, "800": { "age": 10, "id": 800 }, "806": { "age": 45, "id": 806 }, "809": { "age": 10, "id": 809 }, "812": { "age": 20, "id": 812 }, "813": { "age": 34, "id": 813 }, "814": { "age": 17, "id": 814 }, "820": { "age": 16, "id": 820 }, "823": { "age": 32, "id": 823 }, "825": { "age": 26, "id": 825 }, "826": { "age": 17, "id": 826 }, "832": { "age": 28, "id": 832 }, "834": { "age": 27, "id": 834 }, "835": { "age": 8, "id": 835 }, "836": { "age": 24, "id": 836 }, "837": { "age": 37, "id": 837 }, "840": { "age": 2, "id": 840 }, "841": { "age": 39, "id": 841 }, "843": { "age": 21, "id": 843 }, "844": { "age": 21, "id": 844 }, "847": { "age": 35, "id": 847 }, "848": { "age": 17, "id": 848 }, "851": { "age": 8, "id": 851 }, "856": { "age": 40, "id": 856 }, "857": { "age": 17, "id": 857 }, "858": { "age": 3, "id": 858 }, "859": { "age": 13, "id": 859 }, "861": { "age": 2, "id": 861 }, "862": { "age": 29, "id": 862 }, "863": { "age": 15, "id": 863 }, "864": { "age": 22, "id": 864 }, "865": { "age": 7, "id": 865 }, "868": { "age": 40, "id": 868 }, "869": { "age": 15, "id": 869 }, "871": { "age": 5, "id": 871 }, "873": { "age": 13, "id": 873 }, "877": { "age": 18, "id": 877 }, "880": { "age": 34, "id": 880 }, "881": { "age": 10, "id": 881 }, "882": { "age": 33, "id": 882 }, "883": { "age": 43, "id": 883 }, "884": { "age": 14, "id": 884 }, "888": { "age": 25, "id": 888 }, "889": { "age": 10, "id": 889 }, "891": { "age": 5, "id": 891 }, "892": { "age": 24, "id": 892 }, "893": { "age": 17, "id": 893 }, "894": { "age": 42, "id": 894 }, "896": { "age": 36, "id": 896 }, "897": { "age": 18, "id": 897 }, "898": { "age": 7, "id": 898 }, "900": { "age": 2, "id": 900 }, "901": { "age": 42, "id": 901 }, "904": { "age": 24, "id": 904 }, "906": { "age": 20, "id": 906 }, "907": { "age": 9, "id": 907 }, "908": { "age": 26, "id": 908 }, "909": { "age": 37, "id": 909 }, "910": { "age": 42, "id": 910 }, "914": { "age": 33, "id": 914 }, "915": { "age": 25, "id": 915 }, "917": { "age": 7, "id": 917 }, "919": { "age": 19, "id": 919 }, "920": { "age": 23, "id": 920 }, "922": { "age": 27, "id": 922 }, "924": { "age": 3, "id": 924 }, "925": { "age": 25, "id": 925 }, "927": { "age": 20, "id": 927 }, "928": { "age": 12, "id": 928 }, "929": { "age": 6, "id": 929 }, "930": { "age": 2, "id": 930 }, "932": { "age": 11, "id": 932 }, "942": { "age": 38, "id": 942 }, "943": { "age": 7, "id": 943 }, "944": { "age": 26, "id": 944 }, "947": { "age": 33, "id": 947 }, "952": { "age": 34, "id": 952 }, "955": { "age": 33, "id": 955 }, "956": { "age": 31, "id": 956 }, "960": { "age": 40, "id": 960 }, "961": { "age": 13, "id": 961 }, "965": { "age": 34, "id": 965 }, "967": { "age": 37, "id": 967 }, "970": { "age": 10, "id": 970 }, "974": { "age": 26, "id": 974 }, "975": { "age": 22, "id": 975 }, "977": { "age": 45, "id": 977 }, "980": { "age": 11, "id": 980 }, "981": { "age": 16, "id": 981 }, "982": { "age": 29, "id": 982 }, "984": { "age": 10, "id": 984 }, "985": { "age": 25, "id": 985 }, "987": { "age": 38, "id": 987 }, "989": { "age": 16, "id": 989 }, "990": { "age": 22, "id": 990 }, "991": { "age": 36, "id": 991 }, "992": { "age": 31, "id": 992 }, "993": { "age": 11, "id": 993 }, "997": { "age": 4, "id": 997 }, "998": { "age": 37, "id": 998 } };

        let results = test_utils.assertErrorSync(search_util.lessThanEqual, [env, 'id', 'age', 47, true], undefined);
        assert.deepStrictEqual(Object.keys(results).length, 468);
        assert.deepEqual(results, expected);
    });

    it("test lessThanEqual 47 on age reverse limit 20", () => {
        let expected = { "20": { "age": 47, "id": 20 }, "119": { "age": 46, "id": 119 }, "143": { "age": 46, "id": 143 }, "238": { "age": 47, "id": 238 }, "251": { "age": 46, "id": 251 }, "291": { "age": 47, "id": 291 }, "364": { "age": 46, "id": 364 }, "412": { "age": 46, "id": 412 }, "429": { "age": 47, "id": 429 }, "435": { "age": 46, "id": 435 }, "449": { "age": 47, "id": 449 }, "589": { "age": 47, "id": 589 }, "609": { "age": 46, "id": 609 }, "641": { "age": 46, "id": 641 }, "657": { "age": 46, "id": 657 }, "689": { "age": 47, "id": 689 }, "728": { "age": 46, "id": 728 }, "739": { "age": 46, "id": 739 }, "749": { "age": 46, "id": 749 }, "762": { "age": 47, "id": 762 } };

        let results = test_utils.assertErrorSync(search_util.lessThanEqual, [env, 'id', 'age', 47, true, 20], undefined);
        assert.deepStrictEqual(Object.keys(results).length, 20);
        assert.deepEqual(results, expected);
    });

    it("test lessThanEqual 47 on age reverse offset 20", () => {
        let expected = { "1": { "age": 30, "id": 1 }, "2": { "age": 26, "id": 2 }, "3": { "age": 12, "id": 3 }, "5": { "age": 23, "id": 5 }, "9": { "age": 21, "id": 9 }, "10": { "age": 39, "id": 10 }, "14": { "age": 25, "id": 14 }, "17": { "age": 16, "id": 17 }, "22": { "age": 22, "id": 22 }, "26": { "age": 20, "id": 26 }, "27": { "age": 12, "id": 27 }, "31": { "age": 34, "id": 31 }, "32": { "age": 19, "id": 32 }, "33": { "age": 40, "id": 33 }, "36": { "age": 28, "id": 36 }, "37": { "age": 10, "id": 37 }, "38": { "age": 25, "id": 38 }, "42": { "age": 18, "id": 42 }, "43": { "age": 5, "id": 43 }, "46": { "age": 20, "id": 46 }, "49": { "age": 42, "id": 49 }, "50": { "age": 25, "id": 50 }, "54": { "age": 1, "id": 54 }, "55": { "age": 36, "id": 55 }, "63": { "age": 4, "id": 63 }, "64": { "age": 7, "id": 64 }, "66": { "age": 42, "id": 66 }, "74": { "age": 23, "id": 74 }, "76": { "age": 13, "id": 76 }, "78": { "age": 18, "id": 78 }, "79": { "age": 13, "id": 79 }, "81": { "age": 7, "id": 81 }, "85": { "age": 12, "id": 85 }, "86": { "age": 21, "id": 86 }, "92": { "age": 44, "id": 92 }, "94": { "age": 38, "id": 94 }, "95": { "age": 6, "id": 95 }, "96": { "age": 45, "id": 96 }, "97": { "age": 0, "id": 97 }, "98": { "age": 37, "id": 98 }, "99": { "age": 33, "id": 99 }, "100": { "age": 32, "id": 100 }, "102": { "age": 5, "id": 102 }, "103": { "age": 11, "id": 103 }, "106": { "age": 13, "id": 106 }, "110": { "age": 45, "id": 110 }, "113": { "age": 19, "id": 113 }, "115": { "age": 7, "id": 115 }, "122": { "age": 10, "id": 122 }, "123": { "age": 28, "id": 123 }, "124": { "age": 31, "id": 124 }, "125": { "age": 3, "id": 125 }, "127": { "age": 10, "id": 127 }, "128": { "age": 16, "id": 128 }, "130": { "age": 5, "id": 130 }, "131": { "age": 30, "id": 131 }, "135": { "age": 7, "id": 135 }, "136": { "age": 25, "id": 136 }, "139": { "age": 40, "id": 139 }, "144": { "age": 5, "id": 144 }, "145": { "age": 38, "id": 145 }, "147": { "age": 30, "id": 147 }, "150": { "age": 8, "id": 150 }, "152": { "age": 19, "id": 152 }, "156": { "age": 23, "id": 156 }, "157": { "age": 27, "id": 157 }, "159": { "age": 28, "id": 159 }, "161": { "age": 39, "id": 161 }, "162": { "age": 35, "id": 162 }, "163": { "age": 4, "id": 163 }, "164": { "age": 10, "id": 164 }, "166": { "age": 19, "id": 166 }, "170": { "age": 14, "id": 170 }, "171": { "age": 36, "id": 171 }, "173": { "age": 30, "id": 173 }, "175": { "age": 28, "id": 175 }, "176": { "age": 36, "id": 176 }, "177": { "age": 33, "id": 177 }, "179": { "age": 32, "id": 179 }, "180": { "age": 37, "id": 180 }, "182": { "age": 16, "id": 182 }, "184": { "age": 17, "id": 184 }, "185": { "age": 11, "id": 185 }, "186": { "age": 13, "id": 186 }, "187": { "age": 16, "id": 187 }, "188": { "age": 33, "id": 188 }, "190": { "age": 22, "id": 190 }, "192": { "age": 8, "id": 192 }, "193": { "age": 19, "id": 193 }, "194": { "age": 10, "id": 194 }, "195": { "age": 33, "id": 195 }, "196": { "age": 2, "id": 196 }, "198": { "age": 22, "id": 198 }, "201": { "age": 11, "id": 201 }, "203": { "age": 31, "id": 203 }, "207": { "age": 42, "id": 207 }, "208": { "age": 39, "id": 208 }, "209": { "age": 5, "id": 209 }, "210": { "age": 32, "id": 210 }, "211": { "age": 16, "id": 211 }, "213": { "age": 34, "id": 213 }, "216": { "age": 28, "id": 216 }, "217": { "age": 36, "id": 217 }, "219": { "age": 25, "id": 219 }, "221": { "age": 33, "id": 221 }, "222": { "age": 1, "id": 222 }, "223": { "age": 42, "id": 223 }, "225": { "age": 14, "id": 225 }, "226": { "age": 7, "id": 226 }, "227": { "age": 39, "id": 227 }, "228": { "age": 6, "id": 228 }, "229": { "age": 16, "id": 229 }, "230": { "age": 41, "id": 230 }, "240": { "age": 10, "id": 240 }, "241": { "age": 21, "id": 241 }, "244": { "age": 43, "id": 244 }, "248": { "age": 44, "id": 248 }, "250": { "age": 35, "id": 250 }, "253": { "age": 19, "id": 253 }, "255": { "age": 9, "id": 255 }, "256": { "age": 13, "id": 256 }, "259": { "age": 2, "id": 259 }, "262": { "age": 13, "id": 262 }, "265": { "age": 0, "id": 265 }, "268": { "age": 1, "id": 268 }, "269": { "age": 14, "id": 269 }, "271": { "age": 32, "id": 271 }, "272": { "age": 28, "id": 272 }, "277": { "age": 31, "id": 277 }, "278": { "age": 14, "id": 278 }, "280": { "age": 30, "id": 280 }, "281": { "age": 45, "id": 281 }, "285": { "age": 8, "id": 285 }, "286": { "age": 25, "id": 286 }, "289": { "age": 28, "id": 289 }, "292": { "age": 32, "id": 292 }, "297": { "age": 40, "id": 297 }, "299": { "age": 0, "id": 299 }, "300": { "age": 40, "id": 300 }, "301": { "age": 17, "id": 301 }, "306": { "age": 8, "id": 306 }, "310": { "age": 32, "id": 310 }, "311": { "age": 11, "id": 311 }, "314": { "age": 19, "id": 314 }, "315": { "age": 42, "id": 315 }, "317": { "age": 19, "id": 317 }, "324": { "age": 27, "id": 324 }, "327": { "age": 17, "id": 327 }, "331": { "age": 9, "id": 331 }, "334": { "age": 22, "id": 334 }, "339": { "age": 43, "id": 339 }, "341": { "age": 41, "id": 341 }, "345": { "age": 9, "id": 345 }, "347": { "age": 31, "id": 347 }, "348": { "age": 4, "id": 348 }, "349": { "age": 38, "id": 349 }, "350": { "age": 45, "id": 350 }, "351": { "age": 19, "id": 351 }, "352": { "age": 8, "id": 352 }, "354": { "age": 13, "id": 354 }, "355": { "age": 16, "id": 355 }, "356": { "age": 0, "id": 356 }, "357": { "age": 12, "id": 357 }, "363": { "age": 13, "id": 363 }, "369": { "age": 9, "id": 369 }, "374": { "age": 30, "id": 374 }, "377": { "age": 44, "id": 377 }, "378": { "age": 28, "id": 378 }, "379": { "age": 26, "id": 379 }, "380": { "age": 21, "id": 380 }, "382": { "age": 10, "id": 382 }, "384": { "age": 2, "id": 384 }, "387": { "age": 3, "id": 387 }, "388": { "age": 26, "id": 388 }, "389": { "age": 0, "id": 389 }, "390": { "age": 11, "id": 390 }, "391": { "age": 18, "id": 391 }, "392": { "age": 30, "id": 392 }, "393": { "age": 15, "id": 393 }, "395": { "age": 14, "id": 395 }, "396": { "age": 40, "id": 396 }, "400": { "age": 4, "id": 400 }, "401": { "age": 39, "id": 401 }, "404": { "age": 7, "id": 404 }, "406": { "age": 20, "id": 406 }, "409": { "age": 24, "id": 409 }, "410": { "age": 4, "id": 410 }, "411": { "age": 34, "id": 411 }, "413": { "age": 23, "id": 413 }, "416": { "age": 18, "id": 416 }, "417": { "age": 12, "id": 417 }, "419": { "age": 34, "id": 419 }, "421": { "age": 10, "id": 421 }, "422": { "age": 1, "id": 422 }, "424": { "age": 11, "id": 424 }, "425": { "age": 35, "id": 425 }, "427": { "age": 26, "id": 427 }, "433": { "age": 27, "id": 433 }, "434": { "age": 31, "id": 434 }, "439": { "age": 27, "id": 439 }, "440": { "age": 21, "id": 440 }, "442": { "age": 16, "id": 442 }, "444": { "age": 18, "id": 444 }, "447": { "age": 11, "id": 447 }, "450": { "age": 13, "id": 450 }, "452": { "age": 29, "id": 452 }, "453": { "age": 7, "id": 453 }, "454": { "age": 10, "id": 454 }, "456": { "age": 26, "id": 456 }, "457": { "age": 11, "id": 457 }, "459": { "age": 11, "id": 459 }, "460": { "age": 8, "id": 460 }, "463": { "age": 16, "id": 463 }, "464": { "age": 19, "id": 464 }, "467": { "age": 39, "id": 467 }, "468": { "age": 35, "id": 468 }, "471": { "age": 15, "id": 471 }, "472": { "age": 7, "id": 472 }, "477": { "age": 28, "id": 477 }, "481": { "age": 41, "id": 481 }, "482": { "age": 10, "id": 482 }, "483": { "age": 9, "id": 483 }, "484": { "age": 10, "id": 484 }, "485": { "age": 11, "id": 485 }, "490": { "age": 1, "id": 490 }, "491": { "age": 37, "id": 491 }, "493": { "age": 27, "id": 493 }, "498": { "age": 38, "id": 498 }, "501": { "age": 10, "id": 501 }, "502": { "age": 23, "id": 502 }, "503": { "age": 24, "id": 503 }, "506": { "age": 1, "id": 506 }, "507": { "age": 20, "id": 507 }, "509": { "age": 3, "id": 509 }, "510": { "age": 24, "id": 510 }, "511": { "age": 16, "id": 511 }, "512": { "age": 16, "id": 512 }, "513": { "age": 18, "id": 513 }, "515": { "age": 4, "id": 515 }, "518": { "age": 24, "id": 518 }, "520": { "age": 23, "id": 520 }, "521": { "age": 4, "id": 521 }, "522": { "age": 25, "id": 522 }, "523": { "age": 27, "id": 523 }, "524": { "age": 12, "id": 524 }, "525": { "age": 27, "id": 525 }, "530": { "age": 26, "id": 530 }, "532": { "age": 35, "id": 532 }, "534": { "age": 19, "id": 534 }, "535": { "age": 1, "id": 535 }, "538": { "age": 31, "id": 538 }, "543": { "age": 35, "id": 543 }, "544": { "age": 34, "id": 544 }, "546": { "age": 33, "id": 546 }, "547": { "age": 1, "id": 547 }, "549": { "age": 9, "id": 549 }, "550": { "age": 26, "id": 550 }, "551": { "age": 28, "id": 551 }, "556": { "age": 38, "id": 556 }, "561": { "age": 28, "id": 561 }, "562": { "age": 35, "id": 562 }, "563": { "age": 21, "id": 563 }, "566": { "age": 9, "id": 566 }, "567": { "age": 0, "id": 567 }, "581": { "age": 21, "id": 581 }, "584": { "age": 14, "id": 584 }, "585": { "age": 10, "id": 585 }, "586": { "age": 34, "id": 586 }, "588": { "age": 31, "id": 588 }, "591": { "age": 1, "id": 591 }, "598": { "age": 29, "id": 598 }, "600": { "age": 40, "id": 600 }, "603": { "age": 2, "id": 603 }, "604": { "age": 35, "id": 604 }, "605": { "age": 26, "id": 605 }, "606": { "age": 7, "id": 606 }, "610": { "age": 34, "id": 610 }, "612": { "age": 8, "id": 612 }, "617": { "age": 20, "id": 617 }, "619": { "age": 3, "id": 619 }, "620": { "age": 21, "id": 620 }, "624": { "age": 36, "id": 624 }, "626": { "age": 23, "id": 626 }, "627": { "age": 20, "id": 627 }, "628": { "age": 33, "id": 628 }, "631": { "age": 23, "id": 631 }, "632": { "age": 43, "id": 632 }, "635": { "age": 12, "id": 635 }, "637": { "age": 38, "id": 637 }, "639": { "age": 8, "id": 639 }, "642": { "age": 20, "id": 642 }, "644": { "age": 29, "id": 644 }, "646": { "age": 32, "id": 646 }, "647": { "age": 6, "id": 647 }, "653": { "age": 38, "id": 653 }, "659": { "age": 44, "id": 659 }, "663": { "age": 18, "id": 663 }, "664": { "age": 29, "id": 664 }, "667": { "age": 20, "id": 667 }, "668": { "age": 1, "id": 668 }, "670": { "age": 7, "id": 670 }, "673": { "age": 12, "id": 673 }, "676": { "age": 18, "id": 676 }, "678": { "age": 31, "id": 678 }, "679": { "age": 27, "id": 679 }, "680": { "age": 32, "id": 680 }, "683": { "age": 9, "id": 683 }, "691": { "age": 41, "id": 691 }, "692": { "age": 42, "id": 692 }, "694": { "age": 19, "id": 694 }, "695": { "age": 31, "id": 695 }, "696": { "age": 20, "id": 696 }, "697": { "age": 8, "id": 697 }, "706": { "age": 11, "id": 706 }, "708": { "age": 25, "id": 708 }, "710": { "age": 0, "id": 710 }, "711": { "age": 29, "id": 711 }, "714": { "age": 43, "id": 714 }, "715": { "age": 17, "id": 715 }, "717": { "age": 30, "id": 717 }, "718": { "age": 4, "id": 718 }, "719": { "age": 22, "id": 719 }, "720": { "age": 35, "id": 720 }, "721": { "age": 14, "id": 721 }, "722": { "age": 10, "id": 722 }, "724": { "age": 19, "id": 724 }, "727": { "age": 21, "id": 727 }, "732": { "age": 39, "id": 732 }, "733": { "age": 36, "id": 733 }, "734": { "age": 26, "id": 734 }, "735": { "age": 18, "id": 735 }, "737": { "age": 21, "id": 737 }, "746": { "age": 13, "id": 746 }, "751": { "age": 15, "id": 751 }, "754": { "age": 37, "id": 754 }, "755": { "age": 8, "id": 755 }, "757": { "age": 2, "id": 757 }, "761": { "age": 34, "id": 761 }, "763": { "age": 15, "id": 763 }, "765": { "age": 12, "id": 765 }, "767": { "age": 1, "id": 767 }, "768": { "age": 44, "id": 768 }, "775": { "age": 5, "id": 775 }, "779": { "age": 17, "id": 779 }, "780": { "age": 3, "id": 780 }, "784": { "age": 27, "id": 784 }, "786": { "age": 36, "id": 786 }, "790": { "age": 13, "id": 790 }, "797": { "age": 18, "id": 797 }, "800": { "age": 10, "id": 800 }, "806": { "age": 45, "id": 806 }, "809": { "age": 10, "id": 809 }, "812": { "age": 20, "id": 812 }, "813": { "age": 34, "id": 813 }, "814": { "age": 17, "id": 814 }, "820": { "age": 16, "id": 820 }, "823": { "age": 32, "id": 823 }, "825": { "age": 26, "id": 825 }, "826": { "age": 17, "id": 826 }, "832": { "age": 28, "id": 832 }, "834": { "age": 27, "id": 834 }, "835": { "age": 8, "id": 835 }, "836": { "age": 24, "id": 836 }, "837": { "age": 37, "id": 837 }, "840": { "age": 2, "id": 840 }, "841": { "age": 39, "id": 841 }, "843": { "age": 21, "id": 843 }, "844": { "age": 21, "id": 844 }, "847": { "age": 35, "id": 847 }, "848": { "age": 17, "id": 848 }, "851": { "age": 8, "id": 851 }, "856": { "age": 40, "id": 856 }, "857": { "age": 17, "id": 857 }, "858": { "age": 3, "id": 858 }, "859": { "age": 13, "id": 859 }, "861": { "age": 2, "id": 861 }, "862": { "age": 29, "id": 862 }, "863": { "age": 15, "id": 863 }, "864": { "age": 22, "id": 864 }, "865": { "age": 7, "id": 865 }, "868": { "age": 40, "id": 868 }, "869": { "age": 15, "id": 869 }, "871": { "age": 5, "id": 871 }, "873": { "age": 13, "id": 873 }, "877": { "age": 18, "id": 877 }, "880": { "age": 34, "id": 880 }, "881": { "age": 10, "id": 881 }, "882": { "age": 33, "id": 882 }, "883": { "age": 43, "id": 883 }, "884": { "age": 14, "id": 884 }, "888": { "age": 25, "id": 888 }, "889": { "age": 10, "id": 889 }, "891": { "age": 5, "id": 891 }, "892": { "age": 24, "id": 892 }, "893": { "age": 17, "id": 893 }, "894": { "age": 42, "id": 894 }, "896": { "age": 36, "id": 896 }, "897": { "age": 18, "id": 897 }, "898": { "age": 7, "id": 898 }, "900": { "age": 2, "id": 900 }, "901": { "age": 42, "id": 901 }, "904": { "age": 24, "id": 904 }, "906": { "age": 20, "id": 906 }, "907": { "age": 9, "id": 907 }, "908": { "age": 26, "id": 908 }, "909": { "age": 37, "id": 909 }, "910": { "age": 42, "id": 910 }, "914": { "age": 33, "id": 914 }, "915": { "age": 25, "id": 915 }, "917": { "age": 7, "id": 917 }, "919": { "age": 19, "id": 919 }, "920": { "age": 23, "id": 920 }, "922": { "age": 27, "id": 922 }, "924": { "age": 3, "id": 924 }, "925": { "age": 25, "id": 925 }, "927": { "age": 20, "id": 927 }, "928": { "age": 12, "id": 928 }, "929": { "age": 6, "id": 929 }, "930": { "age": 2, "id": 930 }, "932": { "age": 11, "id": 932 }, "942": { "age": 38, "id": 942 }, "943": { "age": 7, "id": 943 }, "944": { "age": 26, "id": 944 }, "947": { "age": 33, "id": 947 }, "952": { "age": 34, "id": 952 }, "955": { "age": 33, "id": 955 }, "956": { "age": 31, "id": 956 }, "960": { "age": 40, "id": 960 }, "961": { "age": 13, "id": 961 }, "965": { "age": 34, "id": 965 }, "967": { "age": 37, "id": 967 }, "970": { "age": 10, "id": 970 }, "974": { "age": 26, "id": 974 }, "975": { "age": 22, "id": 975 }, "977": { "age": 45, "id": 977 }, "980": { "age": 11, "id": 980 }, "981": { "age": 16, "id": 981 }, "982": { "age": 29, "id": 982 }, "984": { "age": 10, "id": 984 }, "985": { "age": 25, "id": 985 }, "987": { "age": 38, "id": 987 }, "989": { "age": 16, "id": 989 }, "990": { "age": 22, "id": 990 }, "991": { "age": 36, "id": 991 }, "992": { "age": 31, "id": 992 }, "993": { "age": 11, "id": 993 }, "997": { "age": 4, "id": 997 }, "998": { "age": 37, "id": 998 } };

        let results = test_utils.assertErrorSync(search_util.lessThanEqual, [env, 'id', 'age', 47, true, undefined, 20], undefined);
        assert.deepStrictEqual(Object.keys(results).length, 448);
        assert.deepEqual(results, expected);
    });

    it("test lessThanEqual 47 on age reverse limit 20 offset 20", () => {
        let expected = { "92": { "age": 44, "id": 92 }, "96": { "age": 45, "id": 96 }, "110": { "age": 45, "id": 110 }, "244": { "age": 43, "id": 244 }, "248": { "age": 44, "id": 248 }, "281": { "age": 45, "id": 281 }, "339": { "age": 43, "id": 339 }, "350": { "age": 45, "id": 350 }, "377": { "age": 44, "id": 377 }, "632": { "age": 43, "id": 632 }, "659": { "age": 44, "id": 659 }, "692": { "age": 42, "id": 692 }, "714": { "age": 43, "id": 714 }, "768": { "age": 44, "id": 768 }, "806": { "age": 45, "id": 806 }, "883": { "age": 43, "id": 883 }, "894": { "age": 42, "id": 894 }, "901": { "age": 42, "id": 901 }, "910": { "age": 42, "id": 910 }, "977": { "age": 45, "id": 977 } };

        let results = test_utils.assertErrorSync(search_util.lessThanEqual, [env, 'id', 'age', 47, true, 20, 20], undefined);
        assert.deepStrictEqual(Object.keys(results).length, 20);
        assert.deepEqual(results, expected);
    });

    /** string **/
    it("test lessThanEqual CO on string key column limit 20", () => {
        let expected = { "32": { "state": "AK", "id": 32 }, "71": { "state": "AL", "id": 71 }, "75": { "state": "AL", "id": 75 }, "87": { "state": "AK", "id": 87 }, "124": { "state": "AK", "id": 124 }, "127": { "state": "AL", "id": 127 }, "138": { "state": "AK", "id": 138 }, "146": { "state": "AK", "id": 146 }, "163": { "state": "AK", "id": 163 }, "169": { "state": "AK", "id": 169 }, "174": { "state": "AL", "id": 174 }, "225": { "state": "AL", "id": 225 }, "240": { "state": "AL", "id": 240 }, "337": { "state": "AK", "id": 337 }, "350": { "state": "AK", "id": 350 }, "469": { "state": "AK", "id": 469 }, "543": { "state": "AK", "id": 543 }, "653": { "state": "AK", "id": 653 }, "852": { "state": "AK", "id": 852 }, "923": { "state": "AK", "id": 923 } };

        let results = test_utils.assertErrorSync(search_util.lessThanEqual, [env, 'id', 'state', 'CO', false, 20], undefined);
        assert.deepStrictEqual(Object.keys(results).length, 20);
        assert.deepEqual(results, expected);
    });

    it("test lessThanEqual CO on string key column limit 20 offset 20", () => {
        let expected = { "39": { "state": "AR", "id": 39 }, "90": { "state": "AR", "id": 90 }, "211": { "state": "AR", "id": 211 }, "215": { "state": "AR", "id": 215 }, "270": { "state": "AR", "id": 270 }, "308": { "state": "AR", "id": 308 }, "364": { "state": "AL", "id": 364 }, "437": { "state": "AL", "id": 437 }, "459": { "state": "AL", "id": 459 }, "500": { "state": "AL", "id": 500 }, "524": { "state": "AL", "id": 524 }, "530": { "state": "AL", "id": 530 }, "550": { "state": "AL", "id": 550 }, "553": { "state": "AL", "id": 553 }, "603": { "state": "AL", "id": 603 }, "628": { "state": "AR", "id": 628 }, "643": { "state": "AL", "id": 643 }, "692": { "state": "AL", "id": 692 }, "955": { "state": "AL", "id": 955 }, "984": { "state": "AL", "id": 984 } };

        let results = test_utils.assertErrorSync(search_util.lessThanEqual, [env, 'id', 'state', 'CO', false, 20, 20], undefined);
        assert.deepStrictEqual(Object.keys(results).length, 20);
        assert.deepEqual(results, expected);
    });

    it("test lessThanEqual CO on string key column reverse limit 20", () => {
        let expected = { "58": { "state": "CO", "id": 58 }, "60": { "state": "CO", "id": 60 }, "83": { "state": "CO", "id": 83 }, "88": { "state": "CO", "id": 88 }, "172": { "state": "CO", "id": 172 }, "224": { "state": "CO", "id": 224 }, "229": { "state": "CO", "id": 229 }, "330": { "state": "CO", "id": 330 }, "384": { "state": "CO", "id": 384 }, "418": { "state": "CO", "id": 418 }, "481": { "state": "CO", "id": 481 }, "521": { "state": "CO", "id": 521 }, "611": { "state": "CO", "id": 611 }, "644": { "state": "CO", "id": 644 }, "658": { "state": "CO", "id": 658 }, "701": { "state": "CO", "id": 701 }, "943": { "state": "CO", "id": 943 }, "946": { "state": "CO", "id": 946 }, "967": { "state": "CO", "id": 967 }, "996": { "state": "CA", "id": 996 } };

        let results = test_utils.assertErrorSync(search_util.lessThanEqual, [env, 'id', 'state', 'CO', true, 20], undefined);
        assert.deepStrictEqual(Object.keys(results).length, 20);
        assert.deepEqual(results, expected);
    });

    it("test lessThanEqual CO on string key column reverse limit 20 offset 20", () => {
        let expected = { "44": { "state": "CA", "id": 44 }, "126": { "state": "CA", "id": 126 }, "219": { "state": "CA", "id": 219 }, "239": { "state": "CA", "id": 239 }, "254": { "state": "CA", "id": 254 }, "262": { "state": "CA", "id": 262 }, "358": { "state": "CA", "id": 358 }, "421": { "state": "CA", "id": 421 }, "455": { "state": "CA", "id": 455 }, "484": { "state": "CA", "id": 484 }, "504": { "state": "CA", "id": 504 }, "604": { "state": "CA", "id": 604 }, "607": { "state": "CA", "id": 607 }, "668": { "state": "CA", "id": 668 }, "726": { "state": "CA", "id": 726 }, "744": { "state": "CA", "id": 744 }, "904": { "state": "CA", "id": 904 }, "944": { "state": "CA", "id": 944 }, "951": { "state": "CA", "id": 951 }, "973": { "state": "CA", "id": 973 } };

        let results = test_utils.assertErrorSync(search_util.lessThanEqual, [env, 'id', 'state', 'CO', true, 20, 20], undefined);
        assert.deepStrictEqual(Object.keys(results).length, 20);
        assert.deepEqual(results, expected);
    });

    it("test lessThanEqual W on string key column limit 20", () => {
        let expected = { "32": { "state": "AK", "id": 32 }, "71": { "state": "AL", "id": 71 }, "75": { "state": "AL", "id": 75 }, "87": { "state": "AK", "id": 87 }, "124": { "state": "AK", "id": 124 }, "127": { "state": "AL", "id": 127 }, "138": { "state": "AK", "id": 138 }, "146": { "state": "AK", "id": 146 }, "163": { "state": "AK", "id": 163 }, "169": { "state": "AK", "id": 169 }, "174": { "state": "AL", "id": 174 }, "225": { "state": "AL", "id": 225 }, "240": { "state": "AL", "id": 240 }, "337": { "state": "AK", "id": 337 }, "350": { "state": "AK", "id": 350 }, "469": { "state": "AK", "id": 469 }, "543": { "state": "AK", "id": 543 }, "653": { "state": "AK", "id": 653 }, "852": { "state": "AK", "id": 852 }, "923": { "state": "AK", "id": 923 } };

        let results = test_utils.assertErrorSync(search_util.lessThanEqual, [env, 'id', 'state', 'W', false, 20], undefined);
        assert.deepStrictEqual(Object.keys(results).length, 20);
        assert.deepEqual(results, expected);
    });

    it("test lessThanEqual W on string key column limit 20 offseyt 20", () => {
        let expected = { "39": { "state": "AR", "id": 39 }, "90": { "state": "AR", "id": 90 }, "211": { "state": "AR", "id": 211 }, "215": { "state": "AR", "id": 215 }, "270": { "state": "AR", "id": 270 }, "308": { "state": "AR", "id": 308 }, "364": { "state": "AL", "id": 364 }, "437": { "state": "AL", "id": 437 }, "459": { "state": "AL", "id": 459 }, "500": { "state": "AL", "id": 500 }, "524": { "state": "AL", "id": 524 }, "530": { "state": "AL", "id": 530 }, "550": { "state": "AL", "id": 550 }, "553": { "state": "AL", "id": 553 }, "603": { "state": "AL", "id": 603 }, "628": { "state": "AR", "id": 628 }, "643": { "state": "AL", "id": 643 }, "692": { "state": "AL", "id": 692 }, "955": { "state": "AL", "id": 955 }, "984": { "state": "AL", "id": 984 } };

        let results = test_utils.assertErrorSync(search_util.lessThanEqual, [env, 'id', 'state', 'W', false, 20, 20], undefined);
        assert.deepStrictEqual(Object.keys(results).length, 20);
        assert.deepEqual(results, expected);
    });

    it("test lessThanEqual W on string key column reverse limit 20", () => {
        let expected = { "310": { "state": "VT", "id": 310 }, "340": { "state": "VT", "id": 340 }, "382": { "state": "VT", "id": 382 }, "409": { "state": "VT", "id": 409 }, "477": { "state": "VT", "id": 477 }, "505": { "state": "VT", "id": 505 }, "507": { "state": "VT", "id": 507 }, "509": { "state": "VT", "id": 509 }, "566": { "state": "VT", "id": 566 }, "571": { "state": "VT", "id": 571 }, "638": { "state": "VT", "id": 638 }, "650": { "state": "VT", "id": 650 }, "654": { "state": "VT", "id": 654 }, "667": { "state": "VT", "id": 667 }, "788": { "state": "VT", "id": 788 }, "821": { "state": "VT", "id": 821 }, "831": { "state": "VT", "id": 831 }, "835": { "state": "VT", "id": 835 }, "927": { "state": "VT", "id": 927 }, "994": { "state": "VT", "id": 994 } };

        let results = test_utils.assertErrorSync(search_util.lessThanEqual, [env, 'id', 'state', 'W', true, 20], undefined);
        assert.deepStrictEqual(Object.keys(results).length, 20);
        assert.deepEqual(results, expected);
    });

    it("test lessThanEqual W on string key column reverse limit 20 offseyt 20", () => {
        let expected = { "77": { "state": "VT", "id": 77 }, "203": { "state": "VT", "id": 203 }, "234": { "state": "VT", "id": 234 }, "303": { "state": "VT", "id": 303 }, "565": { "state": "VA", "id": 565 }, "588": { "state": "VA", "id": 588 }, "606": { "state": "VA", "id": 606 }, "609": { "state": "VA", "id": 609 }, "622": { "state": "VA", "id": 622 }, "655": { "state": "VA", "id": 655 }, "669": { "state": "VA", "id": 669 }, "678": { "state": "VA", "id": 678 }, "730": { "state": "VA", "id": 730 }, "776": { "state": "VA", "id": 776 }, "778": { "state": "VA", "id": 778 }, "838": { "state": "VA", "id": 838 }, "872": { "state": "VA", "id": 872 }, "926": { "state": "VA", "id": 926 }, "930": { "state": "VA", "id": 930 }, "958": { "state": "VA", "id": 958 } };

        let results = test_utils.assertErrorSync(search_util.lessThanEqual, [env, 'id', 'state', 'W', true, 20, 20], undefined);
        assert.deepStrictEqual(Object.keys(results).length, 20);
        assert.deepEqual(results, expected);
    });
});
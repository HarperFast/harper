type VariedProps @table @export {
	id: ID @primaryKey
	name: String @indexed
}

type SimpleRecord @table {
	id: ID @primaryKey
	name: String @indexed
}
type FourProp @table(audit: "1d", replicated: false) {
	id: ID @primaryKey
	name: String @indexed
	age: Int @indexed
	title: String
	birthday: Date @indexed
}
type Related @table @export {
	id: ID @primaryKey
	name: String @indexed
	otherTable: [SubObject] @relationship(to: relatedId)
}
type ManyToMany @table @export {
	id: ID @primaryKey
	name: String @indexed
	subObjectIds: [ID] @indexed
	subObjects: [SubObject] @relationship(from: "subObjectIds")
}

type HasTimeStampsNoPK @table @export {
	created: Float @createdTime
	updated: Float @updatedTime
}
type SomeObject {
	name: String
}
type SubObject @table(audit: false) {
	id: ID @primaryKey
	subObject: SomeObject
	subArray: [SomeObject]
	any: Any
	relatedId: ID @indexed
	related: Related @relationship(from: "relatedId")
	manyToMany: [ManyToMany] @relationship(to: subObjectIds)
}
type SimpleCache @table {
	id: ID @primaryKey
}

type Query {
	VariedProps: VariedProps
	SimpleRecord: SimpleRecord
	FourProp: FourProp
}

type HasBigInt @table @export {
	id: BigInt @primaryKey
	name: String @indexed
	anotherBigint: BigInt
}

{
	"info": {
		"_postman_id": "b65c7759-61e2-480a-bd02-63e0fa48f132",
		"name": "395 Test Cases",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "395 test cases",
			"item": [
				{
					"name": "Setup",
					"item": [
						{
							"name": "Add Server Cluster Role",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1d1c8cef-288b-4867-9aec-c61d663d9907",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"cluster_user_role_id\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{HDB_PASS}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{HDB_USER}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"add_role\",\n\"role\":\"cluster_role\",\n\"permission\":{\n  \"cluster_user\": true\n  }\n}"
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								}
							},
							"response": []
						},
						{
							"name": "add cluster_user Server",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic c2dvbGRiZXJnOnRlc3QxMjM0IQ=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"add_user\",\n\"role\":\"{{cluster_user_role_id}}\",\n\"username\":\"cluster_user\",\n\"password\":\"Abc1234!!\", \n\"active\":true\n\n}"
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								},
								"description": "Method for adding users.  Users can be assigned roles which provide granular access at a table, operation, and attirbute level.  \n\n<ul>\n<li><b>operation </b> <i>(required) </i> - must always be 'add_user'</li>\n\n<li><b>role </b><i>(required) </i>- id of the role you wish to assign to the user.  See add_role for more detail.  </li>\n\n<li><b>username </b> <i>(required)</i> - username assigned to the user.  It can not be altered after adding the user.  It serves as the hash. </li>\n\n<li><b>password </b> <i>(required) </i>- clear text for password.  HarperDB will encrypt the password upon reciept. </li>\n\n</ul>"
							},
							"response": []
						},
						{
							"name": "Add truck 1 Cluster Role",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1d1c8cef-288b-4867-9aec-c61d663d9907",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"cluster_user_role_id\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{HDB_PASS}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{HDB_USER}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"add_role\",\n\"role\":\"cluster_user\",\n\"permission\":{\n  \"cluster_user\": true\n  }\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_1_HOST}}:{{TRUCK_1_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_1_HOST}}"
									],
									"port": "{{TRUCK_1_HDB_PORT}}"
								}
							},
							"response": []
						},
						{
							"name": "add cluster_user truck_1",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic c2dvbGRiZXJnOnRlc3QxMjM0IQ=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"add_user\",\n\"role\":\"{{cluster_user_role_id}}\",\n\"username\":\"cluster_user\",\n\"password\":\"Abc1234!!\", \n\"active\":true\n\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_1_HOST}}:{{TRUCK_1_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_1_HOST}}"
									],
									"port": "{{TRUCK_1_HDB_PORT}}"
								},
								"description": "Method for adding users.  Users can be assigned roles which provide granular access at a table, operation, and attirbute level.  \n\n<ul>\n<li><b>operation </b> <i>(required) </i> - must always be 'add_user'</li>\n\n<li><b>role </b><i>(required) </i>- id of the role you wish to assign to the user.  See add_role for more detail.  </li>\n\n<li><b>username </b> <i>(required)</i> - username assigned to the user.  It can not be altered after adding the user.  It serves as the hash. </li>\n\n<li><b>password </b> <i>(required) </i>- clear text for password.  HarperDB will encrypt the password upon reciept. </li>\n\n</ul>"
							},
							"response": []
						},
						{
							"name": "Add truck 2 Cluster Role",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1d1c8cef-288b-4867-9aec-c61d663d9907",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"cluster_user_role_id\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{HDB_PASS}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{HDB_USER}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"add_role\",\n\"role\":\"cluster_user\",\n\"permission\":{\n  \"cluster_user\": true\n  }\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_2_HOST}}:{{TRUCK_2_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_2_HOST}}"
									],
									"port": "{{TRUCK_2_HDB_PORT}}"
								}
							},
							"response": []
						},
						{
							"name": "add cluster_user truck_2",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic c2dvbGRiZXJnOnRlc3QxMjM0IQ=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"add_user\",\n\"role\":\"{{cluster_user_role_id}}\",\n\"username\":\"cluster_user\",\n\"password\":\"Abc1234!!\", \n\"active\":true\n\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_2_HOST}}:{{TRUCK_2_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_2_HOST}}"
									],
									"port": "{{TRUCK_2_HDB_PORT}}"
								},
								"description": "Method for adding users.  Users can be assigned roles which provide granular access at a table, operation, and attirbute level.  \n\n<ul>\n<li><b>operation </b> <i>(required) </i> - must always be 'add_user'</li>\n\n<li><b>role </b><i>(required) </i>- id of the role you wish to assign to the user.  See add_role for more detail.  </li>\n\n<li><b>username </b> <i>(required)</i> - username assigned to the user.  It can not be altered after adding the user.  It serves as the hash. </li>\n\n<li><b>password </b> <i>(required) </i>- clear text for password.  HarperDB will encrypt the password upon reciept. </li>\n\n</ul>"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Test Case 1 - Subscribe",
					"item": [
						{
							"name": "Variable setup expect no response",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "3bc3288b-cad7-4b9e-8917-2fc1be382477",
										"exec": [
											"pm.environment.set(\"schema_name\", \"schema_test_case_1\");",
											"pm.environment.set(\"table_name\", \"schema_test_case_1\");",
											"pm.environment.set(\"server_insert_record_id\", 1000);",
											"pm.environment.set(\"truck_1_insert_record_id\", 1100);",
											"pm.environment.set(\"truck_2_insert_record_id\", 1200);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								}
							},
							"response": []
						},
						{
							"name": "create_schema Server",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "98bf379b-989a-4bd3-a39b-199314ab4c9e",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "bc1b74cb-7f6b-469e-ab44-d3cb987b2756",
										"exec": [
											"tests[\"Create Schema\"] = responseBody.has(\"successfully created\");\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"{{schema_name}}\"\n}"
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								},
								"description": "This method is used to create a schema.   A Schema can be thought of as a container of tables that are independent from tables in other schemas. An example might be the Schema dev could have a table called dog. The Schema Prod could also have a table called dog. \n\n<ul>\n\n<li><b>operation</b><i> (required)</i> - must always be create_schema</li>\n\n<li><b>schema</b><i> (required)</i> - name of the schema you are creating</li>\n\n</ul>"
							},
							"response": [
								{
									"name": "Create dev Schema",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"dev\"\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "45",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 16:52:45 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2d-GPJz4Nu7aSF7N/KODFK3o/TNPUw\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"schema dev successfully created\"}"
								}
							]
						},
						{
							"name": "create_table Server",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ca73d8d1-bea4-4e20-93d0-2526fca75ce7",
										"exec": [
											"tests[\"Create Table\"] = responseBody.has(\"successfully created.\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"{{schema_name}}\",\n  \"table\":\"{{table_name}}\",\n  \"hash_attribute\": \"id\"\n}"
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								},
								"description": "This method is used to create a table under the specified schema. \n\n<ul>\n\n<li><b>operation </b><i>(required)</i> - must always be create_table</li>\n\n<li><b>schema</b><i> (required)</i> - name of the schema where you want your table to live </li>\n\n<li><b>table </b><i>(required)</i> - name of the table you are creating</li>\n\n<li><b>hash_attribute</b><i> (required)</i> - hash for the table </li>"
							},
							"response": [
								{
									"name": "Create dev.dog Table",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"dev\",\n  \"table\":\"dog\",\n  \"hash_attribute\": \"id\"\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "49",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:00:40 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"31-2FV9i2eJXU1F9rNuA4B9T7Vu7EA\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"table dev.dog successfully created.\"}"
								}
							]
						},
						{
							"name": "create_schema truck 1",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "98bf379b-989a-4bd3-a39b-199314ab4c9e",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "bc1b74cb-7f6b-469e-ab44-d3cb987b2756",
										"exec": [
											"tests[\"Create Schema\"] = responseBody.has(\"successfully created\");\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"{{schema_name}}\"\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_1_HOST}}:{{TRUCK_1_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_1_HOST}}"
									],
									"port": "{{TRUCK_1_HDB_PORT}}"
								},
								"description": "This method is used to create a schema.   A Schema can be thought of as a container of tables that are independent from tables in other schemas. An example might be the Schema dev could have a table called dog. The Schema Prod could also have a table called dog. \n\n<ul>\n\n<li><b>operation</b><i> (required)</i> - must always be create_schema</li>\n\n<li><b>schema</b><i> (required)</i> - name of the schema you are creating</li>\n\n</ul>"
							},
							"response": [
								{
									"name": "Create dev Schema",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"dev\"\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "45",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 16:52:45 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2d-GPJz4Nu7aSF7N/KODFK3o/TNPUw\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"schema dev successfully created\"}"
								}
							]
						},
						{
							"name": "create_table truck 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ca73d8d1-bea4-4e20-93d0-2526fca75ce7",
										"exec": [
											"tests[\"Create Table\"] = responseBody.has(\"successfully created.\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"{{schema_name}}\",\n  \"table\":\"{{table_name}}\",\n  \"hash_attribute\": \"id\"\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_1_HOST}}:{{TRUCK_1_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_1_HOST}}"
									],
									"port": "{{TRUCK_1_HDB_PORT}}"
								},
								"description": "This method is used to create a table under the specified schema. \n\n<ul>\n\n<li><b>operation </b><i>(required)</i> - must always be create_table</li>\n\n<li><b>schema</b><i> (required)</i> - name of the schema where you want your table to live </li>\n\n<li><b>table </b><i>(required)</i> - name of the table you are creating</li>\n\n<li><b>hash_attribute</b><i> (required)</i> - hash for the table </li>"
							},
							"response": [
								{
									"name": "Create dev.dog Table",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"dev\",\n  \"table\":\"dog\",\n  \"hash_attribute\": \"id\"\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "49",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:00:40 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"31-2FV9i2eJXU1F9rNuA4B9T7Vu7EA\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"table dev.dog successfully created.\"}"
								}
							]
						},
						{
							"name": "create_schema truck 2",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "98bf379b-989a-4bd3-a39b-199314ab4c9e",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "bc1b74cb-7f6b-469e-ab44-d3cb987b2756",
										"exec": [
											"tests[\"Create Schema\"] = responseBody.has(\"successfully created\");\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"{{schema_name}}\"\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_2_HOST}}:{{TRUCK_2_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_2_HOST}}"
									],
									"port": "{{TRUCK_2_HDB_PORT}}"
								},
								"description": "This method is used to create a schema.   A Schema can be thought of as a container of tables that are independent from tables in other schemas. An example might be the Schema dev could have a table called dog. The Schema Prod could also have a table called dog. \n\n<ul>\n\n<li><b>operation</b><i> (required)</i> - must always be create_schema</li>\n\n<li><b>schema</b><i> (required)</i> - name of the schema you are creating</li>\n\n</ul>"
							},
							"response": [
								{
									"name": "Create dev Schema",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"dev\"\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "45",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 16:52:45 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2d-GPJz4Nu7aSF7N/KODFK3o/TNPUw\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"schema dev successfully created\"}"
								}
							]
						},
						{
							"name": "create_table truck 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ca73d8d1-bea4-4e20-93d0-2526fca75ce7",
										"exec": [
											"tests[\"Create Table\"] = responseBody.has(\"successfully created.\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"{{schema_name}}\",\n  \"table\":\"{{table_name}}\",\n  \"hash_attribute\": \"id\"\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_2_HOST}}:{{TRUCK_2_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_2_HOST}}"
									],
									"port": "{{TRUCK_2_HDB_PORT}}"
								},
								"description": "This method is used to create a table under the specified schema. \n\n<ul>\n\n<li><b>operation </b><i>(required)</i> - must always be create_table</li>\n\n<li><b>schema</b><i> (required)</i> - name of the schema where you want your table to live </li>\n\n<li><b>table </b><i>(required)</i> - name of the table you are creating</li>\n\n<li><b>hash_attribute</b><i> (required)</i> - hash for the table </li>"
							},
							"response": [
								{
									"name": "Create dev.dog Table",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"dev\",\n  \"table\":\"dog\",\n  \"hash_attribute\": \"id\"\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "49",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:00:40 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"31-2FV9i2eJXU1F9rNuA4B9T7Vu7EA\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"table dev.dog successfully created.\"}"
								}
							]
						},
						{
							"name": "Add node Truck 1 to Server",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f6cea83-97f3-40be-b1a9-2fa87b2ed813",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "5b6432d9-21dd-4934-be45-3e75391fee05",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{HDB_PASS}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{HDB_USER}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"operation\":\"add_node\",\n\t\"name\":\"{{TRUCK_1_NAME}}\" ,\n\t\"port\": \"{{TRUCK_1_CLUSTER_PORT}}\",\n\t\"host\":\"{{TRUCK_1_HOST}}\",\n\t\"subscriptions\": [\n      {\n        \"channel\":\"{{schema_name}}:{{table_name}}\",\n        \"publish\": false,\n        \"subscribe\": true\n      }\n    ]\n}"
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								}
							},
							"response": []
						},
						{
							"name": "Add node Truck 2 to Server",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f6cea83-97f3-40be-b1a9-2fa87b2ed813",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "5b6432d9-21dd-4934-be45-3e75391fee05",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{HDB_PASS}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{HDB_USER}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"operation\":\"add_node\",\n\t\"name\":\"{{TRUCK_2_NAME}}\" ,\n\t\"port\": \"{{TRUCK_2_CLUSTER_PORT}}\",\n\t\"host\":\"{{TRUCK_2_HOST}}\",\n\t\"subscriptions\": [\n      {\n        \"channel\":\"{{schema_name}}:{{table_name}}\",\n        \"publish\": false,\n        \"subscribe\": true\n      }\n    ]\n}"
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								}
							},
							"response": []
						},
						{
							"name": "insert into truck 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af56a92a-ef50-4c72-b026-a24a7177a233",
										"exec": [
											"tests[\"Write Single Record\"] = responseBody.has(\"successfully wrote 1 records\");",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"{{schema_name}}\",\n\"table\":\"{{table_name}}\",\n\"records\": [\n  {\n    \"name\":\"Insert Test truck 1\",\n    \"breed\":\"Insert Test truck 1\",\n    \"id\":\"{{truck_1_insert_record_id}}\",\n    \"age\":5\n    \n  }\n]\n\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_1_HOST}}:{{TRUCK_1_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_1_HOST}}"
									],
									"port": "{{TRUCK_1_HDB_PORT}}"
								},
								"description": "Method for inserting records. Can be used for a single insert or multiple records.  If a large amount of records are being updated, we recommend using the .CSV load method.  See our article on importing data sets here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115002007573-1Gigabyte-Limit-to-Request-Bodies\n\n<i>NOTE: Hash value of the inserted JSON record MUST be supplied on insert.  </i>\n\n<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'insert'</li>\n\n<li><b>schema</b><i> (required)</i> - schema where the table you are inserting records into lives</li>\n\n<li><b>table</b><i> (required)</i> - table where you want to insert records </li>\n\n<li><b>records</b><i> (required)</i> - array of one or more records for insert</li>\n</ul>"
							},
							"response": [
								{
									"name": "NoSQL Insert into dev.dog",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"dev\",\n\"table\":\"dog\",\n\"records\": [\n  {\n    \"name\":\"Harper\",\n    \"breed\":\"Mutt\",\n    \"id\":\"1\",\n    \"age\":5\n    \n  },\n  {\n    \"name\":\"Penny\",\n    \"breed\":\"Mutt\",\n    \"id\":\"3\",\n    \"age\":5\n    \n  }\n]\n\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "42",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:43:34 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2a-+I7U4Tpdia9SawmsfcyNUq20tzU\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"successfully wrote 2 records\"}"
								}
							]
						},
						{
							"name": "select from server - expect exists",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af56a92a-ef50-4c72-b026-a24a7177a233",
										"exec": [
											"pm.test(\"test 1 returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.length).to.eql(1);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\": \"sql\",\n  \"sql\":\"SELECT * FROM `{{schema_name}}`.`{{table_name}}` where id = {{truck_1_insert_record_id}}\"\n}"
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								},
								"description": "Method for inserting records. Can be used for a single insert or multiple records.  If a large amount of records are being updated, we recommend using the .CSV load method.  See our article on importing data sets here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115002007573-1Gigabyte-Limit-to-Request-Bodies\n\n<i>NOTE: Hash value of the inserted JSON record MUST be supplied on insert.  </i>\n\n<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'insert'</li>\n\n<li><b>schema</b><i> (required)</i> - schema where the table you are inserting records into lives</li>\n\n<li><b>table</b><i> (required)</i> - table where you want to insert records </li>\n\n<li><b>records</b><i> (required)</i> - array of one or more records for insert</li>\n</ul>"
							},
							"response": [
								{
									"name": "NoSQL Insert into dev.dog",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"dev\",\n\"table\":\"dog\",\n\"records\": [\n  {\n    \"name\":\"Harper\",\n    \"breed\":\"Mutt\",\n    \"id\":\"1\",\n    \"age\":5\n    \n  },\n  {\n    \"name\":\"Penny\",\n    \"breed\":\"Mutt\",\n    \"id\":\"3\",\n    \"age\":5\n    \n  }\n]\n\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "42",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:43:34 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2a-+I7U4Tpdia9SawmsfcyNUq20tzU\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"successfully wrote 2 records\"}"
								}
							]
						},
						{
							"name": "select from truck 2 - expect does not exist",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af56a92a-ef50-4c72-b026-a24a7177a233",
										"exec": [
											"pm.test(\"test 0 records returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.length).to.eql(0);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\": \"sql\",\n  \"sql\":\"SELECT * FROM `{{schema_name}}`.`{{table_name}}` where id = {{truck_1_insert_record_id}}\"\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_2_HOST}}:{{TRUCK_2_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_2_HOST}}"
									],
									"port": "{{TRUCK_2_HDB_PORT}}"
								},
								"description": "Method for inserting records. Can be used for a single insert or multiple records.  If a large amount of records are being updated, we recommend using the .CSV load method.  See our article on importing data sets here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115002007573-1Gigabyte-Limit-to-Request-Bodies\n\n<i>NOTE: Hash value of the inserted JSON record MUST be supplied on insert.  </i>\n\n<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'insert'</li>\n\n<li><b>schema</b><i> (required)</i> - schema where the table you are inserting records into lives</li>\n\n<li><b>table</b><i> (required)</i> - table where you want to insert records </li>\n\n<li><b>records</b><i> (required)</i> - array of one or more records for insert</li>\n</ul>"
							},
							"response": [
								{
									"name": "NoSQL Insert into dev.dog",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"dev\",\n\"table\":\"dog\",\n\"records\": [\n  {\n    \"name\":\"Harper\",\n    \"breed\":\"Mutt\",\n    \"id\":\"1\",\n    \"age\":5\n    \n  },\n  {\n    \"name\":\"Penny\",\n    \"breed\":\"Mutt\",\n    \"id\":\"3\",\n    \"age\":5\n    \n  }\n]\n\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "42",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:43:34 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2a-+I7U4Tpdia9SawmsfcyNUq20tzU\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"successfully wrote 2 records\"}"
								}
							]
						},
						{
							"name": "insert into truck 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af56a92a-ef50-4c72-b026-a24a7177a233",
										"exec": [
											"tests[\"Write Single Record\"] = responseBody.has(\"successfully wrote 1 records\");",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"{{schema_name}}\",\n\"table\":\"{{table_name}}\",\n\"records\": [\n  {\n    \"name\":\"Insert Test truck 2\",\n    \"breed\":\"Insert Test truck 2\",\n    \"id\":\"1200\",\n    \"age\":5\n    \n  }\n]\n\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{TRUCK_2_HOST}}:{{TRUCK_2_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_2_HOST}}"
									],
									"port": "{{TRUCK_2_HDB_PORT}}"
								},
								"description": "Method for inserting records. Can be used for a single insert or multiple records.  If a large amount of records are being updated, we recommend using the .CSV load method.  See our article on importing data sets here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115002007573-1Gigabyte-Limit-to-Request-Bodies\n\n<i>NOTE: Hash value of the inserted JSON record MUST be supplied on insert.  </i>\n\n<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'insert'</li>\n\n<li><b>schema</b><i> (required)</i> - schema where the table you are inserting records into lives</li>\n\n<li><b>table</b><i> (required)</i> - table where you want to insert records </li>\n\n<li><b>records</b><i> (required)</i> - array of one or more records for insert</li>\n</ul>"
							},
							"response": [
								{
									"name": "NoSQL Insert into dev.dog",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"dev\",\n\"table\":\"dog\",\n\"records\": [\n  {\n    \"name\":\"Harper\",\n    \"breed\":\"Mutt\",\n    \"id\":\"1\",\n    \"age\":5\n    \n  },\n  {\n    \"name\":\"Penny\",\n    \"breed\":\"Mutt\",\n    \"id\":\"3\",\n    \"age\":5\n    \n  }\n]\n\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "42",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:43:34 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2a-+I7U4Tpdia9SawmsfcyNUq20tzU\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"successfully wrote 2 records\"}"
								}
							]
						},
						{
							"name": "select from server - expect exists",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af56a92a-ef50-4c72-b026-a24a7177a233",
										"exec": [
											"pm.test(\"test 1 record returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.length).to.eql(1);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\": \"sql\",\n  \"sql\":\"SELECT * FROM `{{schema_name}}`.`{{table_name}}` where id = {{truck_2_insert_record_id}}\"\n}"
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								},
								"description": "Method for inserting records. Can be used for a single insert or multiple records.  If a large amount of records are being updated, we recommend using the .CSV load method.  See our article on importing data sets here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115002007573-1Gigabyte-Limit-to-Request-Bodies\n\n<i>NOTE: Hash value of the inserted JSON record MUST be supplied on insert.  </i>\n\n<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'insert'</li>\n\n<li><b>schema</b><i> (required)</i> - schema where the table you are inserting records into lives</li>\n\n<li><b>table</b><i> (required)</i> - table where you want to insert records </li>\n\n<li><b>records</b><i> (required)</i> - array of one or more records for insert</li>\n</ul>"
							},
							"response": [
								{
									"name": "NoSQL Insert into dev.dog",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"dev\",\n\"table\":\"dog\",\n\"records\": [\n  {\n    \"name\":\"Harper\",\n    \"breed\":\"Mutt\",\n    \"id\":\"1\",\n    \"age\":5\n    \n  },\n  {\n    \"name\":\"Penny\",\n    \"breed\":\"Mutt\",\n    \"id\":\"3\",\n    \"age\":5\n    \n  }\n]\n\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "42",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:43:34 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2a-+I7U4Tpdia9SawmsfcyNUq20tzU\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"successfully wrote 2 records\"}"
								}
							]
						},
						{
							"name": "select from truck 1 - expect does not exist",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af56a92a-ef50-4c72-b026-a24a7177a233",
										"exec": [
											"pm.test(\"test 0 records returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.length).to.eql(0);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\": \"sql\",\n  \"sql\":\"SELECT * FROM `{{schema_name}}`.`{{table_name}}` where id = {{truck_2_insert_record_id}}\"\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_1_HOST}}:{{TRUCK_1_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_1_HOST}}"
									],
									"port": "{{TRUCK_1_HDB_PORT}}"
								},
								"description": "Method for inserting records. Can be used for a single insert or multiple records.  If a large amount of records are being updated, we recommend using the .CSV load method.  See our article on importing data sets here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115002007573-1Gigabyte-Limit-to-Request-Bodies\n\n<i>NOTE: Hash value of the inserted JSON record MUST be supplied on insert.  </i>\n\n<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'insert'</li>\n\n<li><b>schema</b><i> (required)</i> - schema where the table you are inserting records into lives</li>\n\n<li><b>table</b><i> (required)</i> - table where you want to insert records </li>\n\n<li><b>records</b><i> (required)</i> - array of one or more records for insert</li>\n</ul>"
							},
							"response": [
								{
									"name": "NoSQL Insert into dev.dog",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"dev\",\n\"table\":\"dog\",\n\"records\": [\n  {\n    \"name\":\"Harper\",\n    \"breed\":\"Mutt\",\n    \"id\":\"1\",\n    \"age\":5\n    \n  },\n  {\n    \"name\":\"Penny\",\n    \"breed\":\"Mutt\",\n    \"id\":\"3\",\n    \"age\":5\n    \n  }\n]\n\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "42",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:43:34 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2a-+I7U4Tpdia9SawmsfcyNUq20tzU\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"successfully wrote 2 records\"}"
								}
							]
						},
						{
							"name": "insert into server",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af56a92a-ef50-4c72-b026-a24a7177a233",
										"exec": [
											"tests[\"Write Single Record\"] = responseBody.has(\"successfully wrote 1 records\");",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"{{schema_name}}\",\n\"table\":\"{{table_name}}\",\n\"records\": [\n  {\n    \"name\":\"Insert Test Server\",\n    \"breed\":\"Insert Test Server\",\n    \"id\":\"{{server_insert_record_id}}\",\n    \"age\":5\n    \n  }\n]\n\n}"
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								},
								"description": "Method for inserting records. Can be used for a single insert or multiple records.  If a large amount of records are being updated, we recommend using the .CSV load method.  See our article on importing data sets here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115002007573-1Gigabyte-Limit-to-Request-Bodies\n\n<i>NOTE: Hash value of the inserted JSON record MUST be supplied on insert.  </i>\n\n<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'insert'</li>\n\n<li><b>schema</b><i> (required)</i> - schema where the table you are inserting records into lives</li>\n\n<li><b>table</b><i> (required)</i> - table where you want to insert records </li>\n\n<li><b>records</b><i> (required)</i> - array of one or more records for insert</li>\n</ul>"
							},
							"response": [
								{
									"name": "NoSQL Insert into dev.dog",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"dev\",\n\"table\":\"dog\",\n\"records\": [\n  {\n    \"name\":\"Harper\",\n    \"breed\":\"Mutt\",\n    \"id\":\"1\",\n    \"age\":5\n    \n  },\n  {\n    \"name\":\"Penny\",\n    \"breed\":\"Mutt\",\n    \"id\":\"3\",\n    \"age\":5\n    \n  }\n]\n\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "42",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:43:34 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2a-+I7U4Tpdia9SawmsfcyNUq20tzU\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"successfully wrote 2 records\"}"
								}
							]
						},
						{
							"name": "select from server - expect exists",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af56a92a-ef50-4c72-b026-a24a7177a233",
										"exec": [
											"pm.test(\"test 1 records returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.length).to.eql(1);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\": \"sql\",\n  \"sql\":\"SELECT * FROM `{{schema_name}}`.`{{table_name}}` where id = {{server_insert_record_id}}\"\n}"
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								},
								"description": "Method for inserting records. Can be used for a single insert or multiple records.  If a large amount of records are being updated, we recommend using the .CSV load method.  See our article on importing data sets here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115002007573-1Gigabyte-Limit-to-Request-Bodies\n\n<i>NOTE: Hash value of the inserted JSON record MUST be supplied on insert.  </i>\n\n<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'insert'</li>\n\n<li><b>schema</b><i> (required)</i> - schema where the table you are inserting records into lives</li>\n\n<li><b>table</b><i> (required)</i> - table where you want to insert records </li>\n\n<li><b>records</b><i> (required)</i> - array of one or more records for insert</li>\n</ul>"
							},
							"response": [
								{
									"name": "NoSQL Insert into dev.dog",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"dev\",\n\"table\":\"dog\",\n\"records\": [\n  {\n    \"name\":\"Harper\",\n    \"breed\":\"Mutt\",\n    \"id\":\"1\",\n    \"age\":5\n    \n  },\n  {\n    \"name\":\"Penny\",\n    \"breed\":\"Mutt\",\n    \"id\":\"3\",\n    \"age\":5\n    \n  }\n]\n\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "42",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:43:34 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2a-+I7U4Tpdia9SawmsfcyNUq20tzU\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"successfully wrote 2 records\"}"
								}
							]
						},
						{
							"name": "select from truck 1 - expect does not exist",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af56a92a-ef50-4c72-b026-a24a7177a233",
										"exec": [
											"pm.test(\"test 0 records returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.length).to.eql(0);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\": \"sql\",\n  \"sql\":\"SELECT * FROM `{{schema_name}}`.`{{table_name}}` where id = {{server_insert_record_id}}\"\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_1_HOST}}:{{TRUCK_1_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_1_HOST}}"
									],
									"port": "{{TRUCK_1_HDB_PORT}}"
								},
								"description": "Method for inserting records. Can be used for a single insert or multiple records.  If a large amount of records are being updated, we recommend using the .CSV load method.  See our article on importing data sets here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115002007573-1Gigabyte-Limit-to-Request-Bodies\n\n<i>NOTE: Hash value of the inserted JSON record MUST be supplied on insert.  </i>\n\n<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'insert'</li>\n\n<li><b>schema</b><i> (required)</i> - schema where the table you are inserting records into lives</li>\n\n<li><b>table</b><i> (required)</i> - table where you want to insert records </li>\n\n<li><b>records</b><i> (required)</i> - array of one or more records for insert</li>\n</ul>"
							},
							"response": [
								{
									"name": "NoSQL Insert into dev.dog",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"dev\",\n\"table\":\"dog\",\n\"records\": [\n  {\n    \"name\":\"Harper\",\n    \"breed\":\"Mutt\",\n    \"id\":\"1\",\n    \"age\":5\n    \n  },\n  {\n    \"name\":\"Penny\",\n    \"breed\":\"Mutt\",\n    \"id\":\"3\",\n    \"age\":5\n    \n  }\n]\n\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "42",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:43:34 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2a-+I7U4Tpdia9SawmsfcyNUq20tzU\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"successfully wrote 2 records\"}"
								}
							]
						},
						{
							"name": "select from truck 2 - expect does not exist",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af56a92a-ef50-4c72-b026-a24a7177a233",
										"exec": [
											"pm.test(\"test 0 records returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.length).to.eql(0);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\": \"sql\",\n  \"sql\":\"SELECT * FROM `{{schema_name}}`.`{{table_name}}` where id = {{server_insert_record_id}}\"\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_2_HOST}}:{{TRUCK_2_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_2_HOST}}"
									],
									"port": "{{TRUCK_2_HDB_PORT}}"
								},
								"description": "Method for inserting records. Can be used for a single insert or multiple records.  If a large amount of records are being updated, we recommend using the .CSV load method.  See our article on importing data sets here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115002007573-1Gigabyte-Limit-to-Request-Bodies\n\n<i>NOTE: Hash value of the inserted JSON record MUST be supplied on insert.  </i>\n\n<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'insert'</li>\n\n<li><b>schema</b><i> (required)</i> - schema where the table you are inserting records into lives</li>\n\n<li><b>table</b><i> (required)</i> - table where you want to insert records </li>\n\n<li><b>records</b><i> (required)</i> - array of one or more records for insert</li>\n</ul>"
							},
							"response": [
								{
									"name": "NoSQL Insert into dev.dog",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"dev\",\n\"table\":\"dog\",\n\"records\": [\n  {\n    \"name\":\"Harper\",\n    \"breed\":\"Mutt\",\n    \"id\":\"1\",\n    \"age\":5\n    \n  },\n  {\n    \"name\":\"Penny\",\n    \"breed\":\"Mutt\",\n    \"id\":\"3\",\n    \"age\":5\n    \n  }\n]\n\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "42",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:43:34 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2a-+I7U4Tpdia9SawmsfcyNUq20tzU\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"successfully wrote 2 records\"}"
								}
							]
						},
						{
							"name": "create_schema non sub",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "98bf379b-989a-4bd3-a39b-199314ab4c9e",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "bc1b74cb-7f6b-469e-ab44-d3cb987b2756",
										"exec": [
											"tests[\"Create Schema\"] = responseBody.has(\"successfully created\");\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"{{schema_name}}\"\n}"
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								},
								"description": "This method is used to create a schema.   A Schema can be thought of as a container of tables that are independent from tables in other schemas. An example might be the Schema dev could have a table called dog. The Schema Prod could also have a table called dog. \n\n<ul>\n\n<li><b>operation</b><i> (required)</i> - must always be create_schema</li>\n\n<li><b>schema</b><i> (required)</i> - name of the schema you are creating</li>\n\n</ul>"
							},
							"response": [
								{
									"name": "Create dev Schema",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"dev\"\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "45",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 16:52:45 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2d-GPJz4Nu7aSF7N/KODFK3o/TNPUw\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"schema dev successfully created\"}"
								}
							]
						},
						{
							"name": "update into truck 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af56a92a-ef50-4c72-b026-a24a7177a233",
										"exec": [
											"pm.test(\"test 1 update performed\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[0].update_hashes.length).to.eql(0);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"update\",\n\"schema\":\"{{schema_name}}\",\n\"table\":\"{{table_name}}\",\n\"records\": [\n  {\n    \"name\":\"Update Test truck 1\",\n    \"breed\":\"Update Test truck 1\",\n    \"id\":\"{{truck_1_insert_record_id}}\"\n  }\n]\n\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{TRUCK_1_HOST}}:{{TRUCK_1_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_1_HOST}}"
									],
									"port": "{{TRUCK_1_HDB_PORT}}"
								},
								"description": "Method for inserting records. Can be used for a single insert or multiple records.  If a large amount of records are being updated, we recommend using the .CSV load method.  See our article on importing data sets here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115002007573-1Gigabyte-Limit-to-Request-Bodies\n\n<i>NOTE: Hash value of the inserted JSON record MUST be supplied on insert.  </i>\n\n<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'insert'</li>\n\n<li><b>schema</b><i> (required)</i> - schema where the table you are inserting records into lives</li>\n\n<li><b>table</b><i> (required)</i> - table where you want to insert records </li>\n\n<li><b>records</b><i> (required)</i> - array of one or more records for insert</li>\n</ul>"
							},
							"response": [
								{
									"name": "NoSQL Insert into dev.dog",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"dev\",\n\"table\":\"dog\",\n\"records\": [\n  {\n    \"name\":\"Harper\",\n    \"breed\":\"Mutt\",\n    \"id\":\"1\",\n    \"age\":5\n    \n  },\n  {\n    \"name\":\"Penny\",\n    \"breed\":\"Mutt\",\n    \"id\":\"3\",\n    \"age\":5\n    \n  }\n]\n\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "42",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:43:34 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2a-+I7U4Tpdia9SawmsfcyNUq20tzU\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"successfully wrote 2 records\"}"
								}
							]
						},
						{
							"name": "select from server - expect updated data",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af56a92a-ef50-4c72-b026-a24a7177a233",
										"exec": [
											"pm.test(\"test 1 updated record returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.length).to.eql(1);",
											"    pm.expect(jsonData[0].name).to.include('Update');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\": \"sql\",\n  \"sql\":\"SELECT * FROM `{{schema_name}}`.`{{table_name}}` where id = {{truck_1_insert_record_id}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								},
								"description": "Method for inserting records. Can be used for a single insert or multiple records.  If a large amount of records are being updated, we recommend using the .CSV load method.  See our article on importing data sets here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115002007573-1Gigabyte-Limit-to-Request-Bodies\n\n<i>NOTE: Hash value of the inserted JSON record MUST be supplied on insert.  </i>\n\n<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'insert'</li>\n\n<li><b>schema</b><i> (required)</i> - schema where the table you are inserting records into lives</li>\n\n<li><b>table</b><i> (required)</i> - table where you want to insert records </li>\n\n<li><b>records</b><i> (required)</i> - array of one or more records for insert</li>\n</ul>"
							},
							"response": [
								{
									"name": "NoSQL Insert into dev.dog",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"dev\",\n\"table\":\"dog\",\n\"records\": [\n  {\n    \"name\":\"Harper\",\n    \"breed\":\"Mutt\",\n    \"id\":\"1\",\n    \"age\":5\n    \n  },\n  {\n    \"name\":\"Penny\",\n    \"breed\":\"Mutt\",\n    \"id\":\"3\",\n    \"age\":5\n    \n  }\n]\n\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "42",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:43:34 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2a-+I7U4Tpdia9SawmsfcyNUq20tzU\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"successfully wrote 2 records\"}"
								}
							]
						},
						{
							"name": "select from truck 2 - expect does not exist",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af56a92a-ef50-4c72-b026-a24a7177a233",
										"exec": [
											"pm.test(\"test 0 records returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.length).to.eql(0);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\": \"sql\",\n  \"sql\":\"SELECT * FROM `{{schema_name}}`.`{{table_name}}` where id = {{truck_1_insert_record_id}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{TRUCK_2_HOST}}:{{TRUCK_2_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_2_HOST}}"
									],
									"port": "{{TRUCK_2_HDB_PORT}}"
								},
								"description": "Method for inserting records. Can be used for a single insert or multiple records.  If a large amount of records are being updated, we recommend using the .CSV load method.  See our article on importing data sets here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115002007573-1Gigabyte-Limit-to-Request-Bodies\n\n<i>NOTE: Hash value of the inserted JSON record MUST be supplied on insert.  </i>\n\n<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'insert'</li>\n\n<li><b>schema</b><i> (required)</i> - schema where the table you are inserting records into lives</li>\n\n<li><b>table</b><i> (required)</i> - table where you want to insert records </li>\n\n<li><b>records</b><i> (required)</i> - array of one or more records for insert</li>\n</ul>"
							},
							"response": [
								{
									"name": "NoSQL Insert into dev.dog",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"dev\",\n\"table\":\"dog\",\n\"records\": [\n  {\n    \"name\":\"Harper\",\n    \"breed\":\"Mutt\",\n    \"id\":\"1\",\n    \"age\":5\n    \n  },\n  {\n    \"name\":\"Penny\",\n    \"breed\":\"Mutt\",\n    \"id\":\"3\",\n    \"age\":5\n    \n  }\n]\n\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "42",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:43:34 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2a-+I7U4Tpdia9SawmsfcyNUq20tzU\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"successfully wrote 2 records\"}"
								}
							]
						},
						{
							"name": "update into truck 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af56a92a-ef50-4c72-b026-a24a7177a233",
										"exec": [
											"pm.test(\"test 1 update performed\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[0].update_hashes.length).to.eql(1);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"update\",\n\"schema\":\"{{schema_name}}\",\n\"table\":\"{{table_name}}\",\n\"records\": [\n  {\n    \"name\":\"Update Test truck 2\",\n    \"breed\":\"Update Test truck 2\",\n    \"id\":\"{{truck_2_insert_record_id}}\"\n  }\n]\n\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{TRUCK_2_HOST}}:{{TRUCK_2_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_2_HOST}}"
									],
									"port": "{{TRUCK_2_HDB_PORT}}"
								},
								"description": "Method for inserting records. Can be used for a single insert or multiple records.  If a large amount of records are being updated, we recommend using the .CSV load method.  See our article on importing data sets here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115002007573-1Gigabyte-Limit-to-Request-Bodies\n\n<i>NOTE: Hash value of the inserted JSON record MUST be supplied on insert.  </i>\n\n<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'insert'</li>\n\n<li><b>schema</b><i> (required)</i> - schema where the table you are inserting records into lives</li>\n\n<li><b>table</b><i> (required)</i> - table where you want to insert records </li>\n\n<li><b>records</b><i> (required)</i> - array of one or more records for insert</li>\n</ul>"
							},
							"response": [
								{
									"name": "NoSQL Insert into dev.dog",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"dev\",\n\"table\":\"dog\",\n\"records\": [\n  {\n    \"name\":\"Harper\",\n    \"breed\":\"Mutt\",\n    \"id\":\"1\",\n    \"age\":5\n    \n  },\n  {\n    \"name\":\"Penny\",\n    \"breed\":\"Mutt\",\n    \"id\":\"3\",\n    \"age\":5\n    \n  }\n]\n\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "42",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:43:34 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2a-+I7U4Tpdia9SawmsfcyNUq20tzU\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"successfully wrote 2 records\"}"
								}
							]
						},
						{
							"name": "select from server - expect updated data Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af56a92a-ef50-4c72-b026-a24a7177a233",
										"exec": [
											"pm.test(\"test 1 returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.length).to.eql(1);",
											"    pm.expect(jsonData[0].name).to.include('Update');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\": \"sql\",\n  \"sql\":\"SELECT * FROM `{{schema_name}}`.`{{table_name}}` where id = {{truck_2_insert_record_id}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								},
								"description": "Method for inserting records. Can be used for a single insert or multiple records.  If a large amount of records are being updated, we recommend using the .CSV load method.  See our article on importing data sets here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115002007573-1Gigabyte-Limit-to-Request-Bodies\n\n<i>NOTE: Hash value of the inserted JSON record MUST be supplied on insert.  </i>\n\n<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'insert'</li>\n\n<li><b>schema</b><i> (required)</i> - schema where the table you are inserting records into lives</li>\n\n<li><b>table</b><i> (required)</i> - table where you want to insert records </li>\n\n<li><b>records</b><i> (required)</i> - array of one or more records for insert</li>\n</ul>"
							},
							"response": [
								{
									"name": "NoSQL Insert into dev.dog",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"dev\",\n\"table\":\"dog\",\n\"records\": [\n  {\n    \"name\":\"Harper\",\n    \"breed\":\"Mutt\",\n    \"id\":\"1\",\n    \"age\":5\n    \n  },\n  {\n    \"name\":\"Penny\",\n    \"breed\":\"Mutt\",\n    \"id\":\"3\",\n    \"age\":5\n    \n  }\n]\n\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "42",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:43:34 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2a-+I7U4Tpdia9SawmsfcyNUq20tzU\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"successfully wrote 2 records\"}"
								}
							]
						},
						{
							"name": "select from truck 1 - expect does not exist Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af56a92a-ef50-4c72-b026-a24a7177a233",
										"exec": [
											"pm.test(\"test 0 records returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.length).to.eql(0);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\": \"sql\",\n  \"sql\":\"SELECT * FROM `{{schema_name}}`.`{{table_name}}` where id = {{truck_2_insert_record_id}}\"\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_1_HOST}}:{{TRUCK_1_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_1_HOST}}"
									],
									"port": "{{TRUCK_1_HDB_PORT}}"
								},
								"description": "Method for inserting records. Can be used for a single insert or multiple records.  If a large amount of records are being updated, we recommend using the .CSV load method.  See our article on importing data sets here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115002007573-1Gigabyte-Limit-to-Request-Bodies\n\n<i>NOTE: Hash value of the inserted JSON record MUST be supplied on insert.  </i>\n\n<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'insert'</li>\n\n<li><b>schema</b><i> (required)</i> - schema where the table you are inserting records into lives</li>\n\n<li><b>table</b><i> (required)</i> - table where you want to insert records </li>\n\n<li><b>records</b><i> (required)</i> - array of one or more records for insert</li>\n</ul>"
							},
							"response": [
								{
									"name": "NoSQL Insert into dev.dog",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"dev\",\n\"table\":\"dog\",\n\"records\": [\n  {\n    \"name\":\"Harper\",\n    \"breed\":\"Mutt\",\n    \"id\":\"1\",\n    \"age\":5\n    \n  },\n  {\n    \"name\":\"Penny\",\n    \"breed\":\"Mutt\",\n    \"id\":\"3\",\n    \"age\":5\n    \n  }\n]\n\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "42",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:43:34 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2a-+I7U4Tpdia9SawmsfcyNUq20tzU\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"successfully wrote 2 records\"}"
								}
							]
						},
						{
							"name": "Update into server",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af56a92a-ef50-4c72-b026-a24a7177a233",
										"exec": [
											"pm.test(\"test 1 update performed\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[0].update_hashes.length).to.eql(1);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"update\",\n\"schema\":\"{{schema_name}}\",\n\"table\":\"{{table_name}}\",\n\"records\": [\n  {\n    \"name\":\"Update Test Server\",\n    \"breed\":\"Update Test Server\",\n    \"id\":\"{{server_insert_record_id}}\"\n  }\n]\n\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								},
								"description": "Method for inserting records. Can be used for a single insert or multiple records.  If a large amount of records are being updated, we recommend using the .CSV load method.  See our article on importing data sets here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115002007573-1Gigabyte-Limit-to-Request-Bodies\n\n<i>NOTE: Hash value of the inserted JSON record MUST be supplied on insert.  </i>\n\n<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'insert'</li>\n\n<li><b>schema</b><i> (required)</i> - schema where the table you are inserting records into lives</li>\n\n<li><b>table</b><i> (required)</i> - table where you want to insert records </li>\n\n<li><b>records</b><i> (required)</i> - array of one or more records for insert</li>\n</ul>"
							},
							"response": [
								{
									"name": "NoSQL Insert into dev.dog",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"dev\",\n\"table\":\"dog\",\n\"records\": [\n  {\n    \"name\":\"Harper\",\n    \"breed\":\"Mutt\",\n    \"id\":\"1\",\n    \"age\":5\n    \n  },\n  {\n    \"name\":\"Penny\",\n    \"breed\":\"Mutt\",\n    \"id\":\"3\",\n    \"age\":5\n    \n  }\n]\n\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "42",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:43:34 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2a-+I7U4Tpdia9SawmsfcyNUq20tzU\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"successfully wrote 2 records\"}"
								}
							]
						},
						{
							"name": "select from truck 1 - expect does not exist",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af56a92a-ef50-4c72-b026-a24a7177a233",
										"exec": [
											"pm.test(\"test 0 records returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.length).to.eql(0);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\": \"sql\",\n  \"sql\":\"SELECT * FROM `{{schema_name}}`.`{{table_name}}` where id = {{server_insert_record_id}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{TRUCK_1_HOST}}:{{TRUCK_1_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_1_HOST}}"
									],
									"port": "{{TRUCK_1_HDB_PORT}}"
								},
								"description": "Method for inserting records. Can be used for a single insert or multiple records.  If a large amount of records are being updated, we recommend using the .CSV load method.  See our article on importing data sets here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115002007573-1Gigabyte-Limit-to-Request-Bodies\n\n<i>NOTE: Hash value of the inserted JSON record MUST be supplied on insert.  </i>\n\n<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'insert'</li>\n\n<li><b>schema</b><i> (required)</i> - schema where the table you are inserting records into lives</li>\n\n<li><b>table</b><i> (required)</i> - table where you want to insert records </li>\n\n<li><b>records</b><i> (required)</i> - array of one or more records for insert</li>\n</ul>"
							},
							"response": [
								{
									"name": "NoSQL Insert into dev.dog",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"dev\",\n\"table\":\"dog\",\n\"records\": [\n  {\n    \"name\":\"Harper\",\n    \"breed\":\"Mutt\",\n    \"id\":\"1\",\n    \"age\":5\n    \n  },\n  {\n    \"name\":\"Penny\",\n    \"breed\":\"Mutt\",\n    \"id\":\"3\",\n    \"age\":5\n    \n  }\n]\n\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "42",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:43:34 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2a-+I7U4Tpdia9SawmsfcyNUq20tzU\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"successfully wrote 2 records\"}"
								}
							]
						},
						{
							"name": "select from truck 2 - expect does not exist",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af56a92a-ef50-4c72-b026-a24a7177a233",
										"exec": [
											"pm.test(\"test 0 returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.length).to.eql(0);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\": \"sql\",\n  \"sql\":\"SELECT * FROM `{{schema_name}}`.`{{table_name}}` where id = {{truck_1_insert_record_id}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{TRUCK_2_HOST}}:{{TRUCK_2_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_2_HOST}}"
									],
									"port": "{{TRUCK_2_HDB_PORT}}"
								},
								"description": "Method for inserting records. Can be used for a single insert or multiple records.  If a large amount of records are being updated, we recommend using the .CSV load method.  See our article on importing data sets here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115002007573-1Gigabyte-Limit-to-Request-Bodies\n\n<i>NOTE: Hash value of the inserted JSON record MUST be supplied on insert.  </i>\n\n<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'insert'</li>\n\n<li><b>schema</b><i> (required)</i> - schema where the table you are inserting records into lives</li>\n\n<li><b>table</b><i> (required)</i> - table where you want to insert records </li>\n\n<li><b>records</b><i> (required)</i> - array of one or more records for insert</li>\n</ul>"
							},
							"response": [
								{
									"name": "NoSQL Insert into dev.dog",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"dev\",\n\"table\":\"dog\",\n\"records\": [\n  {\n    \"name\":\"Harper\",\n    \"breed\":\"Mutt\",\n    \"id\":\"1\",\n    \"age\":5\n    \n  },\n  {\n    \"name\":\"Penny\",\n    \"breed\":\"Mutt\",\n    \"id\":\"3\",\n    \"age\":5\n    \n  }\n]\n\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "42",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:43:34 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2a-+I7U4Tpdia9SawmsfcyNUq20tzU\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"successfully wrote 2 records\"}"
								}
							]
						},
						{
							"name": "delete from truck 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af56a92a-ef50-4c72-b026-a24a7177a233",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"SQL delete successful reponse\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"records successfully deleted\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"delete\",\n\"schema\":\"{{schema_name}}\",\n\"table\":\"{{table_name}}\",\n\"hash_values\": [{{truck_1_insert_record_id}}]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{TRUCK_1_HOST}}:{{TRUCK_1_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_1_HOST}}"
									],
									"port": "{{TRUCK_1_HDB_PORT}}"
								},
								"description": "Method for inserting records. Can be used for a single insert or multiple records.  If a large amount of records are being updated, we recommend using the .CSV load method.  See our article on importing data sets here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115002007573-1Gigabyte-Limit-to-Request-Bodies\n\n<i>NOTE: Hash value of the inserted JSON record MUST be supplied on insert.  </i>\n\n<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'insert'</li>\n\n<li><b>schema</b><i> (required)</i> - schema where the table you are inserting records into lives</li>\n\n<li><b>table</b><i> (required)</i> - table where you want to insert records </li>\n\n<li><b>records</b><i> (required)</i> - array of one or more records for insert</li>\n</ul>"
							},
							"response": [
								{
									"name": "NoSQL Insert into dev.dog",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"dev\",\n\"table\":\"dog\",\n\"records\": [\n  {\n    \"name\":\"Harper\",\n    \"breed\":\"Mutt\",\n    \"id\":\"1\",\n    \"age\":5\n    \n  },\n  {\n    \"name\":\"Penny\",\n    \"breed\":\"Mutt\",\n    \"id\":\"3\",\n    \"age\":5\n    \n  }\n]\n\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "42",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:43:34 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2a-+I7U4Tpdia9SawmsfcyNUq20tzU\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"successfully wrote 2 records\"}"
								}
							]
						},
						{
							"name": "select from truck 1 - expect deleted",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af56a92a-ef50-4c72-b026-a24a7177a233",
										"exec": [
											"pm.test(\"test 0 records returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.length).to.eql(0);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\": \"sql\",\n  \"sql\":\"SELECT * FROM `{{schema_name}}`.`{{table_name}}` where id = {{truck_1_insert_record_id}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{TRUCK_1_HOST}}:{{TRUCK_1_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_1_HOST}}"
									],
									"port": "{{TRUCK_1_HDB_PORT}}"
								},
								"description": "Method for inserting records. Can be used for a single insert or multiple records.  If a large amount of records are being updated, we recommend using the .CSV load method.  See our article on importing data sets here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115002007573-1Gigabyte-Limit-to-Request-Bodies\n\n<i>NOTE: Hash value of the inserted JSON record MUST be supplied on insert.  </i>\n\n<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'insert'</li>\n\n<li><b>schema</b><i> (required)</i> - schema where the table you are inserting records into lives</li>\n\n<li><b>table</b><i> (required)</i> - table where you want to insert records </li>\n\n<li><b>records</b><i> (required)</i> - array of one or more records for insert</li>\n</ul>"
							},
							"response": [
								{
									"name": "NoSQL Insert into dev.dog",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"dev\",\n\"table\":\"dog\",\n\"records\": [\n  {\n    \"name\":\"Harper\",\n    \"breed\":\"Mutt\",\n    \"id\":\"1\",\n    \"age\":5\n    \n  },\n  {\n    \"name\":\"Penny\",\n    \"breed\":\"Mutt\",\n    \"id\":\"3\",\n    \"age\":5\n    \n  }\n]\n\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "42",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:43:34 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2a-+I7U4Tpdia9SawmsfcyNUq20tzU\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"successfully wrote 2 records\"}"
								}
							]
						},
						{
							"name": "select from server - expect deleted",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af56a92a-ef50-4c72-b026-a24a7177a233",
										"exec": [
											"pm.test(\"test 0 returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.length).to.eql(0);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\": \"sql\",\n  \"sql\":\"SELECT * FROM `{{schema_name}}`.`{{table_name}}` where id = {{truck_1_insert_record_id}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								},
								"description": "Method for inserting records. Can be used for a single insert or multiple records.  If a large amount of records are being updated, we recommend using the .CSV load method.  See our article on importing data sets here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115002007573-1Gigabyte-Limit-to-Request-Bodies\n\n<i>NOTE: Hash value of the inserted JSON record MUST be supplied on insert.  </i>\n\n<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'insert'</li>\n\n<li><b>schema</b><i> (required)</i> - schema where the table you are inserting records into lives</li>\n\n<li><b>table</b><i> (required)</i> - table where you want to insert records </li>\n\n<li><b>records</b><i> (required)</i> - array of one or more records for insert</li>\n</ul>"
							},
							"response": [
								{
									"name": "NoSQL Insert into dev.dog",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"dev\",\n\"table\":\"dog\",\n\"records\": [\n  {\n    \"name\":\"Harper\",\n    \"breed\":\"Mutt\",\n    \"id\":\"1\",\n    \"age\":5\n    \n  },\n  {\n    \"name\":\"Penny\",\n    \"breed\":\"Mutt\",\n    \"id\":\"3\",\n    \"age\":5\n    \n  }\n]\n\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "42",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:43:34 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2a-+I7U4Tpdia9SawmsfcyNUq20tzU\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"successfully wrote 2 records\"}"
								}
							]
						},
						{
							"name": "select from truck 2 - expect does not exist",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af56a92a-ef50-4c72-b026-a24a7177a233",
										"exec": [
											"pm.test(\"test 0 records returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.length).to.eql(0);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\": \"sql\",\n  \"sql\":\"SELECT * FROM `{{schema_name}}`.`{{table_name}}` where id = {{truck_1_insert_record_id}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{TRUCK_2_HOST}}:{{TRUCK_2_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_2_HOST}}"
									],
									"port": "{{TRUCK_2_HDB_PORT}}"
								},
								"description": "Method for inserting records. Can be used for a single insert or multiple records.  If a large amount of records are being updated, we recommend using the .CSV load method.  See our article on importing data sets here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115002007573-1Gigabyte-Limit-to-Request-Bodies\n\n<i>NOTE: Hash value of the inserted JSON record MUST be supplied on insert.  </i>\n\n<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'insert'</li>\n\n<li><b>schema</b><i> (required)</i> - schema where the table you are inserting records into lives</li>\n\n<li><b>table</b><i> (required)</i> - table where you want to insert records </li>\n\n<li><b>records</b><i> (required)</i> - array of one or more records for insert</li>\n</ul>"
							},
							"response": [
								{
									"name": "NoSQL Insert into dev.dog",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"dev\",\n\"table\":\"dog\",\n\"records\": [\n  {\n    \"name\":\"Harper\",\n    \"breed\":\"Mutt\",\n    \"id\":\"1\",\n    \"age\":5\n    \n  },\n  {\n    \"name\":\"Penny\",\n    \"breed\":\"Mutt\",\n    \"id\":\"3\",\n    \"age\":5\n    \n  }\n]\n\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "42",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:43:34 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2a-+I7U4Tpdia9SawmsfcyNUq20tzU\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"successfully wrote 2 records\"}"
								}
							]
						},
						{
							"name": "delete from truck 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af56a92a-ef50-4c72-b026-a24a7177a233",
										"exec": [
											"pm.test(\"test 1 records deleted\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[0].deleted_hashes.length).to.eql(1);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"operation\":\"delete\",\n\t\"schema\":\"{{schema_name}}\",\n\t\"table\":\"{{table_name}}\",\n\t\"hash_values\": [{{truck_2_insert_record_id}}]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{TRUCK_2_HOST}}:{{TRUCK_2_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_2_HOST}}"
									],
									"port": "{{TRUCK_2_HDB_PORT}}"
								},
								"description": "Method for inserting records. Can be used for a single insert or multiple records.  If a large amount of records are being updated, we recommend using the .CSV load method.  See our article on importing data sets here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115002007573-1Gigabyte-Limit-to-Request-Bodies\n\n<i>NOTE: Hash value of the inserted JSON record MUST be supplied on insert.  </i>\n\n<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'insert'</li>\n\n<li><b>schema</b><i> (required)</i> - schema where the table you are inserting records into lives</li>\n\n<li><b>table</b><i> (required)</i> - table where you want to insert records </li>\n\n<li><b>records</b><i> (required)</i> - array of one or more records for insert</li>\n</ul>"
							},
							"response": [
								{
									"name": "NoSQL Insert into dev.dog",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"dev\",\n\"table\":\"dog\",\n\"records\": [\n  {\n    \"name\":\"Harper\",\n    \"breed\":\"Mutt\",\n    \"id\":\"1\",\n    \"age\":5\n    \n  },\n  {\n    \"name\":\"Penny\",\n    \"breed\":\"Mutt\",\n    \"id\":\"3\",\n    \"age\":5\n    \n  }\n]\n\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "42",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:43:34 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2a-+I7U4Tpdia9SawmsfcyNUq20tzU\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"successfully wrote 2 records\"}"
								}
							]
						},
						{
							"name": "select from server - expect deleted",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af56a92a-ef50-4c72-b026-a24a7177a233",
										"exec": [
											"pm.test(\"test 0 record returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.length).to.eql(0);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\": \"sql\",\n  \"sql\":\"SELECT * FROM `{{schema_name}}`.`{{table_name}}` where id = {{truck_2_insert_record_id}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								},
								"description": "Method for inserting records. Can be used for a single insert or multiple records.  If a large amount of records are being updated, we recommend using the .CSV load method.  See our article on importing data sets here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115002007573-1Gigabyte-Limit-to-Request-Bodies\n\n<i>NOTE: Hash value of the inserted JSON record MUST be supplied on insert.  </i>\n\n<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'insert'</li>\n\n<li><b>schema</b><i> (required)</i> - schema where the table you are inserting records into lives</li>\n\n<li><b>table</b><i> (required)</i> - table where you want to insert records </li>\n\n<li><b>records</b><i> (required)</i> - array of one or more records for insert</li>\n</ul>"
							},
							"response": [
								{
									"name": "NoSQL Insert into dev.dog",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"dev\",\n\"table\":\"dog\",\n\"records\": [\n  {\n    \"name\":\"Harper\",\n    \"breed\":\"Mutt\",\n    \"id\":\"1\",\n    \"age\":5\n    \n  },\n  {\n    \"name\":\"Penny\",\n    \"breed\":\"Mutt\",\n    \"id\":\"3\",\n    \"age\":5\n    \n  }\n]\n\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "42",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:43:34 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2a-+I7U4Tpdia9SawmsfcyNUq20tzU\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"successfully wrote 2 records\"}"
								}
							]
						},
						{
							"name": "select from truck 1 - expect does not exist",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af56a92a-ef50-4c72-b026-a24a7177a233",
										"exec": [
											"pm.test(\"test 0 records returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.length).to.eql(0);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\": \"sql\",\n  \"sql\":\"SELECT * FROM `{{schema_name}}`.`{{table_name}}` where id = {{truck_2_insert_record_id}}\"\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_1_HOST}}:{{TRUCK_1_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_1_HOST}}"
									],
									"port": "{{TRUCK_1_HDB_PORT}}"
								},
								"description": "Method for inserting records. Can be used for a single insert or multiple records.  If a large amount of records are being updated, we recommend using the .CSV load method.  See our article on importing data sets here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115002007573-1Gigabyte-Limit-to-Request-Bodies\n\n<i>NOTE: Hash value of the inserted JSON record MUST be supplied on insert.  </i>\n\n<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'insert'</li>\n\n<li><b>schema</b><i> (required)</i> - schema where the table you are inserting records into lives</li>\n\n<li><b>table</b><i> (required)</i> - table where you want to insert records </li>\n\n<li><b>records</b><i> (required)</i> - array of one or more records for insert</li>\n</ul>"
							},
							"response": [
								{
									"name": "NoSQL Insert into dev.dog",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"dev\",\n\"table\":\"dog\",\n\"records\": [\n  {\n    \"name\":\"Harper\",\n    \"breed\":\"Mutt\",\n    \"id\":\"1\",\n    \"age\":5\n    \n  },\n  {\n    \"name\":\"Penny\",\n    \"breed\":\"Mutt\",\n    \"id\":\"3\",\n    \"age\":5\n    \n  }\n]\n\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "42",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:43:34 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2a-+I7U4Tpdia9SawmsfcyNUq20tzU\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"successfully wrote 2 records\"}"
								}
							]
						},
						{
							"name": "delete from server",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af56a92a-ef50-4c72-b026-a24a7177a233",
										"exec": [
											"pm.test(\"test 1 records deleted\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[0].deleted_hashes.length).to.eql(1);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"operation\":\"delete\",\n\t\"schema\":\"{{schema_name}}\",\n\t\"table\":\"{{table_name}}\",\n\t\"hash_values\": [{{server_insert_record_id}}]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								},
								"description": "Method for inserting records. Can be used for a single insert or multiple records.  If a large amount of records are being updated, we recommend using the .CSV load method.  See our article on importing data sets here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115002007573-1Gigabyte-Limit-to-Request-Bodies\n\n<i>NOTE: Hash value of the inserted JSON record MUST be supplied on insert.  </i>\n\n<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'insert'</li>\n\n<li><b>schema</b><i> (required)</i> - schema where the table you are inserting records into lives</li>\n\n<li><b>table</b><i> (required)</i> - table where you want to insert records </li>\n\n<li><b>records</b><i> (required)</i> - array of one or more records for insert</li>\n</ul>"
							},
							"response": [
								{
									"name": "NoSQL Insert into dev.dog",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"dev\",\n\"table\":\"dog\",\n\"records\": [\n  {\n    \"name\":\"Harper\",\n    \"breed\":\"Mutt\",\n    \"id\":\"1\",\n    \"age\":5\n    \n  },\n  {\n    \"name\":\"Penny\",\n    \"breed\":\"Mutt\",\n    \"id\":\"3\",\n    \"age\":5\n    \n  }\n]\n\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "42",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:43:34 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2a-+I7U4Tpdia9SawmsfcyNUq20tzU\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"successfully wrote 2 records\"}"
								}
							]
						},
						{
							"name": "select from truck 1 - expect does not exist Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af56a92a-ef50-4c72-b026-a24a7177a233",
										"exec": [
											"pm.test(\"test 0 records returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.length).to.eql(0);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\": \"sql\",\n  \"sql\":\"SELECT * FROM `{{schema_name}}`.`{{table_name}}` where id = {{server_insert_record_id}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{TRUCK_1_HOST}}:{{TRUCK_1_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_1_HOST}}"
									],
									"port": "{{TRUCK_1_HDB_PORT}}"
								},
								"description": "Method for inserting records. Can be used for a single insert or multiple records.  If a large amount of records are being updated, we recommend using the .CSV load method.  See our article on importing data sets here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115002007573-1Gigabyte-Limit-to-Request-Bodies\n\n<i>NOTE: Hash value of the inserted JSON record MUST be supplied on insert.  </i>\n\n<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'insert'</li>\n\n<li><b>schema</b><i> (required)</i> - schema where the table you are inserting records into lives</li>\n\n<li><b>table</b><i> (required)</i> - table where you want to insert records </li>\n\n<li><b>records</b><i> (required)</i> - array of one or more records for insert</li>\n</ul>"
							},
							"response": [
								{
									"name": "NoSQL Insert into dev.dog",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"dev\",\n\"table\":\"dog\",\n\"records\": [\n  {\n    \"name\":\"Harper\",\n    \"breed\":\"Mutt\",\n    \"id\":\"1\",\n    \"age\":5\n    \n  },\n  {\n    \"name\":\"Penny\",\n    \"breed\":\"Mutt\",\n    \"id\":\"3\",\n    \"age\":5\n    \n  }\n]\n\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "42",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:43:34 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2a-+I7U4Tpdia9SawmsfcyNUq20tzU\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"successfully wrote 2 records\"}"
								}
							]
						},
						{
							"name": "select from truck 2 - expect does not exist Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af56a92a-ef50-4c72-b026-a24a7177a233",
										"exec": [
											"pm.test(\"test 0 returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.length).to.eql(0);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\": \"sql\",\n  \"sql\":\"SELECT * FROM `{{schema_name}}`.`{{table_name}}` where id = {{truck_1_insert_record_id}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{TRUCK_2_HOST}}:{{TRUCK_2_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_2_HOST}}"
									],
									"port": "{{TRUCK_2_HDB_PORT}}"
								},
								"description": "Method for inserting records. Can be used for a single insert or multiple records.  If a large amount of records are being updated, we recommend using the .CSV load method.  See our article on importing data sets here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115002007573-1Gigabyte-Limit-to-Request-Bodies\n\n<i>NOTE: Hash value of the inserted JSON record MUST be supplied on insert.  </i>\n\n<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'insert'</li>\n\n<li><b>schema</b><i> (required)</i> - schema where the table you are inserting records into lives</li>\n\n<li><b>table</b><i> (required)</i> - table where you want to insert records </li>\n\n<li><b>records</b><i> (required)</i> - array of one or more records for insert</li>\n</ul>"
							},
							"response": [
								{
									"name": "NoSQL Insert into dev.dog",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"dev\",\n\"table\":\"dog\",\n\"records\": [\n  {\n    \"name\":\"Harper\",\n    \"breed\":\"Mutt\",\n    \"id\":\"1\",\n    \"age\":5\n    \n  },\n  {\n    \"name\":\"Penny\",\n    \"breed\":\"Mutt\",\n    \"id\":\"3\",\n    \"age\":5\n    \n  }\n]\n\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "42",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:43:34 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2a-+I7U4Tpdia9SawmsfcyNUq20tzU\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"successfully wrote 2 records\"}"
								}
							]
						},
						{
							"name": "Remove node Truck 2 from server",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f6cea83-97f3-40be-b1a9-2fa87b2ed813",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{HDB_PASS}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{HDB_USER}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"operation\":\"remove_node\",\n\t\"name\":\"{{TRUCK_2_NAME}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								}
							},
							"response": []
						},
						{
							"name": "Remove node Truck 1 from server",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f6cea83-97f3-40be-b1a9-2fa87b2ed813",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{HDB_PASS}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{HDB_USER}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"operation\":\"remove_node\",\n\t\"name\":\"{{TRUCK_1_NAME}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								}
							},
							"response": []
						},
						{
							"name": "Restart Server",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"operation\": \"restart\",\n\t\"force\": \"true\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								}
							},
							"response": []
						},
						{
							"name": "Restart truck 1",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"operation\": \"restart\",\n\t\"force\": \"true\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{TRUCK_1_HOST}}:{{TRUCK_1_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_1_HOST}}"
									],
									"port": "{{TRUCK_1_HDB_PORT}}"
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "c4cab0bf-f4c8-4ae0-8258-bb1a03d3b661",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "4c423065-6ff7-4d89-8da6-cb252704f866",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Test Case 2 - Subscribe",
					"item": [
						{
							"name": "Variable setup expect no response",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "3bc3288b-cad7-4b9e-8917-2fc1be382477",
										"exec": [
											"pm.environment.set(\"schema_name\", \"schema_test_case_2\");",
											"pm.environment.set(\"table_name\", \"test_case_2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								}
							},
							"response": []
						},
						{
							"name": "create_schema Server",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "98bf379b-989a-4bd3-a39b-199314ab4c9e",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "bc1b74cb-7f6b-469e-ab44-d3cb987b2756",
										"exec": [
											"tests[\"Create Schema\"] = responseBody.has(\"successfully created\");\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"{{schema_name}}\"\n}"
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								},
								"description": "This method is used to create a schema.   A Schema can be thought of as a container of tables that are independent from tables in other schemas. An example might be the Schema dev could have a table called dog. The Schema Prod could also have a table called dog. \n\n<ul>\n\n<li><b>operation</b><i> (required)</i> - must always be create_schema</li>\n\n<li><b>schema</b><i> (required)</i> - name of the schema you are creating</li>\n\n</ul>"
							},
							"response": [
								{
									"name": "Create dev Schema",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"dev\"\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "45",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 16:52:45 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2d-GPJz4Nu7aSF7N/KODFK3o/TNPUw\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"schema dev successfully created\"}"
								}
							]
						},
						{
							"name": "create_table Server",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ca73d8d1-bea4-4e20-93d0-2526fca75ce7",
										"exec": [
											"tests[\"Create Table\"] = responseBody.has(\"successfully created.\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"{{schema_name}}\",\n  \"table\":\"{{table_name}}\",\n  \"hash_attribute\": \"id\"\n}"
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								},
								"description": "This method is used to create a table under the specified schema. \n\n<ul>\n\n<li><b>operation </b><i>(required)</i> - must always be create_table</li>\n\n<li><b>schema</b><i> (required)</i> - name of the schema where you want your table to live </li>\n\n<li><b>table </b><i>(required)</i> - name of the table you are creating</li>\n\n<li><b>hash_attribute</b><i> (required)</i> - hash for the table </li>"
							},
							"response": [
								{
									"name": "Create dev.dog Table",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"dev\",\n  \"table\":\"dog\",\n  \"hash_attribute\": \"id\"\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "49",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:00:40 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"31-2FV9i2eJXU1F9rNuA4B9T7Vu7EA\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"table dev.dog successfully created.\"}"
								}
							]
						},
						{
							"name": "create_schema truck 1",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "98bf379b-989a-4bd3-a39b-199314ab4c9e",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "bc1b74cb-7f6b-469e-ab44-d3cb987b2756",
										"exec": [
											"tests[\"Create Schema\"] = responseBody.has(\"successfully created\");\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"{{schema_name}}\"\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_1_HOST}}:{{TRUCK_1_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_1_HOST}}"
									],
									"port": "{{TRUCK_1_HDB_PORT}}"
								},
								"description": "This method is used to create a schema.   A Schema can be thought of as a container of tables that are independent from tables in other schemas. An example might be the Schema dev could have a table called dog. The Schema Prod could also have a table called dog. \n\n<ul>\n\n<li><b>operation</b><i> (required)</i> - must always be create_schema</li>\n\n<li><b>schema</b><i> (required)</i> - name of the schema you are creating</li>\n\n</ul>"
							},
							"response": [
								{
									"name": "Create dev Schema",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"dev\"\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "45",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 16:52:45 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2d-GPJz4Nu7aSF7N/KODFK3o/TNPUw\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"schema dev successfully created\"}"
								}
							]
						},
						{
							"name": "create_table truck 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ca73d8d1-bea4-4e20-93d0-2526fca75ce7",
										"exec": [
											"tests[\"Create Table\"] = responseBody.has(\"successfully created.\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"{{schema_name}}\",\n  \"table\":\"{{table_name}}\",\n  \"hash_attribute\": \"id\"\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_1_HOST}}:{{TRUCK_1_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_1_HOST}}"
									],
									"port": "{{TRUCK_1_HDB_PORT}}"
								},
								"description": "This method is used to create a table under the specified schema. \n\n<ul>\n\n<li><b>operation </b><i>(required)</i> - must always be create_table</li>\n\n<li><b>schema</b><i> (required)</i> - name of the schema where you want your table to live </li>\n\n<li><b>table </b><i>(required)</i> - name of the table you are creating</li>\n\n<li><b>hash_attribute</b><i> (required)</i> - hash for the table </li>"
							},
							"response": [
								{
									"name": "Create dev.dog Table",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"dev\",\n  \"table\":\"dog\",\n  \"hash_attribute\": \"id\"\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "49",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:00:40 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"31-2FV9i2eJXU1F9rNuA4B9T7Vu7EA\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"table dev.dog successfully created.\"}"
								}
							]
						},
						{
							"name": "create_schema truck 2",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "98bf379b-989a-4bd3-a39b-199314ab4c9e",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "bc1b74cb-7f6b-469e-ab44-d3cb987b2756",
										"exec": [
											"tests[\"Create Schema\"] = responseBody.has(\"successfully created\");\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"{{schema_name}}\"\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_2_HOST}}:{{TRUCK_2_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_2_HOST}}"
									],
									"port": "{{TRUCK_2_HDB_PORT}}"
								},
								"description": "This method is used to create a schema.   A Schema can be thought of as a container of tables that are independent from tables in other schemas. An example might be the Schema dev could have a table called dog. The Schema Prod could also have a table called dog. \n\n<ul>\n\n<li><b>operation</b><i> (required)</i> - must always be create_schema</li>\n\n<li><b>schema</b><i> (required)</i> - name of the schema you are creating</li>\n\n</ul>"
							},
							"response": [
								{
									"name": "Create dev Schema",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"dev\"\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "45",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 16:52:45 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2d-GPJz4Nu7aSF7N/KODFK3o/TNPUw\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"schema dev successfully created\"}"
								}
							]
						},
						{
							"name": "create_table truck 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ca73d8d1-bea4-4e20-93d0-2526fca75ce7",
										"exec": [
											"tests[\"Create Table\"] = responseBody.has(\"successfully created.\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"{{schema_name}}\",\n  \"table\":\"{{table_name}}\",\n  \"hash_attribute\": \"id\"\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_2_HOST}}:{{TRUCK_2_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_2_HOST}}"
									],
									"port": "{{TRUCK_2_HDB_PORT}}"
								},
								"description": "This method is used to create a table under the specified schema. \n\n<ul>\n\n<li><b>operation </b><i>(required)</i> - must always be create_table</li>\n\n<li><b>schema</b><i> (required)</i> - name of the schema where you want your table to live </li>\n\n<li><b>table </b><i>(required)</i> - name of the table you are creating</li>\n\n<li><b>hash_attribute</b><i> (required)</i> - hash for the table </li>"
							},
							"response": [
								{
									"name": "Create dev.dog Table",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"dev\",\n  \"table\":\"dog\",\n  \"hash_attribute\": \"id\"\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "49",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:00:40 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"31-2FV9i2eJXU1F9rNuA4B9T7Vu7EA\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"table dev.dog successfully created.\"}"
								}
							]
						},
						{
							"name": "Add node Truck 1 to Server",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f6cea83-97f3-40be-b1a9-2fa87b2ed813",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "5b6432d9-21dd-4934-be45-3e75391fee05",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{HDB_PASS}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{HDB_USER}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"operation\":\"add_node\",\n\t\"name\":\"{{TRUCK_1_NAME}}\" ,\n\t\"port\": \"{{TRUCK_1_CLUSTER_PORT}}\",\n\t\"host\":\"{{TRUCK_1_HOST}}\",\n\t\"subscriptions\": [\n      {\n        \"channel\":\"{{schema_name}}:{{table_name}}\",\n        \"publish\": false,\n        \"subscribe\": true\n      }\n    ]\n}"
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								}
							},
							"response": []
						},
						{
							"name": "Add node Truck 2 to Truck 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f6cea83-97f3-40be-b1a9-2fa87b2ed813",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "5b6432d9-21dd-4934-be45-3e75391fee05",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{HDB_PASS}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{HDB_USER}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"operation\":\"add_node\",\n\t\"name\":\"{{TRUCK_2_NAME}}\" ,\n\t\"port\": \"{{TRUCK_2_CLUSTER_PORT}}\",\n\t\"host\":\"{{TRUCK_2_HOST}}\",\n\t\"subscriptions\": [\n      {\n        \"channel\":\"{{schema_name}}:{{table_name}}\",\n        \"publish\": false,\n        \"subscribe\": true\n      }\n    ]\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_1_HOST}}:{{TRUCK_1_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_1_HOST}}"
									],
									"port": "{{TRUCK_1_HDB_PORT}}"
								}
							},
							"response": []
						},
						{
							"name": "insert into truck 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af56a92a-ef50-4c72-b026-a24a7177a233",
										"exec": [
											"tests[\"Write Single Record\"] = responseBody.has(\"successfully wrote 1 records\");",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"{{schema_name}}\",\n\"table\":\"{{table_name}}\",\n\"records\": [\n  {\n    \"name\":\"Insert Test truck 2\",\n    \"breed\":\"Insert Test truck 2\",\n    \"id\":\"2200\",\n    \"age\":5\n    \n  }\n]\n\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_2_HOST}}:{{TRUCK_2_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_2_HOST}}"
									],
									"port": "{{TRUCK_2_HDB_PORT}}"
								},
								"description": "Method for inserting records. Can be used for a single insert or multiple records.  If a large amount of records are being updated, we recommend using the .CSV load method.  See our article on importing data sets here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115002007573-1Gigabyte-Limit-to-Request-Bodies\n\n<i>NOTE: Hash value of the inserted JSON record MUST be supplied on insert.  </i>\n\n<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'insert'</li>\n\n<li><b>schema</b><i> (required)</i> - schema where the table you are inserting records into lives</li>\n\n<li><b>table</b><i> (required)</i> - table where you want to insert records </li>\n\n<li><b>records</b><i> (required)</i> - array of one or more records for insert</li>\n</ul>"
							},
							"response": [
								{
									"name": "NoSQL Insert into dev.dog",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"dev\",\n\"table\":\"dog\",\n\"records\": [\n  {\n    \"name\":\"Harper\",\n    \"breed\":\"Mutt\",\n    \"id\":\"1\",\n    \"age\":5\n    \n  },\n  {\n    \"name\":\"Penny\",\n    \"breed\":\"Mutt\",\n    \"id\":\"3\",\n    \"age\":5\n    \n  }\n]\n\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "42",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:43:34 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2a-+I7U4Tpdia9SawmsfcyNUq20tzU\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"successfully wrote 2 records\"}"
								}
							]
						},
						{
							"name": "insert into truck 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af56a92a-ef50-4c72-b026-a24a7177a233",
										"exec": [
											"tests[\"Write Single Record\"] = responseBody.has(\"successfully wrote 1 records\");",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"{{schema_name}}\",\n\"table\":\"{{table_name}}\",\n\"records\": [\n  {\n    \"name\":\"Insert Test truck 1\",\n    \"breed\":\"Insert Test truck 1\",\n    \"id\":\"2100\",\n    \"age\":5\n    \n  }\n]\n\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_1_HOST}}:{{TRUCK_1_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_1_HOST}}"
									],
									"port": "{{TRUCK_1_HDB_PORT}}"
								},
								"description": "Method for inserting records. Can be used for a single insert or multiple records.  If a large amount of records are being updated, we recommend using the .CSV load method.  See our article on importing data sets here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115002007573-1Gigabyte-Limit-to-Request-Bodies\n\n<i>NOTE: Hash value of the inserted JSON record MUST be supplied on insert.  </i>\n\n<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'insert'</li>\n\n<li><b>schema</b><i> (required)</i> - schema where the table you are inserting records into lives</li>\n\n<li><b>table</b><i> (required)</i> - table where you want to insert records </li>\n\n<li><b>records</b><i> (required)</i> - array of one or more records for insert</li>\n</ul>"
							},
							"response": [
								{
									"name": "NoSQL Insert into dev.dog",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"dev\",\n\"table\":\"dog\",\n\"records\": [\n  {\n    \"name\":\"Harper\",\n    \"breed\":\"Mutt\",\n    \"id\":\"1\",\n    \"age\":5\n    \n  },\n  {\n    \"name\":\"Penny\",\n    \"breed\":\"Mutt\",\n    \"id\":\"3\",\n    \"age\":5\n    \n  }\n]\n\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "42",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:43:34 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2a-+I7U4Tpdia9SawmsfcyNUq20tzU\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"successfully wrote 2 records\"}"
								}
							]
						},
						{
							"name": "insert into server",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af56a92a-ef50-4c72-b026-a24a7177a233",
										"exec": [
											"tests[\"Write Single Record\"] = responseBody.has(\"successfully wrote 1 records\");",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"{{schema_name}}\",\n\"table\":\"{{table_name}}\",\n\"records\": [\n  {\n    \"name\":\"Insert Test Server\",\n    \"breed\":\"Insert Test Server\",\n    \"id\":\"2000\",\n    \"age\":5\n    \n  }\n]\n\n}"
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								},
								"description": "Method for inserting records. Can be used for a single insert or multiple records.  If a large amount of records are being updated, we recommend using the .CSV load method.  See our article on importing data sets here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115002007573-1Gigabyte-Limit-to-Request-Bodies\n\n<i>NOTE: Hash value of the inserted JSON record MUST be supplied on insert.  </i>\n\n<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'insert'</li>\n\n<li><b>schema</b><i> (required)</i> - schema where the table you are inserting records into lives</li>\n\n<li><b>table</b><i> (required)</i> - table where you want to insert records </li>\n\n<li><b>records</b><i> (required)</i> - array of one or more records for insert</li>\n</ul>"
							},
							"response": [
								{
									"name": "NoSQL Insert into dev.dog",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"dev\",\n\"table\":\"dog\",\n\"records\": [\n  {\n    \"name\":\"Harper\",\n    \"breed\":\"Mutt\",\n    \"id\":\"1\",\n    \"age\":5\n    \n  },\n  {\n    \"name\":\"Penny\",\n    \"breed\":\"Mutt\",\n    \"id\":\"3\",\n    \"age\":5\n    \n  }\n]\n\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "42",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:43:34 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2a-+I7U4Tpdia9SawmsfcyNUq20tzU\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"successfully wrote 2 records\"}"
								}
							]
						},
						{
							"name": "create_schema non sub truck_2",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "98bf379b-989a-4bd3-a39b-199314ab4c9e",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "bc1b74cb-7f6b-469e-ab44-d3cb987b2756",
										"exec": [
											"tests[\"Create Schema\"] = responseBody.has(\"successfully created\");\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"random_test_3_schema\"\n}"
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								},
								"description": "This method is used to create a schema.   A Schema can be thought of as a container of tables that are independent from tables in other schemas. An example might be the Schema dev could have a table called dog. The Schema Prod could also have a table called dog. \n\n<ul>\n\n<li><b>operation</b><i> (required)</i> - must always be create_schema</li>\n\n<li><b>schema</b><i> (required)</i> - name of the schema you are creating</li>\n\n</ul>"
							},
							"response": [
								{
									"name": "Create dev Schema",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"dev\"\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "45",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 16:52:45 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2d-GPJz4Nu7aSF7N/KODFK3o/TNPUw\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"schema dev successfully created\"}"
								}
							]
						},
						{
							"name": "Remove node Truck 2 from truck 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f6cea83-97f3-40be-b1a9-2fa87b2ed813",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{HDB_PASS}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{HDB_USER}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"operation\":\"remove_node\",\n\t\"name\":\"{{TRUCK_2_NAME}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{TRUCK_1_HOST}}:{{TRUCK_1_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_1_HOST}}"
									],
									"port": "{{TRUCK_1_HDB_PORT}}"
								}
							},
							"response": []
						},
						{
							"name": "Remove node Truck 1 from server",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f6cea83-97f3-40be-b1a9-2fa87b2ed813",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{HDB_PASS}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{HDB_USER}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"operation\":\"remove_node\",\n\t\"name\":\"{{TRUCK_1_NAME}}\"\n}"
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "1f00acfb-2523-41a0-953c-abb032328793",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "f7879a11-ce58-4c12-b71d-5b2ec89e64be",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Test Case 3 - Subscribe",
					"item": [
						{
							"name": "Variable setup expect no response",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "3bc3288b-cad7-4b9e-8917-2fc1be382477",
										"exec": [
											"pm.environment.set(\"schema_name\", \"schema_test_case_3\");",
											"pm.environment.set(\"table_name\", \"test_case_3\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								}
							},
							"response": []
						},
						{
							"name": "create_schema Server",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "98bf379b-989a-4bd3-a39b-199314ab4c9e",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "bc1b74cb-7f6b-469e-ab44-d3cb987b2756",
										"exec": [
											"tests[\"Create Schema\"] = responseBody.has(\"successfully created\");\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"{{schema_name}}\"\n}"
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								},
								"description": "This method is used to create a schema.   A Schema can be thought of as a container of tables that are independent from tables in other schemas. An example might be the Schema dev could have a table called dog. The Schema Prod could also have a table called dog. \n\n<ul>\n\n<li><b>operation</b><i> (required)</i> - must always be create_schema</li>\n\n<li><b>schema</b><i> (required)</i> - name of the schema you are creating</li>\n\n</ul>"
							},
							"response": [
								{
									"name": "Create dev Schema",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"dev\"\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "45",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 16:52:45 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2d-GPJz4Nu7aSF7N/KODFK3o/TNPUw\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"schema dev successfully created\"}"
								}
							]
						},
						{
							"name": "create_table Server",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ca73d8d1-bea4-4e20-93d0-2526fca75ce7",
										"exec": [
											"tests[\"Create Table\"] = responseBody.has(\"successfully created.\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"{{schema_name}}\",\n  \"table\":\"{{table_name}}\",\n  \"hash_attribute\": \"id\"\n}"
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								},
								"description": "This method is used to create a table under the specified schema. \n\n<ul>\n\n<li><b>operation </b><i>(required)</i> - must always be create_table</li>\n\n<li><b>schema</b><i> (required)</i> - name of the schema where you want your table to live </li>\n\n<li><b>table </b><i>(required)</i> - name of the table you are creating</li>\n\n<li><b>hash_attribute</b><i> (required)</i> - hash for the table </li>"
							},
							"response": [
								{
									"name": "Create dev.dog Table",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"dev\",\n  \"table\":\"dog\",\n  \"hash_attribute\": \"id\"\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "49",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:00:40 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"31-2FV9i2eJXU1F9rNuA4B9T7Vu7EA\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"table dev.dog successfully created.\"}"
								}
							]
						},
						{
							"name": "create_schema truck 1",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "98bf379b-989a-4bd3-a39b-199314ab4c9e",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "bc1b74cb-7f6b-469e-ab44-d3cb987b2756",
										"exec": [
											"tests[\"Create Schema\"] = responseBody.has(\"successfully created\");\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"{{schema_name}}\"\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_1_HOST}}:{{TRUCK_1_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_1_HOST}}"
									],
									"port": "{{TRUCK_1_HDB_PORT}}"
								},
								"description": "This method is used to create a schema.   A Schema can be thought of as a container of tables that are independent from tables in other schemas. An example might be the Schema dev could have a table called dog. The Schema Prod could also have a table called dog. \n\n<ul>\n\n<li><b>operation</b><i> (required)</i> - must always be create_schema</li>\n\n<li><b>schema</b><i> (required)</i> - name of the schema you are creating</li>\n\n</ul>"
							},
							"response": [
								{
									"name": "Create dev Schema",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"dev\"\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "45",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 16:52:45 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2d-GPJz4Nu7aSF7N/KODFK3o/TNPUw\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"schema dev successfully created\"}"
								}
							]
						},
						{
							"name": "create_table truck 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ca73d8d1-bea4-4e20-93d0-2526fca75ce7",
										"exec": [
											"tests[\"Create Table\"] = responseBody.has(\"successfully created.\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"{{schema_name}}\",\n  \"table\":\"{{table_name}}\",\n  \"hash_attribute\": \"id\"\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_1_HOST}}:{{TRUCK_1_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_1_HOST}}"
									],
									"port": "{{TRUCK_1_HDB_PORT}}"
								},
								"description": "This method is used to create a table under the specified schema. \n\n<ul>\n\n<li><b>operation </b><i>(required)</i> - must always be create_table</li>\n\n<li><b>schema</b><i> (required)</i> - name of the schema where you want your table to live </li>\n\n<li><b>table </b><i>(required)</i> - name of the table you are creating</li>\n\n<li><b>hash_attribute</b><i> (required)</i> - hash for the table </li>"
							},
							"response": [
								{
									"name": "Create dev.dog Table",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"dev\",\n  \"table\":\"dog\",\n  \"hash_attribute\": \"id\"\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "49",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:00:40 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"31-2FV9i2eJXU1F9rNuA4B9T7Vu7EA\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"table dev.dog successfully created.\"}"
								}
							]
						},
						{
							"name": "create_schema truck 2",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "98bf379b-989a-4bd3-a39b-199314ab4c9e",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "bc1b74cb-7f6b-469e-ab44-d3cb987b2756",
										"exec": [
											"tests[\"Create Schema\"] = responseBody.has(\"successfully created\");\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"{{schema_name}}\"\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_2_HOST}}:{{TRUCK_2_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_2_HOST}}"
									],
									"port": "{{TRUCK_2_HDB_PORT}}"
								},
								"description": "This method is used to create a schema.   A Schema can be thought of as a container of tables that are independent from tables in other schemas. An example might be the Schema dev could have a table called dog. The Schema Prod could also have a table called dog. \n\n<ul>\n\n<li><b>operation</b><i> (required)</i> - must always be create_schema</li>\n\n<li><b>schema</b><i> (required)</i> - name of the schema you are creating</li>\n\n</ul>"
							},
							"response": [
								{
									"name": "Create dev Schema",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"dev\"\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "45",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 16:52:45 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2d-GPJz4Nu7aSF7N/KODFK3o/TNPUw\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"schema dev successfully created\"}"
								}
							]
						},
						{
							"name": "create_table truck 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ca73d8d1-bea4-4e20-93d0-2526fca75ce7",
										"exec": [
											"tests[\"Create Table\"] = responseBody.has(\"successfully created.\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"{{schema_name}}\",\n  \"table\":\"{{table_name}}\",\n  \"hash_attribute\": \"id\"\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_2_HOST}}:{{TRUCK_2_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_2_HOST}}"
									],
									"port": "{{TRUCK_2_HDB_PORT}}"
								},
								"description": "This method is used to create a table under the specified schema. \n\n<ul>\n\n<li><b>operation </b><i>(required)</i> - must always be create_table</li>\n\n<li><b>schema</b><i> (required)</i> - name of the schema where you want your table to live </li>\n\n<li><b>table </b><i>(required)</i> - name of the table you are creating</li>\n\n<li><b>hash_attribute</b><i> (required)</i> - hash for the table </li>"
							},
							"response": [
								{
									"name": "Create dev.dog Table",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"dev\",\n  \"table\":\"dog\",\n  \"hash_attribute\": \"id\"\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "49",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:00:40 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"31-2FV9i2eJXU1F9rNuA4B9T7Vu7EA\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"table dev.dog successfully created.\"}"
								}
							]
						},
						{
							"name": "Add node Truck 1 to Server",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f6cea83-97f3-40be-b1a9-2fa87b2ed813",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "5b6432d9-21dd-4934-be45-3e75391fee05",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{HDB_PASS}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{HDB_USER}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"operation\":\"add_node\",\n\t\"name\":\"{{TRUCK_1_NAME}}\" ,\n\t\"port\": \"{{TRUCK_1_CLUSTER_PORT}}\",\n\t\"host\":\"{{TRUCK_1_HOST}}\",\n\t\"subscriptions\": [\n      {\n        \"channel\":\"{{schema_name}}:{{table_name}}\",\n        \"publish\": true,\n        \"subscribe\": true\n      }\n    ]\n}"
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								}
							},
							"response": []
						},
						{
							"name": "Add node Truck 2 to Truck 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f6cea83-97f3-40be-b1a9-2fa87b2ed813",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "5b6432d9-21dd-4934-be45-3e75391fee05",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{HDB_PASS}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{HDB_USER}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"operation\":\"add_node\",\n\t\"name\":\"{{TRUCK_2_NAME}}\" ,\n\t\"port\": \"{{TRUCK_2_CLUSTER_PORT}}\",\n\t\"host\":\"{{TRUCK_2_HOST}}\",\n\t\"subscriptions\": [\n      {\n        \"channel\":\"{{schema_name}}:{{table_name}}\",\n        \"publish\": false,\n        \"subscribe\": true\n      }\n    ]\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_1_HOST}}:{{TRUCK_1_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_1_HOST}}"
									],
									"port": "{{TRUCK_1_HDB_PORT}}"
								}
							},
							"response": []
						},
						{
							"name": "insert into truck 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af56a92a-ef50-4c72-b026-a24a7177a233",
										"exec": [
											"tests[\"Write Single Record\"] = responseBody.has(\"successfully wrote 1 records\");",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"{{schema_name}}\",\n\"table\":\"{{table_name}}\",\n\"records\": [\n  {\n    \"name\":\"Insert Test truck 2\",\n    \"breed\":\"Insert Test truck 2\",\n    \"id\":\"3300\",\n    \"age\":5\n    \n  }\n]\n\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_2_HOST}}:{{TRUCK_2_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_2_HOST}}"
									],
									"port": "{{TRUCK_2_HDB_PORT}}"
								},
								"description": "Method for inserting records. Can be used for a single insert or multiple records.  If a large amount of records are being updated, we recommend using the .CSV load method.  See our article on importing data sets here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115002007573-1Gigabyte-Limit-to-Request-Bodies\n\n<i>NOTE: Hash value of the inserted JSON record MUST be supplied on insert.  </i>\n\n<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'insert'</li>\n\n<li><b>schema</b><i> (required)</i> - schema where the table you are inserting records into lives</li>\n\n<li><b>table</b><i> (required)</i> - table where you want to insert records </li>\n\n<li><b>records</b><i> (required)</i> - array of one or more records for insert</li>\n</ul>"
							},
							"response": [
								{
									"name": "NoSQL Insert into dev.dog",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"dev\",\n\"table\":\"dog\",\n\"records\": [\n  {\n    \"name\":\"Harper\",\n    \"breed\":\"Mutt\",\n    \"id\":\"1\",\n    \"age\":5\n    \n  },\n  {\n    \"name\":\"Penny\",\n    \"breed\":\"Mutt\",\n    \"id\":\"3\",\n    \"age\":5\n    \n  }\n]\n\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "42",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:43:34 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2a-+I7U4Tpdia9SawmsfcyNUq20tzU\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"successfully wrote 2 records\"}"
								}
							]
						},
						{
							"name": "insert into truck 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af56a92a-ef50-4c72-b026-a24a7177a233",
										"exec": [
											"tests[\"Write Single Record\"] = responseBody.has(\"successfully wrote 1 records\");",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"{{schema_name}}\",\n\"table\":\"{{table_name}}\",\n\"records\": [\n  {\n    \"name\":\"Insert Test truck 1\",\n    \"breed\":\"Insert Test truck 1\",\n    \"id\":\"3200\",\n    \"age\":5\n    \n  }\n]\n\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_1_HOST}}:{{TRUCK_1_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_1_HOST}}"
									],
									"port": "{{TRUCK_1_HDB_PORT}}"
								},
								"description": "Method for inserting records. Can be used for a single insert or multiple records.  If a large amount of records are being updated, we recommend using the .CSV load method.  See our article on importing data sets here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115002007573-1Gigabyte-Limit-to-Request-Bodies\n\n<i>NOTE: Hash value of the inserted JSON record MUST be supplied on insert.  </i>\n\n<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'insert'</li>\n\n<li><b>schema</b><i> (required)</i> - schema where the table you are inserting records into lives</li>\n\n<li><b>table</b><i> (required)</i> - table where you want to insert records </li>\n\n<li><b>records</b><i> (required)</i> - array of one or more records for insert</li>\n</ul>"
							},
							"response": [
								{
									"name": "NoSQL Insert into dev.dog",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"dev\",\n\"table\":\"dog\",\n\"records\": [\n  {\n    \"name\":\"Harper\",\n    \"breed\":\"Mutt\",\n    \"id\":\"1\",\n    \"age\":5\n    \n  },\n  {\n    \"name\":\"Penny\",\n    \"breed\":\"Mutt\",\n    \"id\":\"3\",\n    \"age\":5\n    \n  }\n]\n\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "42",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:43:34 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2a-+I7U4Tpdia9SawmsfcyNUq20tzU\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"successfully wrote 2 records\"}"
								}
							]
						},
						{
							"name": "insert into server",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af56a92a-ef50-4c72-b026-a24a7177a233",
										"exec": [
											"tests[\"Write Single Record\"] = responseBody.has(\"successfully wrote 1 records\");",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"{{schema_name}}\",\n\"table\":\"{{table_name}}\",\n\"records\": [\n  {\n    \"name\":\"Insert Test Server\",\n    \"breed\":\"Insert Test Server\",\n    \"id\":\"3100\",\n    \"age\":5\n    \n  }\n]\n\n}"
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								},
								"description": "Method for inserting records. Can be used for a single insert or multiple records.  If a large amount of records are being updated, we recommend using the .CSV load method.  See our article on importing data sets here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115002007573-1Gigabyte-Limit-to-Request-Bodies\n\n<i>NOTE: Hash value of the inserted JSON record MUST be supplied on insert.  </i>\n\n<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'insert'</li>\n\n<li><b>schema</b><i> (required)</i> - schema where the table you are inserting records into lives</li>\n\n<li><b>table</b><i> (required)</i> - table where you want to insert records </li>\n\n<li><b>records</b><i> (required)</i> - array of one or more records for insert</li>\n</ul>"
							},
							"response": [
								{
									"name": "NoSQL Insert into dev.dog",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"dev\",\n\"table\":\"dog\",\n\"records\": [\n  {\n    \"name\":\"Harper\",\n    \"breed\":\"Mutt\",\n    \"id\":\"1\",\n    \"age\":5\n    \n  },\n  {\n    \"name\":\"Penny\",\n    \"breed\":\"Mutt\",\n    \"id\":\"3\",\n    \"age\":5\n    \n  }\n]\n\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "42",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:43:34 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2a-+I7U4Tpdia9SawmsfcyNUq20tzU\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"successfully wrote 2 records\"}"
								}
							]
						},
						{
							"name": "create_schema non sub",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "98bf379b-989a-4bd3-a39b-199314ab4c9e",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "bc1b74cb-7f6b-469e-ab44-d3cb987b2756",
										"exec": [
											"tests[\"Create Schema\"] = responseBody.has(\"successfully created\");\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"random_test_2_schema\"\n}"
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								},
								"description": "This method is used to create a schema.   A Schema can be thought of as a container of tables that are independent from tables in other schemas. An example might be the Schema dev could have a table called dog. The Schema Prod could also have a table called dog. \n\n<ul>\n\n<li><b>operation</b><i> (required)</i> - must always be create_schema</li>\n\n<li><b>schema</b><i> (required)</i> - name of the schema you are creating</li>\n\n</ul>"
							},
							"response": [
								{
									"name": "Create dev Schema",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"dev\"\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "45",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 16:52:45 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2d-GPJz4Nu7aSF7N/KODFK3o/TNPUw\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"schema dev successfully created\"}"
								}
							]
						},
						{
							"name": "Remove node Truck 1 from server",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f6cea83-97f3-40be-b1a9-2fa87b2ed813",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{HDB_PASS}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{HDB_USER}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"operation\":\"remove_node\",\n\t\"name\":\"{{TRUCK_1_NAME}}\"\n}"
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								}
							},
							"response": []
						},
						{
							"name": "Remove node Truck 2 from truck 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f6cea83-97f3-40be-b1a9-2fa87b2ed813",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{HDB_PASS}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{HDB_USER}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"operation\":\"remove_node\",\n\t\"name\":\"{{TRUCK_2_NAME}}\"\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_1_HOST}}:{{TRUCK_1_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_1_HOST}}"
									],
									"port": "{{TRUCK_1_HDB_PORT}}"
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "580e0919-bf70-4820-8812-27486209385b",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a3d8c4e3-043d-4ce8-b3f6-d86c27385119",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Test Case 4 - Publish",
					"item": [
						{
							"name": "Variable setup expect no response",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "3bc3288b-cad7-4b9e-8917-2fc1be382477",
										"exec": [
											"pm.environment.set(\"schema_name\", \"schema_test_case_4\");",
											"pm.environment.set(\"table_name\", \"test_case_4\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								}
							},
							"response": []
						},
						{
							"name": "create_schema Server",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "98bf379b-989a-4bd3-a39b-199314ab4c9e",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "bc1b74cb-7f6b-469e-ab44-d3cb987b2756",
										"exec": [
											"tests[\"Create Schema\"] = responseBody.has(\"successfully created\");\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"{{schema_name}}\"\n}"
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								},
								"description": "This method is used to create a schema.   A Schema can be thought of as a container of tables that are independent from tables in other schemas. An example might be the Schema dev could have a table called dog. The Schema Prod could also have a table called dog. \n\n<ul>\n\n<li><b>operation</b><i> (required)</i> - must always be create_schema</li>\n\n<li><b>schema</b><i> (required)</i> - name of the schema you are creating</li>\n\n</ul>"
							},
							"response": [
								{
									"name": "Create dev Schema",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"dev\"\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "45",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 16:52:45 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2d-GPJz4Nu7aSF7N/KODFK3o/TNPUw\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"schema dev successfully created\"}"
								}
							]
						},
						{
							"name": "create_table Server",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ca73d8d1-bea4-4e20-93d0-2526fca75ce7",
										"exec": [
											"tests[\"Create Table\"] = responseBody.has(\"successfully created.\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"{{schema_name}}\",\n  \"table\":\"{{table_name}}\",\n  \"hash_attribute\": \"id\"\n}"
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								},
								"description": "This method is used to create a table under the specified schema. \n\n<ul>\n\n<li><b>operation </b><i>(required)</i> - must always be create_table</li>\n\n<li><b>schema</b><i> (required)</i> - name of the schema where you want your table to live </li>\n\n<li><b>table </b><i>(required)</i> - name of the table you are creating</li>\n\n<li><b>hash_attribute</b><i> (required)</i> - hash for the table </li>"
							},
							"response": [
								{
									"name": "Create dev.dog Table",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"dev\",\n  \"table\":\"dog\",\n  \"hash_attribute\": \"id\"\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "49",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:00:40 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"31-2FV9i2eJXU1F9rNuA4B9T7Vu7EA\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"table dev.dog successfully created.\"}"
								}
							]
						},
						{
							"name": "create_schema truck 1",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "98bf379b-989a-4bd3-a39b-199314ab4c9e",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "bc1b74cb-7f6b-469e-ab44-d3cb987b2756",
										"exec": [
											"tests[\"Create Schema\"] = responseBody.has(\"successfully created\");\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"{{schema_name}}\"\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_1_HOST}}:{{TRUCK_1_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_1_HOST}}"
									],
									"port": "{{TRUCK_1_HDB_PORT}}"
								},
								"description": "This method is used to create a schema.   A Schema can be thought of as a container of tables that are independent from tables in other schemas. An example might be the Schema dev could have a table called dog. The Schema Prod could also have a table called dog. \n\n<ul>\n\n<li><b>operation</b><i> (required)</i> - must always be create_schema</li>\n\n<li><b>schema</b><i> (required)</i> - name of the schema you are creating</li>\n\n</ul>"
							},
							"response": [
								{
									"name": "Create dev Schema",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"dev\"\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "45",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 16:52:45 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2d-GPJz4Nu7aSF7N/KODFK3o/TNPUw\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"schema dev successfully created\"}"
								}
							]
						},
						{
							"name": "create_table truck 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ca73d8d1-bea4-4e20-93d0-2526fca75ce7",
										"exec": [
											"tests[\"Create Table\"] = responseBody.has(\"successfully created.\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"{{schema_name}}\",\n  \"table\":\"{{table_name}}\",\n  \"hash_attribute\": \"id\"\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_1_HOST}}:{{TRUCK_1_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_1_HOST}}"
									],
									"port": "{{TRUCK_1_HDB_PORT}}"
								},
								"description": "This method is used to create a table under the specified schema. \n\n<ul>\n\n<li><b>operation </b><i>(required)</i> - must always be create_table</li>\n\n<li><b>schema</b><i> (required)</i> - name of the schema where you want your table to live </li>\n\n<li><b>table </b><i>(required)</i> - name of the table you are creating</li>\n\n<li><b>hash_attribute</b><i> (required)</i> - hash for the table </li>"
							},
							"response": [
								{
									"name": "Create dev.dog Table",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"dev\",\n  \"table\":\"dog\",\n  \"hash_attribute\": \"id\"\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "49",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:00:40 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"31-2FV9i2eJXU1F9rNuA4B9T7Vu7EA\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"table dev.dog successfully created.\"}"
								}
							]
						},
						{
							"name": "create_schema truck 2",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "98bf379b-989a-4bd3-a39b-199314ab4c9e",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "bc1b74cb-7f6b-469e-ab44-d3cb987b2756",
										"exec": [
											"tests[\"Create Schema\"] = responseBody.has(\"successfully created\");\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"{{schema_name}}\"\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_2_HOST}}:{{TRUCK_2_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_2_HOST}}"
									],
									"port": "{{TRUCK_2_HDB_PORT}}"
								},
								"description": "This method is used to create a schema.   A Schema can be thought of as a container of tables that are independent from tables in other schemas. An example might be the Schema dev could have a table called dog. The Schema Prod could also have a table called dog. \n\n<ul>\n\n<li><b>operation</b><i> (required)</i> - must always be create_schema</li>\n\n<li><b>schema</b><i> (required)</i> - name of the schema you are creating</li>\n\n</ul>"
							},
							"response": [
								{
									"name": "Create dev Schema",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"dev\"\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "45",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 16:52:45 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2d-GPJz4Nu7aSF7N/KODFK3o/TNPUw\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"schema dev successfully created\"}"
								}
							]
						},
						{
							"name": "create_table truck 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ca73d8d1-bea4-4e20-93d0-2526fca75ce7",
										"exec": [
											"tests[\"Create Table\"] = responseBody.has(\"successfully created.\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"{{schema_name}}\",\n  \"table\":\"{{table_name}}\",\n  \"hash_attribute\": \"id\"\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_2_HOST}}:{{TRUCK_2_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_2_HOST}}"
									],
									"port": "{{TRUCK_2_HDB_PORT}}"
								},
								"description": "This method is used to create a table under the specified schema. \n\n<ul>\n\n<li><b>operation </b><i>(required)</i> - must always be create_table</li>\n\n<li><b>schema</b><i> (required)</i> - name of the schema where you want your table to live </li>\n\n<li><b>table </b><i>(required)</i> - name of the table you are creating</li>\n\n<li><b>hash_attribute</b><i> (required)</i> - hash for the table </li>"
							},
							"response": [
								{
									"name": "Create dev.dog Table",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"dev\",\n  \"table\":\"dog\",\n  \"hash_attribute\": \"id\"\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "49",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:00:40 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"31-2FV9i2eJXU1F9rNuA4B9T7Vu7EA\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"table dev.dog successfully created.\"}"
								}
							]
						},
						{
							"name": "Add node Server to Truck 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f6cea83-97f3-40be-b1a9-2fa87b2ed813",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "5b6432d9-21dd-4934-be45-3e75391fee05",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{HDB_PASS}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{HDB_USER}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"operation\":\"add_node\",\n\t\"name\":\"{{SERVER_NAME}}\" ,\n\t\"port\": \"{{SERVER_CLUSTER_PORT}}\",\n\t\"host\":\"{{SERVER_HOST}}\",\n\t\"subscriptions\": [\n      {\n        \"channel\":\"{{schema_name}}:{{table_name}}\",\n        \"publish\": true,\n        \"subscribe\": false\n      }\n    ]\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_1_HOST}}:{{TRUCK_1_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_1_HOST}}"
									],
									"port": "{{TRUCK_1_HDB_PORT}}"
								}
							},
							"response": []
						},
						{
							"name": "Add node Server to Truck 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f6cea83-97f3-40be-b1a9-2fa87b2ed813",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "5b6432d9-21dd-4934-be45-3e75391fee05",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{HDB_PASS}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{HDB_USER}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"operation\":\"add_node\",\n\t\"name\":\"{{SERVER_NAME}}\" ,\n\t\"port\": \"{{SERVER_CLUSTER_PORT}}\",\n\t\"host\":\"{{SERVER_HOST}}\",\n\t\"subscriptions\": [\n      {\n        \"channel\":\"{{schema_name}}:{{table_name}}\",\n        \"publish\": true,\n        \"subscribe\": false\n      }\n    ]\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_2_HOST}}:{{TRUCK_2_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_2_HOST}}"
									],
									"port": "{{TRUCK_2_HDB_PORT}}"
								}
							},
							"response": []
						},
						{
							"name": "insert into truck 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af56a92a-ef50-4c72-b026-a24a7177a233",
										"exec": [
											"tests[\"Write Single Record\"] = responseBody.has(\"successfully wrote 1 records\");",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"{{schema_name}}\",\n\"table\":\"{{table_name}}\",\n\"records\": [\n  {\n    \"name\":\"Insert Test truck 1\",\n    \"breed\":\"Insert Test truck 1\",\n    \"id\":\"4100\",\n    \"age\":5\n    \n  }\n]\n\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_1_HOST}}:{{TRUCK_1_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_1_HOST}}"
									],
									"port": "{{TRUCK_1_HDB_PORT}}"
								},
								"description": "Method for inserting records. Can be used for a single insert or multiple records.  If a large amount of records are being updated, we recommend using the .CSV load method.  See our article on importing data sets here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115002007573-1Gigabyte-Limit-to-Request-Bodies\n\n<i>NOTE: Hash value of the inserted JSON record MUST be supplied on insert.  </i>\n\n<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'insert'</li>\n\n<li><b>schema</b><i> (required)</i> - schema where the table you are inserting records into lives</li>\n\n<li><b>table</b><i> (required)</i> - table where you want to insert records </li>\n\n<li><b>records</b><i> (required)</i> - array of one or more records for insert</li>\n</ul>"
							},
							"response": [
								{
									"name": "NoSQL Insert into dev.dog",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"dev\",\n\"table\":\"dog\",\n\"records\": [\n  {\n    \"name\":\"Harper\",\n    \"breed\":\"Mutt\",\n    \"id\":\"1\",\n    \"age\":5\n    \n  },\n  {\n    \"name\":\"Penny\",\n    \"breed\":\"Mutt\",\n    \"id\":\"3\",\n    \"age\":5\n    \n  }\n]\n\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "42",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:43:34 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2a-+I7U4Tpdia9SawmsfcyNUq20tzU\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"successfully wrote 2 records\"}"
								}
							]
						},
						{
							"name": "insert into truck 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af56a92a-ef50-4c72-b026-a24a7177a233",
										"exec": [
											"tests[\"Write Single Record\"] = responseBody.has(\"successfully wrote 1 records\");",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"{{schema_name}}\",\n\"table\":\"{{table_name}}\",\n\"records\": [\n  {\n    \"name\":\"Insert Test truck 2\",\n    \"breed\":\"Insert Test truck 2\",\n    \"id\":\"4200\",\n    \"age\":5\n    \n  }\n]\n\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_2_HOST}}:{{TRUCK_2_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_2_HOST}}"
									],
									"port": "{{TRUCK_2_HDB_PORT}}"
								},
								"description": "Method for inserting records. Can be used for a single insert or multiple records.  If a large amount of records are being updated, we recommend using the .CSV load method.  See our article on importing data sets here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115002007573-1Gigabyte-Limit-to-Request-Bodies\n\n<i>NOTE: Hash value of the inserted JSON record MUST be supplied on insert.  </i>\n\n<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'insert'</li>\n\n<li><b>schema</b><i> (required)</i> - schema where the table you are inserting records into lives</li>\n\n<li><b>table</b><i> (required)</i> - table where you want to insert records </li>\n\n<li><b>records</b><i> (required)</i> - array of one or more records for insert</li>\n</ul>"
							},
							"response": [
								{
									"name": "NoSQL Insert into dev.dog",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"dev\",\n\"table\":\"dog\",\n\"records\": [\n  {\n    \"name\":\"Harper\",\n    \"breed\":\"Mutt\",\n    \"id\":\"1\",\n    \"age\":5\n    \n  },\n  {\n    \"name\":\"Penny\",\n    \"breed\":\"Mutt\",\n    \"id\":\"3\",\n    \"age\":5\n    \n  }\n]\n\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "42",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:43:34 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2a-+I7U4Tpdia9SawmsfcyNUq20tzU\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"successfully wrote 2 records\"}"
								}
							]
						},
						{
							"name": "insert into server",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af56a92a-ef50-4c72-b026-a24a7177a233",
										"exec": [
											"tests[\"Write Single Record\"] = responseBody.has(\"successfully wrote 1 records\");",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"{{schema_name}}\",\n\"table\":\"{{table_name}}\",\n\"records\": [\n  {\n    \"name\":\"Insert Test Server\",\n    \"breed\":\"Insert Test Server\",\n    \"id\":\"4000\",\n    \"age\":5\n    \n  }\n]\n\n}"
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								},
								"description": "Method for inserting records. Can be used for a single insert or multiple records.  If a large amount of records are being updated, we recommend using the .CSV load method.  See our article on importing data sets here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115002007573-1Gigabyte-Limit-to-Request-Bodies\n\n<i>NOTE: Hash value of the inserted JSON record MUST be supplied on insert.  </i>\n\n<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'insert'</li>\n\n<li><b>schema</b><i> (required)</i> - schema where the table you are inserting records into lives</li>\n\n<li><b>table</b><i> (required)</i> - table where you want to insert records </li>\n\n<li><b>records</b><i> (required)</i> - array of one or more records for insert</li>\n</ul>"
							},
							"response": [
								{
									"name": "NoSQL Insert into dev.dog",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"dev\",\n\"table\":\"dog\",\n\"records\": [\n  {\n    \"name\":\"Harper\",\n    \"breed\":\"Mutt\",\n    \"id\":\"1\",\n    \"age\":5\n    \n  },\n  {\n    \"name\":\"Penny\",\n    \"breed\":\"Mutt\",\n    \"id\":\"3\",\n    \"age\":5\n    \n  }\n]\n\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "42",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:43:34 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2a-+I7U4Tpdia9SawmsfcyNUq20tzU\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"successfully wrote 2 records\"}"
								}
							]
						},
						{
							"name": "create_schema non sub",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "98bf379b-989a-4bd3-a39b-199314ab4c9e",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "bc1b74cb-7f6b-469e-ab44-d3cb987b2756",
										"exec": [
											"tests[\"Create Schema\"] = responseBody.has(\"successfully created\");\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"random_test_4_schema\"\n}"
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								},
								"description": "This method is used to create a schema.   A Schema can be thought of as a container of tables that are independent from tables in other schemas. An example might be the Schema dev could have a table called dog. The Schema Prod could also have a table called dog. \n\n<ul>\n\n<li><b>operation</b><i> (required)</i> - must always be create_schema</li>\n\n<li><b>schema</b><i> (required)</i> - name of the schema you are creating</li>\n\n</ul>"
							},
							"response": [
								{
									"name": "Create dev Schema",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"dev\"\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "45",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 16:52:45 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2d-GPJz4Nu7aSF7N/KODFK3o/TNPUw\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"schema dev successfully created\"}"
								}
							]
						},
						{
							"name": "Remove node server from truck 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f6cea83-97f3-40be-b1a9-2fa87b2ed813",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{HDB_PASS}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{HDB_USER}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"operation\":\"remove_node\",\n\t\"name\":\"{{SERVER_NAME}}\"\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_1_HOST}}:{{TRUCK_1_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_1_HOST}}"
									],
									"port": "{{TRUCK_1_HDB_PORT}}"
								}
							},
							"response": []
						},
						{
							"name": "Remove node server from truck_2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f6cea83-97f3-40be-b1a9-2fa87b2ed813",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{HDB_PASS}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{HDB_USER}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"operation\":\"remove_node\",\n\t\"name\":\"{{SERVER_NAME}}\"\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_2_HOST}}:{{TRUCK_2_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_2_HOST}}"
									],
									"port": "{{TRUCK_2_HDB_PORT}}"
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "580e0919-bf70-4820-8812-27486209385b",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a3d8c4e3-043d-4ce8-b3f6-d86c27385119",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Test Case 5 - Publish",
					"item": [
						{
							"name": "Variable setup expect no response",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "3bc3288b-cad7-4b9e-8917-2fc1be382477",
										"exec": [
											"pm.environment.set(\"schema_name\", \"schema_test_case_5\");",
											"pm.environment.set(\"table_name\", \"test_case_5\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								}
							},
							"response": []
						},
						{
							"name": "create_schema Server",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "98bf379b-989a-4bd3-a39b-199314ab4c9e",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "bc1b74cb-7f6b-469e-ab44-d3cb987b2756",
										"exec": [
											"tests[\"Create Schema\"] = responseBody.has(\"successfully created\");\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"{{schema_name}}\"\n}"
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								},
								"description": "This method is used to create a schema.   A Schema can be thought of as a container of tables that are independent from tables in other schemas. An example might be the Schema dev could have a table called dog. The Schema Prod could also have a table called dog. \n\n<ul>\n\n<li><b>operation</b><i> (required)</i> - must always be create_schema</li>\n\n<li><b>schema</b><i> (required)</i> - name of the schema you are creating</li>\n\n</ul>"
							},
							"response": [
								{
									"name": "Create dev Schema",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"dev\"\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "45",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 16:52:45 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2d-GPJz4Nu7aSF7N/KODFK3o/TNPUw\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"schema dev successfully created\"}"
								}
							]
						},
						{
							"name": "create_table Server",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ca73d8d1-bea4-4e20-93d0-2526fca75ce7",
										"exec": [
											"tests[\"Create Table\"] = responseBody.has(\"successfully created.\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"{{schema_name}}\",\n  \"table\":\"{{table_name}}\",\n  \"hash_attribute\": \"id\"\n}"
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								},
								"description": "This method is used to create a table under the specified schema. \n\n<ul>\n\n<li><b>operation </b><i>(required)</i> - must always be create_table</li>\n\n<li><b>schema</b><i> (required)</i> - name of the schema where you want your table to live </li>\n\n<li><b>table </b><i>(required)</i> - name of the table you are creating</li>\n\n<li><b>hash_attribute</b><i> (required)</i> - hash for the table </li>"
							},
							"response": [
								{
									"name": "Create dev.dog Table",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"dev\",\n  \"table\":\"dog\",\n  \"hash_attribute\": \"id\"\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "49",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:00:40 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"31-2FV9i2eJXU1F9rNuA4B9T7Vu7EA\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"table dev.dog successfully created.\"}"
								}
							]
						},
						{
							"name": "create_schema truck 1",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "98bf379b-989a-4bd3-a39b-199314ab4c9e",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "bc1b74cb-7f6b-469e-ab44-d3cb987b2756",
										"exec": [
											"tests[\"Create Schema\"] = responseBody.has(\"successfully created\");\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"{{schema_name}}\"\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_1_HOST}}:{{TRUCK_1_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_1_HOST}}"
									],
									"port": "{{TRUCK_1_HDB_PORT}}"
								},
								"description": "This method is used to create a schema.   A Schema can be thought of as a container of tables that are independent from tables in other schemas. An example might be the Schema dev could have a table called dog. The Schema Prod could also have a table called dog. \n\n<ul>\n\n<li><b>operation</b><i> (required)</i> - must always be create_schema</li>\n\n<li><b>schema</b><i> (required)</i> - name of the schema you are creating</li>\n\n</ul>"
							},
							"response": [
								{
									"name": "Create dev Schema",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"dev\"\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "45",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 16:52:45 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2d-GPJz4Nu7aSF7N/KODFK3o/TNPUw\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"schema dev successfully created\"}"
								}
							]
						},
						{
							"name": "create_table truck 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ca73d8d1-bea4-4e20-93d0-2526fca75ce7",
										"exec": [
											"tests[\"Create Table\"] = responseBody.has(\"successfully created.\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"{{schema_name}}\",\n  \"table\":\"{{table_name}}\",\n  \"hash_attribute\": \"id\"\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_1_HOST}}:{{TRUCK_1_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_1_HOST}}"
									],
									"port": "{{TRUCK_1_HDB_PORT}}"
								},
								"description": "This method is used to create a table under the specified schema. \n\n<ul>\n\n<li><b>operation </b><i>(required)</i> - must always be create_table</li>\n\n<li><b>schema</b><i> (required)</i> - name of the schema where you want your table to live </li>\n\n<li><b>table </b><i>(required)</i> - name of the table you are creating</li>\n\n<li><b>hash_attribute</b><i> (required)</i> - hash for the table </li>"
							},
							"response": [
								{
									"name": "Create dev.dog Table",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"dev\",\n  \"table\":\"dog\",\n  \"hash_attribute\": \"id\"\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "49",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:00:40 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"31-2FV9i2eJXU1F9rNuA4B9T7Vu7EA\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"table dev.dog successfully created.\"}"
								}
							]
						},
						{
							"name": "create_schema truck 2",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "98bf379b-989a-4bd3-a39b-199314ab4c9e",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "bc1b74cb-7f6b-469e-ab44-d3cb987b2756",
										"exec": [
											"tests[\"Create Schema\"] = responseBody.has(\"successfully created\");\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"{{schema_name}}\"\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_2_HOST}}:{{TRUCK_2_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_2_HOST}}"
									],
									"port": "{{TRUCK_2_HDB_PORT}}"
								},
								"description": "This method is used to create a schema.   A Schema can be thought of as a container of tables that are independent from tables in other schemas. An example might be the Schema dev could have a table called dog. The Schema Prod could also have a table called dog. \n\n<ul>\n\n<li><b>operation</b><i> (required)</i> - must always be create_schema</li>\n\n<li><b>schema</b><i> (required)</i> - name of the schema you are creating</li>\n\n</ul>"
							},
							"response": [
								{
									"name": "Create dev Schema",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"dev\"\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "45",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 16:52:45 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2d-GPJz4Nu7aSF7N/KODFK3o/TNPUw\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"schema dev successfully created\"}"
								}
							]
						},
						{
							"name": "create_table truck 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ca73d8d1-bea4-4e20-93d0-2526fca75ce7",
										"exec": [
											"tests[\"Create Table\"] = responseBody.has(\"successfully created.\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"{{schema_name}}\",\n  \"table\":\"{{table_name}}\",\n  \"hash_attribute\": \"id\"\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_2_HOST}}:{{TRUCK_2_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_2_HOST}}"
									],
									"port": "{{TRUCK_2_HDB_PORT}}"
								},
								"description": "This method is used to create a table under the specified schema. \n\n<ul>\n\n<li><b>operation </b><i>(required)</i> - must always be create_table</li>\n\n<li><b>schema</b><i> (required)</i> - name of the schema where you want your table to live </li>\n\n<li><b>table </b><i>(required)</i> - name of the table you are creating</li>\n\n<li><b>hash_attribute</b><i> (required)</i> - hash for the table </li>"
							},
							"response": [
								{
									"name": "Create dev.dog Table",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"dev\",\n  \"table\":\"dog\",\n  \"hash_attribute\": \"id\"\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "49",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:00:40 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"31-2FV9i2eJXU1F9rNuA4B9T7Vu7EA\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"table dev.dog successfully created.\"}"
								}
							]
						},
						{
							"name": "Add node Server to Truck 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f6cea83-97f3-40be-b1a9-2fa87b2ed813",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "5b6432d9-21dd-4934-be45-3e75391fee05",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{HDB_PASS}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{HDB_USER}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"operation\":\"add_node\",\n\t\"name\":\"{{SERVER_NAME}}\" ,\n\t\"port\": \"{{SERVER_CLUSTER_PORT}}\",\n\t\"host\":\"{{SERVER_HOST}}\",\n\t\"subscriptions\": [\n      {\n        \"channel\":\"{{schema_name}}:{{table_name}}\",\n        \"publish\": true,\n        \"subscribe\": false\n      }\n    ]\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_1_HOST}}:{{TRUCK_1_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_1_HOST}}"
									],
									"port": "{{TRUCK_1_HDB_PORT}}"
								}
							},
							"response": []
						},
						{
							"name": "Add node Truck 1 to Truck 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f6cea83-97f3-40be-b1a9-2fa87b2ed813",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "5b6432d9-21dd-4934-be45-3e75391fee05",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{HDB_PASS}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{HDB_USER}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"operation\":\"add_node\",\n\t\"name\":\"{{TRUCK_1_NAME}}\" ,\n\t\"port\": \"{{TRUCK_1_CLUSTER_PORT}}\",\n\t\"host\":\"{{TRUCK_1_HOST}}\",\n\t\"subscriptions\": [\n      {\n        \"channel\":\"{{schema_name}}:{{table_name}}\",\n        \"publish\": true,\n        \"subscribe\": false\n      }\n    ]\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_2_HOST}}:{{TRUCK_2_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_2_HOST}}"
									],
									"port": "{{TRUCK_2_HDB_PORT}}"
								}
							},
							"response": []
						},
						{
							"name": "insert into truck 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af56a92a-ef50-4c72-b026-a24a7177a233",
										"exec": [
											"tests[\"Write Single Record\"] = responseBody.has(\"successfully wrote 1 records\");",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"{{schema_name}}\",\n\"table\":\"{{table_name}}\",\n\"records\": [\n  {\n    \"name\":\"Insert Test truck 2\",\n    \"breed\":\"Insert Test truck 2\",\n    \"id\":\"5200\",\n    \"age\":5\n    \n  }\n]\n\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_2_HOST}}:{{TRUCK_2_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_2_HOST}}"
									],
									"port": "{{TRUCK_2_HDB_PORT}}"
								},
								"description": "Method for inserting records. Can be used for a single insert or multiple records.  If a large amount of records are being updated, we recommend using the .CSV load method.  See our article on importing data sets here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115002007573-1Gigabyte-Limit-to-Request-Bodies\n\n<i>NOTE: Hash value of the inserted JSON record MUST be supplied on insert.  </i>\n\n<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'insert'</li>\n\n<li><b>schema</b><i> (required)</i> - schema where the table you are inserting records into lives</li>\n\n<li><b>table</b><i> (required)</i> - table where you want to insert records </li>\n\n<li><b>records</b><i> (required)</i> - array of one or more records for insert</li>\n</ul>"
							},
							"response": [
								{
									"name": "NoSQL Insert into dev.dog",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"dev\",\n\"table\":\"dog\",\n\"records\": [\n  {\n    \"name\":\"Harper\",\n    \"breed\":\"Mutt\",\n    \"id\":\"1\",\n    \"age\":5\n    \n  },\n  {\n    \"name\":\"Penny\",\n    \"breed\":\"Mutt\",\n    \"id\":\"3\",\n    \"age\":5\n    \n  }\n]\n\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "42",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:43:34 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2a-+I7U4Tpdia9SawmsfcyNUq20tzU\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"successfully wrote 2 records\"}"
								}
							]
						},
						{
							"name": "insert into truck 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af56a92a-ef50-4c72-b026-a24a7177a233",
										"exec": [
											"tests[\"Write Single Record\"] = responseBody.has(\"successfully wrote 1 records\");",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"{{schema_name}}\",\n\"table\":\"{{table_name}}\",\n\"records\": [\n  {\n    \"name\":\"Insert Test truck 1\",\n    \"breed\":\"Insert Test truck 1\",\n    \"id\":\"5100\",\n    \"age\":5\n    \n  }\n]\n\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_1_HOST}}:{{TRUCK_1_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_1_HOST}}"
									],
									"port": "{{TRUCK_1_HDB_PORT}}"
								},
								"description": "Method for inserting records. Can be used for a single insert or multiple records.  If a large amount of records are being updated, we recommend using the .CSV load method.  See our article on importing data sets here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115002007573-1Gigabyte-Limit-to-Request-Bodies\n\n<i>NOTE: Hash value of the inserted JSON record MUST be supplied on insert.  </i>\n\n<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'insert'</li>\n\n<li><b>schema</b><i> (required)</i> - schema where the table you are inserting records into lives</li>\n\n<li><b>table</b><i> (required)</i> - table where you want to insert records </li>\n\n<li><b>records</b><i> (required)</i> - array of one or more records for insert</li>\n</ul>"
							},
							"response": [
								{
									"name": "NoSQL Insert into dev.dog",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"dev\",\n\"table\":\"dog\",\n\"records\": [\n  {\n    \"name\":\"Harper\",\n    \"breed\":\"Mutt\",\n    \"id\":\"1\",\n    \"age\":5\n    \n  },\n  {\n    \"name\":\"Penny\",\n    \"breed\":\"Mutt\",\n    \"id\":\"3\",\n    \"age\":5\n    \n  }\n]\n\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "42",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:43:34 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2a-+I7U4Tpdia9SawmsfcyNUq20tzU\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"successfully wrote 2 records\"}"
								}
							]
						},
						{
							"name": "insert into server",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af56a92a-ef50-4c72-b026-a24a7177a233",
										"exec": [
											"tests[\"Write Single Record\"] = responseBody.has(\"successfully wrote 1 records\");",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"{{schema_name}}\",\n\"table\":\"{{table_name}}\",\n\"records\": [\n  {\n    \"name\":\"Insert Test Server\",\n    \"breed\":\"Insert Test Server\",\n    \"id\":\"5000\",\n    \"age\":5\n    \n  }\n]\n\n}"
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								},
								"description": "Method for inserting records. Can be used for a single insert or multiple records.  If a large amount of records are being updated, we recommend using the .CSV load method.  See our article on importing data sets here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115002007573-1Gigabyte-Limit-to-Request-Bodies\n\n<i>NOTE: Hash value of the inserted JSON record MUST be supplied on insert.  </i>\n\n<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'insert'</li>\n\n<li><b>schema</b><i> (required)</i> - schema where the table you are inserting records into lives</li>\n\n<li><b>table</b><i> (required)</i> - table where you want to insert records </li>\n\n<li><b>records</b><i> (required)</i> - array of one or more records for insert</li>\n</ul>"
							},
							"response": [
								{
									"name": "NoSQL Insert into dev.dog",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"dev\",\n\"table\":\"dog\",\n\"records\": [\n  {\n    \"name\":\"Harper\",\n    \"breed\":\"Mutt\",\n    \"id\":\"1\",\n    \"age\":5\n    \n  },\n  {\n    \"name\":\"Penny\",\n    \"breed\":\"Mutt\",\n    \"id\":\"3\",\n    \"age\":5\n    \n  }\n]\n\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "42",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:43:34 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2a-+I7U4Tpdia9SawmsfcyNUq20tzU\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"successfully wrote 2 records\"}"
								}
							]
						},
						{
							"name": "create_schema non sub",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "98bf379b-989a-4bd3-a39b-199314ab4c9e",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "bc1b74cb-7f6b-469e-ab44-d3cb987b2756",
										"exec": [
											"tests[\"Create Schema\"] = responseBody.has(\"successfully created\");\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"random_test_5_schema\"\n}"
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								},
								"description": "This method is used to create a schema.   A Schema can be thought of as a container of tables that are independent from tables in other schemas. An example might be the Schema dev could have a table called dog. The Schema Prod could also have a table called dog. \n\n<ul>\n\n<li><b>operation</b><i> (required)</i> - must always be create_schema</li>\n\n<li><b>schema</b><i> (required)</i> - name of the schema you are creating</li>\n\n</ul>"
							},
							"response": [
								{
									"name": "Create dev Schema",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"dev\"\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "45",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 16:52:45 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2d-GPJz4Nu7aSF7N/KODFK3o/TNPUw\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"schema dev successfully created\"}"
								}
							]
						},
						{
							"name": "Remove node server from truck 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f6cea83-97f3-40be-b1a9-2fa87b2ed813",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{HDB_PASS}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{HDB_USER}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"operation\":\"remove_node\",\n\t\"name\":\"{{SERVER_NAME}}\"\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_1_HOST}}:{{TRUCK_1_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_1_HOST}}"
									],
									"port": "{{TRUCK_1_HDB_PORT}}"
								}
							},
							"response": []
						},
						{
							"name": "Remove node truck 1 from truck 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f6cea83-97f3-40be-b1a9-2fa87b2ed813",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{HDB_PASS}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{HDB_USER}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"operation\":\"remove_node\",\n\t\"name\":\"{{TRUCK_1_NAME}}\"\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_2_HOST}}:{{TRUCK_2_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_2_HOST}}"
									],
									"port": "{{TRUCK_2_HDB_PORT}}"
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "580e0919-bf70-4820-8812-27486209385b",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a3d8c4e3-043d-4ce8-b3f6-d86c27385119",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Test Case 6 - Publish",
					"item": [
						{
							"name": "Variable setup expect no response",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "3bc3288b-cad7-4b9e-8917-2fc1be382477",
										"exec": [
											"pm.environment.set(\"schema_name\", \"schema_test_case_6\");",
											"pm.environment.set(\"table_name\", \"test_case_6\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								}
							},
							"response": []
						},
						{
							"name": "create_schema Server",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "98bf379b-989a-4bd3-a39b-199314ab4c9e",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "bc1b74cb-7f6b-469e-ab44-d3cb987b2756",
										"exec": [
											"tests[\"Create Schema\"] = responseBody.has(\"successfully created\");\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"{{schema_name}}\"\n}"
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								},
								"description": "This method is used to create a schema.   A Schema can be thought of as a container of tables that are independent from tables in other schemas. An example might be the Schema dev could have a table called dog. The Schema Prod could also have a table called dog. \n\n<ul>\n\n<li><b>operation</b><i> (required)</i> - must always be create_schema</li>\n\n<li><b>schema</b><i> (required)</i> - name of the schema you are creating</li>\n\n</ul>"
							},
							"response": [
								{
									"name": "Create dev Schema",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"dev\"\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "45",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 16:52:45 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2d-GPJz4Nu7aSF7N/KODFK3o/TNPUw\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"schema dev successfully created\"}"
								}
							]
						},
						{
							"name": "create_table Server",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ca73d8d1-bea4-4e20-93d0-2526fca75ce7",
										"exec": [
											"tests[\"Create Table\"] = responseBody.has(\"successfully created.\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"{{schema_name}}\",\n  \"table\":\"{{table_name}}\",\n  \"hash_attribute\": \"id\"\n}"
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								},
								"description": "This method is used to create a table under the specified schema. \n\n<ul>\n\n<li><b>operation </b><i>(required)</i> - must always be create_table</li>\n\n<li><b>schema</b><i> (required)</i> - name of the schema where you want your table to live </li>\n\n<li><b>table </b><i>(required)</i> - name of the table you are creating</li>\n\n<li><b>hash_attribute</b><i> (required)</i> - hash for the table </li>"
							},
							"response": [
								{
									"name": "Create dev.dog Table",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"dev\",\n  \"table\":\"dog\",\n  \"hash_attribute\": \"id\"\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "49",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:00:40 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"31-2FV9i2eJXU1F9rNuA4B9T7Vu7EA\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"table dev.dog successfully created.\"}"
								}
							]
						},
						{
							"name": "create_schema truck 1",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "98bf379b-989a-4bd3-a39b-199314ab4c9e",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "bc1b74cb-7f6b-469e-ab44-d3cb987b2756",
										"exec": [
											"tests[\"Create Schema\"] = responseBody.has(\"successfully created\");\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"{{schema_name}}\"\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_1_HOST}}:{{TRUCK_1_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_1_HOST}}"
									],
									"port": "{{TRUCK_1_HDB_PORT}}"
								},
								"description": "This method is used to create a schema.   A Schema can be thought of as a container of tables that are independent from tables in other schemas. An example might be the Schema dev could have a table called dog. The Schema Prod could also have a table called dog. \n\n<ul>\n\n<li><b>operation</b><i> (required)</i> - must always be create_schema</li>\n\n<li><b>schema</b><i> (required)</i> - name of the schema you are creating</li>\n\n</ul>"
							},
							"response": [
								{
									"name": "Create dev Schema",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"dev\"\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "45",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 16:52:45 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2d-GPJz4Nu7aSF7N/KODFK3o/TNPUw\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"schema dev successfully created\"}"
								}
							]
						},
						{
							"name": "create_table truck 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ca73d8d1-bea4-4e20-93d0-2526fca75ce7",
										"exec": [
											"tests[\"Create Table\"] = responseBody.has(\"successfully created.\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"{{schema_name}}\",\n  \"table\":\"{{table_name}}\",\n  \"hash_attribute\": \"id\"\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_1_HOST}}:{{TRUCK_1_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_1_HOST}}"
									],
									"port": "{{TRUCK_1_HDB_PORT}}"
								},
								"description": "This method is used to create a table under the specified schema. \n\n<ul>\n\n<li><b>operation </b><i>(required)</i> - must always be create_table</li>\n\n<li><b>schema</b><i> (required)</i> - name of the schema where you want your table to live </li>\n\n<li><b>table </b><i>(required)</i> - name of the table you are creating</li>\n\n<li><b>hash_attribute</b><i> (required)</i> - hash for the table </li>"
							},
							"response": [
								{
									"name": "Create dev.dog Table",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"dev\",\n  \"table\":\"dog\",\n  \"hash_attribute\": \"id\"\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "49",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:00:40 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"31-2FV9i2eJXU1F9rNuA4B9T7Vu7EA\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"table dev.dog successfully created.\"}"
								}
							]
						},
						{
							"name": "create_schema truck 2",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "98bf379b-989a-4bd3-a39b-199314ab4c9e",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "bc1b74cb-7f6b-469e-ab44-d3cb987b2756",
										"exec": [
											"tests[\"Create Schema\"] = responseBody.has(\"successfully created\");\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"{{schema_name}}\"\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_2_HOST}}:{{TRUCK_2_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_2_HOST}}"
									],
									"port": "{{TRUCK_2_HDB_PORT}}"
								},
								"description": "This method is used to create a schema.   A Schema can be thought of as a container of tables that are independent from tables in other schemas. An example might be the Schema dev could have a table called dog. The Schema Prod could also have a table called dog. \n\n<ul>\n\n<li><b>operation</b><i> (required)</i> - must always be create_schema</li>\n\n<li><b>schema</b><i> (required)</i> - name of the schema you are creating</li>\n\n</ul>"
							},
							"response": [
								{
									"name": "Create dev Schema",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"dev\"\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "45",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 16:52:45 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2d-GPJz4Nu7aSF7N/KODFK3o/TNPUw\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"schema dev successfully created\"}"
								}
							]
						},
						{
							"name": "create_table truck 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ca73d8d1-bea4-4e20-93d0-2526fca75ce7",
										"exec": [
											"tests[\"Create Table\"] = responseBody.has(\"successfully created.\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"{{schema_name}}\",\n  \"table\":\"{{table_name}}\",\n  \"hash_attribute\": \"id\"\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_2_HOST}}:{{TRUCK_2_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_2_HOST}}"
									],
									"port": "{{TRUCK_2_HDB_PORT}}"
								},
								"description": "This method is used to create a table under the specified schema. \n\n<ul>\n\n<li><b>operation </b><i>(required)</i> - must always be create_table</li>\n\n<li><b>schema</b><i> (required)</i> - name of the schema where you want your table to live </li>\n\n<li><b>table </b><i>(required)</i> - name of the table you are creating</li>\n\n<li><b>hash_attribute</b><i> (required)</i> - hash for the table </li>"
							},
							"response": [
								{
									"name": "Create dev.dog Table",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"dev\",\n  \"table\":\"dog\",\n  \"hash_attribute\": \"id\"\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "49",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:00:40 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"31-2FV9i2eJXU1F9rNuA4B9T7Vu7EA\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"table dev.dog successfully created.\"}"
								}
							]
						},
						{
							"name": "Add node Server to Truck 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f6cea83-97f3-40be-b1a9-2fa87b2ed813",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "5b6432d9-21dd-4934-be45-3e75391fee05",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{HDB_PASS}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{HDB_USER}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"operation\":\"add_node\",\n\t\"name\":\"{{SERVER_NAME}}\" ,\n\t\"port\": \"{{SERVER_CLUSTER_PORT}}\",\n\t\"host\":\"{{SERVER_HOST}}\",\n\t\"subscriptions\": [\n      {\n        \"channel\":\"{{schema_name}}:{{table_name}}\",\n        \"publish\": true,\n        \"subscribe\": false\n      }\n    ]\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_2_HOST}}:{{TRUCK_2_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_2_HOST}}"
									],
									"port": "{{TRUCK_2_HDB_PORT}}"
								}
							},
							"response": []
						},
						{
							"name": "Add node Server to Truck 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f6cea83-97f3-40be-b1a9-2fa87b2ed813",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "5b6432d9-21dd-4934-be45-3e75391fee05",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{HDB_PASS}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{HDB_USER}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"operation\":\"add_node\",\n\t\"name\":\"{{SERVER_NAME}}\" ,\n\t\"port\": \"{{SERVER_CLUSTER_PORT}}\",\n\t\"host\":\"{{SERVER_HOST}}\",\n\t\"subscriptions\": [\n      {\n        \"channel\":\"{{schema_name}}:{{table_name}}\",\n        \"publish\": false,\n        \"subscribe\": true\n      }\n    ]\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_1_HOST}}:{{TRUCK_1_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_1_HOST}}"
									],
									"port": "{{TRUCK_1_HDB_PORT}}"
								}
							},
							"response": []
						},
						{
							"name": "insert into truck 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af56a92a-ef50-4c72-b026-a24a7177a233",
										"exec": [
											"tests[\"Write Single Record\"] = responseBody.has(\"successfully wrote 1 records\");",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"{{schema_name}}\",\n\"table\":\"{{table_name}}\",\n\"records\": [\n  {\n    \"name\":\"Insert Test truck 2\",\n    \"breed\":\"Insert Test truck 2\",\n    \"id\":\"6200\",\n    \"age\":5\n    \n  }\n]\n\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_2_HOST}}:{{TRUCK_2_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_2_HOST}}"
									],
									"port": "{{TRUCK_2_HDB_PORT}}"
								},
								"description": "Method for inserting records. Can be used for a single insert or multiple records.  If a large amount of records are being updated, we recommend using the .CSV load method.  See our article on importing data sets here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115002007573-1Gigabyte-Limit-to-Request-Bodies\n\n<i>NOTE: Hash value of the inserted JSON record MUST be supplied on insert.  </i>\n\n<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'insert'</li>\n\n<li><b>schema</b><i> (required)</i> - schema where the table you are inserting records into lives</li>\n\n<li><b>table</b><i> (required)</i> - table where you want to insert records </li>\n\n<li><b>records</b><i> (required)</i> - array of one or more records for insert</li>\n</ul>"
							},
							"response": [
								{
									"name": "NoSQL Insert into dev.dog",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"dev\",\n\"table\":\"dog\",\n\"records\": [\n  {\n    \"name\":\"Harper\",\n    \"breed\":\"Mutt\",\n    \"id\":\"1\",\n    \"age\":5\n    \n  },\n  {\n    \"name\":\"Penny\",\n    \"breed\":\"Mutt\",\n    \"id\":\"3\",\n    \"age\":5\n    \n  }\n]\n\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "42",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:43:34 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2a-+I7U4Tpdia9SawmsfcyNUq20tzU\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"successfully wrote 2 records\"}"
								}
							]
						},
						{
							"name": "insert into server",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af56a92a-ef50-4c72-b026-a24a7177a233",
										"exec": [
											"tests[\"Write Single Record\"] = responseBody.has(\"successfully wrote 1 records\");",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"{{schema_name}}\",\n\"table\":\"{{table_name}}\",\n\"records\": [\n  {\n    \"name\":\"Insert Test Server\",\n    \"breed\":\"Insert Test Server\",\n    \"id\":\"6000\",\n    \"age\":5\n    \n  }\n]\n\n}"
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								},
								"description": "Method for inserting records. Can be used for a single insert or multiple records.  If a large amount of records are being updated, we recommend using the .CSV load method.  See our article on importing data sets here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115002007573-1Gigabyte-Limit-to-Request-Bodies\n\n<i>NOTE: Hash value of the inserted JSON record MUST be supplied on insert.  </i>\n\n<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'insert'</li>\n\n<li><b>schema</b><i> (required)</i> - schema where the table you are inserting records into lives</li>\n\n<li><b>table</b><i> (required)</i> - table where you want to insert records </li>\n\n<li><b>records</b><i> (required)</i> - array of one or more records for insert</li>\n</ul>"
							},
							"response": [
								{
									"name": "NoSQL Insert into dev.dog",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"dev\",\n\"table\":\"dog\",\n\"records\": [\n  {\n    \"name\":\"Harper\",\n    \"breed\":\"Mutt\",\n    \"id\":\"1\",\n    \"age\":5\n    \n  },\n  {\n    \"name\":\"Penny\",\n    \"breed\":\"Mutt\",\n    \"id\":\"3\",\n    \"age\":5\n    \n  }\n]\n\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "42",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:43:34 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2a-+I7U4Tpdia9SawmsfcyNUq20tzU\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"successfully wrote 2 records\"}"
								}
							]
						},
						{
							"name": "insert into truck 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af56a92a-ef50-4c72-b026-a24a7177a233",
										"exec": [
											"tests[\"Write Single Record\"] = responseBody.has(\"successfully wrote 1 records\");",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"{{schema_name}}\",\n\"table\":\"{{table_name}}\",\n\"records\": [\n  {\n    \"name\":\"Insert Test truck 1\",\n    \"breed\":\"Insert Test truck 1\",\n    \"id\":\"6100\",\n    \"age\":5\n    \n  }\n]\n\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_1_HOST}}:{{TRUCK_1_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_1_HOST}}"
									],
									"port": "{{TRUCK_1_HDB_PORT}}"
								},
								"description": "Method for inserting records. Can be used for a single insert or multiple records.  If a large amount of records are being updated, we recommend using the .CSV load method.  See our article on importing data sets here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115002007573-1Gigabyte-Limit-to-Request-Bodies\n\n<i>NOTE: Hash value of the inserted JSON record MUST be supplied on insert.  </i>\n\n<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'insert'</li>\n\n<li><b>schema</b><i> (required)</i> - schema where the table you are inserting records into lives</li>\n\n<li><b>table</b><i> (required)</i> - table where you want to insert records </li>\n\n<li><b>records</b><i> (required)</i> - array of one or more records for insert</li>\n</ul>"
							},
							"response": [
								{
									"name": "NoSQL Insert into dev.dog",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"dev\",\n\"table\":\"dog\",\n\"records\": [\n  {\n    \"name\":\"Harper\",\n    \"breed\":\"Mutt\",\n    \"id\":\"1\",\n    \"age\":5\n    \n  },\n  {\n    \"name\":\"Penny\",\n    \"breed\":\"Mutt\",\n    \"id\":\"3\",\n    \"age\":5\n    \n  }\n]\n\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "42",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:43:34 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2a-+I7U4Tpdia9SawmsfcyNUq20tzU\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"successfully wrote 2 records\"}"
								}
							]
						},
						{
							"name": "create_schema non sub",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "98bf379b-989a-4bd3-a39b-199314ab4c9e",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "bc1b74cb-7f6b-469e-ab44-d3cb987b2756",
										"exec": [
											"tests[\"Create Schema\"] = responseBody.has(\"successfully created\");\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"random_test_2_schema\"\n}"
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								},
								"description": "This method is used to create a schema.   A Schema can be thought of as a container of tables that are independent from tables in other schemas. An example might be the Schema dev could have a table called dog. The Schema Prod could also have a table called dog. \n\n<ul>\n\n<li><b>operation</b><i> (required)</i> - must always be create_schema</li>\n\n<li><b>schema</b><i> (required)</i> - name of the schema you are creating</li>\n\n</ul>"
							},
							"response": [
								{
									"name": "Create dev Schema",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"dev\"\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "45",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 16:52:45 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2d-GPJz4Nu7aSF7N/KODFK3o/TNPUw\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"schema dev successfully created\"}"
								}
							]
						},
						{
							"name": "Remove node server from truck 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f6cea83-97f3-40be-b1a9-2fa87b2ed813",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{HDB_PASS}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{HDB_USER}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"operation\":\"remove_node\",\n\t\"name\":\"{{SERVER_NAME}}\"\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_1_HOST}}:{{TRUCK_1_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_1_HOST}}"
									],
									"port": "{{TRUCK_1_HDB_PORT}}"
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "580e0919-bf70-4820-8812-27486209385b",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a3d8c4e3-043d-4ce8-b3f6-d86c27385119",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Test Case 7 - Publish",
					"item": [
						{
							"name": "Variable setup expect no response",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "3bc3288b-cad7-4b9e-8917-2fc1be382477",
										"exec": [
											"pm.environment.set(\"schema_name\", \"schema_test_case_7\");",
											"pm.environment.set(\"table_name\", \"test_case_7\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								}
							},
							"response": []
						},
						{
							"name": "create_schema Server",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "98bf379b-989a-4bd3-a39b-199314ab4c9e",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "bc1b74cb-7f6b-469e-ab44-d3cb987b2756",
										"exec": [
											"tests[\"Create Schema\"] = responseBody.has(\"successfully created\");\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"{{schema_name}}\"\n}"
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								},
								"description": "This method is used to create a schema.   A Schema can be thought of as a container of tables that are independent from tables in other schemas. An example might be the Schema dev could have a table called dog. The Schema Prod could also have a table called dog. \n\n<ul>\n\n<li><b>operation</b><i> (required)</i> - must always be create_schema</li>\n\n<li><b>schema</b><i> (required)</i> - name of the schema you are creating</li>\n\n</ul>"
							},
							"response": [
								{
									"name": "Create dev Schema",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"dev\"\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "45",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 16:52:45 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2d-GPJz4Nu7aSF7N/KODFK3o/TNPUw\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"schema dev successfully created\"}"
								}
							]
						},
						{
							"name": "create_table Server",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ca73d8d1-bea4-4e20-93d0-2526fca75ce7",
										"exec": [
											"tests[\"Create Table\"] = responseBody.has(\"successfully created.\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"{{schema_name}}\",\n  \"table\":\"{{table_name}}\",\n  \"hash_attribute\": \"id\"\n}"
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								},
								"description": "This method is used to create a table under the specified schema. \n\n<ul>\n\n<li><b>operation </b><i>(required)</i> - must always be create_table</li>\n\n<li><b>schema</b><i> (required)</i> - name of the schema where you want your table to live </li>\n\n<li><b>table </b><i>(required)</i> - name of the table you are creating</li>\n\n<li><b>hash_attribute</b><i> (required)</i> - hash for the table </li>"
							},
							"response": [
								{
									"name": "Create dev.dog Table",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"dev\",\n  \"table\":\"dog\",\n  \"hash_attribute\": \"id\"\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "49",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:00:40 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"31-2FV9i2eJXU1F9rNuA4B9T7Vu7EA\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"table dev.dog successfully created.\"}"
								}
							]
						},
						{
							"name": "create_schema truck 1",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "98bf379b-989a-4bd3-a39b-199314ab4c9e",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "bc1b74cb-7f6b-469e-ab44-d3cb987b2756",
										"exec": [
											"tests[\"Create Schema\"] = responseBody.has(\"successfully created\");\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"{{schema_name}}\"\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_1_HOST}}:{{TRUCK_1_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_1_HOST}}"
									],
									"port": "{{TRUCK_1_HDB_PORT}}"
								},
								"description": "This method is used to create a schema.   A Schema can be thought of as a container of tables that are independent from tables in other schemas. An example might be the Schema dev could have a table called dog. The Schema Prod could also have a table called dog. \n\n<ul>\n\n<li><b>operation</b><i> (required)</i> - must always be create_schema</li>\n\n<li><b>schema</b><i> (required)</i> - name of the schema you are creating</li>\n\n</ul>"
							},
							"response": [
								{
									"name": "Create dev Schema",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"dev\"\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "45",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 16:52:45 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2d-GPJz4Nu7aSF7N/KODFK3o/TNPUw\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"schema dev successfully created\"}"
								}
							]
						},
						{
							"name": "create_table truck 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ca73d8d1-bea4-4e20-93d0-2526fca75ce7",
										"exec": [
											"tests[\"Create Table\"] = responseBody.has(\"successfully created.\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"{{schema_name}}\",\n  \"table\":\"{{table_name}}\",\n  \"hash_attribute\": \"id\"\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_1_HOST}}:{{TRUCK_1_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_1_HOST}}"
									],
									"port": "{{TRUCK_1_HDB_PORT}}"
								},
								"description": "This method is used to create a table under the specified schema. \n\n<ul>\n\n<li><b>operation </b><i>(required)</i> - must always be create_table</li>\n\n<li><b>schema</b><i> (required)</i> - name of the schema where you want your table to live </li>\n\n<li><b>table </b><i>(required)</i> - name of the table you are creating</li>\n\n<li><b>hash_attribute</b><i> (required)</i> - hash for the table </li>"
							},
							"response": [
								{
									"name": "Create dev.dog Table",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"dev\",\n  \"table\":\"dog\",\n  \"hash_attribute\": \"id\"\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "49",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:00:40 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"31-2FV9i2eJXU1F9rNuA4B9T7Vu7EA\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"table dev.dog successfully created.\"}"
								}
							]
						},
						{
							"name": "create_schema truck 2",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "98bf379b-989a-4bd3-a39b-199314ab4c9e",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "bc1b74cb-7f6b-469e-ab44-d3cb987b2756",
										"exec": [
											"tests[\"Create Schema\"] = responseBody.has(\"successfully created\");\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"{{schema_name}}\"\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_2_HOST}}:{{TRUCK_2_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_2_HOST}}"
									],
									"port": "{{TRUCK_2_HDB_PORT}}"
								},
								"description": "This method is used to create a schema.   A Schema can be thought of as a container of tables that are independent from tables in other schemas. An example might be the Schema dev could have a table called dog. The Schema Prod could also have a table called dog. \n\n<ul>\n\n<li><b>operation</b><i> (required)</i> - must always be create_schema</li>\n\n<li><b>schema</b><i> (required)</i> - name of the schema you are creating</li>\n\n</ul>"
							},
							"response": [
								{
									"name": "Create dev Schema",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"dev\"\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "45",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 16:52:45 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2d-GPJz4Nu7aSF7N/KODFK3o/TNPUw\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"schema dev successfully created\"}"
								}
							]
						},
						{
							"name": "create_table truck 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ca73d8d1-bea4-4e20-93d0-2526fca75ce7",
										"exec": [
											"tests[\"Create Table\"] = responseBody.has(\"successfully created.\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"{{schema_name}}\",\n  \"table\":\"{{table_name}}\",\n  \"hash_attribute\": \"id\"\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_2_HOST}}:{{TRUCK_2_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_2_HOST}}"
									],
									"port": "{{TRUCK_2_HDB_PORT}}"
								},
								"description": "This method is used to create a table under the specified schema. \n\n<ul>\n\n<li><b>operation </b><i>(required)</i> - must always be create_table</li>\n\n<li><b>schema</b><i> (required)</i> - name of the schema where you want your table to live </li>\n\n<li><b>table </b><i>(required)</i> - name of the table you are creating</li>\n\n<li><b>hash_attribute</b><i> (required)</i> - hash for the table </li>"
							},
							"response": [
								{
									"name": "Create dev.dog Table",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"dev\",\n  \"table\":\"dog\",\n  \"hash_attribute\": \"id\"\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "49",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:00:40 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"31-2FV9i2eJXU1F9rNuA4B9T7Vu7EA\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"table dev.dog successfully created.\"}"
								}
							]
						},
						{
							"name": "Add node Truck 1 to Server",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f6cea83-97f3-40be-b1a9-2fa87b2ed813",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "5b6432d9-21dd-4934-be45-3e75391fee05",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{HDB_PASS}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{HDB_USER}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"operation\":\"add_node\",\n\t\"name\":\"{{TRUCK_1_NAME}}\" ,\n\t\"port\": \"{{TRUCK_1_CLUSTER_PORT}}\",\n\t\"host\":\"{{TRUCK_1_HOST}}\",\n\t\"subscriptions\": [\n      {\n        \"channel\":\"{{schema_name}}:{{table_name}}\",\n        \"publish\": true,\n        \"subscribe\": false\n      }\n    ]\n}"
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								}
							},
							"response": []
						},
						{
							"name": "Add node Truck 2 to server",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f6cea83-97f3-40be-b1a9-2fa87b2ed813",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "5b6432d9-21dd-4934-be45-3e75391fee05",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{HDB_PASS}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{HDB_USER}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"operation\":\"add_node\",\n\t\"name\":\"{{TRUCK_2_NAME}}\" ,\n\t\"port\": \"{{TRUCK_2_CLUSTER_PORT}}\",\n\t\"host\":\"{{TRUCK_2_HOST}}\",\n\t\"subscriptions\": [\n      {\n        \"channel\":\"{{schema_name}}:{{table_name}}\",\n        \"publish\": true,\n        \"subscribe\": false\n      }\n    ]\n}"
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								}
							},
							"response": []
						},
						{
							"name": "insert into server",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af56a92a-ef50-4c72-b026-a24a7177a233",
										"exec": [
											"tests[\"Write Single Record\"] = responseBody.has(\"successfully wrote 1 records\");",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"{{schema_name}}\",\n\"table\":\"{{table_name}}\",\n\"records\": [\n  {\n    \"name\":\"Insert Test Server\",\n    \"breed\":\"Insert Test Server\",\n    \"id\":\"7000\",\n    \"age\":5\n    \n  }\n]\n\n}"
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								},
								"description": "Method for inserting records. Can be used for a single insert or multiple records.  If a large amount of records are being updated, we recommend using the .CSV load method.  See our article on importing data sets here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115002007573-1Gigabyte-Limit-to-Request-Bodies\n\n<i>NOTE: Hash value of the inserted JSON record MUST be supplied on insert.  </i>\n\n<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'insert'</li>\n\n<li><b>schema</b><i> (required)</i> - schema where the table you are inserting records into lives</li>\n\n<li><b>table</b><i> (required)</i> - table where you want to insert records </li>\n\n<li><b>records</b><i> (required)</i> - array of one or more records for insert</li>\n</ul>"
							},
							"response": [
								{
									"name": "NoSQL Insert into dev.dog",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"dev\",\n\"table\":\"dog\",\n\"records\": [\n  {\n    \"name\":\"Harper\",\n    \"breed\":\"Mutt\",\n    \"id\":\"1\",\n    \"age\":5\n    \n  },\n  {\n    \"name\":\"Penny\",\n    \"breed\":\"Mutt\",\n    \"id\":\"3\",\n    \"age\":5\n    \n  }\n]\n\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "42",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:43:34 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2a-+I7U4Tpdia9SawmsfcyNUq20tzU\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"successfully wrote 2 records\"}"
								}
							]
						},
						{
							"name": "insert into truck 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af56a92a-ef50-4c72-b026-a24a7177a233",
										"exec": [
											"tests[\"Write Single Record\"] = responseBody.has(\"successfully wrote 1 records\");",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"{{schema_name}}\",\n\"table\":\"{{table_name}}\",\n\"records\": [\n  {\n    \"name\":\"Insert Test truck 1\",\n    \"breed\":\"Insert Test truck 1\",\n    \"id\":\"7100\",\n    \"age\":5\n    \n  }\n]\n\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_1_HOST}}:{{TRUCK_1_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_1_HOST}}"
									],
									"port": "{{TRUCK_1_HDB_PORT}}"
								},
								"description": "Method for inserting records. Can be used for a single insert or multiple records.  If a large amount of records are being updated, we recommend using the .CSV load method.  See our article on importing data sets here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115002007573-1Gigabyte-Limit-to-Request-Bodies\n\n<i>NOTE: Hash value of the inserted JSON record MUST be supplied on insert.  </i>\n\n<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'insert'</li>\n\n<li><b>schema</b><i> (required)</i> - schema where the table you are inserting records into lives</li>\n\n<li><b>table</b><i> (required)</i> - table where you want to insert records </li>\n\n<li><b>records</b><i> (required)</i> - array of one or more records for insert</li>\n</ul>"
							},
							"response": [
								{
									"name": "NoSQL Insert into dev.dog",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"dev\",\n\"table\":\"dog\",\n\"records\": [\n  {\n    \"name\":\"Harper\",\n    \"breed\":\"Mutt\",\n    \"id\":\"1\",\n    \"age\":5\n    \n  },\n  {\n    \"name\":\"Penny\",\n    \"breed\":\"Mutt\",\n    \"id\":\"3\",\n    \"age\":5\n    \n  }\n]\n\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "42",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:43:34 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2a-+I7U4Tpdia9SawmsfcyNUq20tzU\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"successfully wrote 2 records\"}"
								}
							]
						},
						{
							"name": "insert into truck 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af56a92a-ef50-4c72-b026-a24a7177a233",
										"exec": [
											"tests[\"Write Single Record\"] = responseBody.has(\"successfully wrote 1 records\");",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"{{schema_name}}\",\n\"table\":\"{{table_name}}\",\n\"records\": [\n  {\n    \"name\":\"Insert Test truck 2\",\n    \"breed\":\"Insert Test truck 2\",\n    \"id\":\"7200\",\n    \"age\":5\n    \n  }\n]\n\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_2_HOST}}:{{TRUCK_2_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_2_HOST}}"
									],
									"port": "{{TRUCK_2_HDB_PORT}}"
								},
								"description": "Method for inserting records. Can be used for a single insert or multiple records.  If a large amount of records are being updated, we recommend using the .CSV load method.  See our article on importing data sets here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115002007573-1Gigabyte-Limit-to-Request-Bodies\n\n<i>NOTE: Hash value of the inserted JSON record MUST be supplied on insert.  </i>\n\n<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'insert'</li>\n\n<li><b>schema</b><i> (required)</i> - schema where the table you are inserting records into lives</li>\n\n<li><b>table</b><i> (required)</i> - table where you want to insert records </li>\n\n<li><b>records</b><i> (required)</i> - array of one or more records for insert</li>\n</ul>"
							},
							"response": [
								{
									"name": "NoSQL Insert into dev.dog",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"dev\",\n\"table\":\"dog\",\n\"records\": [\n  {\n    \"name\":\"Harper\",\n    \"breed\":\"Mutt\",\n    \"id\":\"1\",\n    \"age\":5\n    \n  },\n  {\n    \"name\":\"Penny\",\n    \"breed\":\"Mutt\",\n    \"id\":\"3\",\n    \"age\":5\n    \n  }\n]\n\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "42",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:43:34 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2a-+I7U4Tpdia9SawmsfcyNUq20tzU\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"successfully wrote 2 records\"}"
								}
							]
						},
						{
							"name": "create_schema non sub",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "98bf379b-989a-4bd3-a39b-199314ab4c9e",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "bc1b74cb-7f6b-469e-ab44-d3cb987b2756",
										"exec": [
											"tests[\"Create Schema\"] = responseBody.has(\"successfully created\");\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"random_test_7_schema\"\n}"
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								},
								"description": "This method is used to create a schema.   A Schema can be thought of as a container of tables that are independent from tables in other schemas. An example might be the Schema dev could have a table called dog. The Schema Prod could also have a table called dog. \n\n<ul>\n\n<li><b>operation</b><i> (required)</i> - must always be create_schema</li>\n\n<li><b>schema</b><i> (required)</i> - name of the schema you are creating</li>\n\n</ul>"
							},
							"response": [
								{
									"name": "Create dev Schema",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"dev\"\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "45",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 16:52:45 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2d-GPJz4Nu7aSF7N/KODFK3o/TNPUw\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"schema dev successfully created\"}"
								}
							]
						},
						{
							"name": "Remove node truck 2 from server",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f6cea83-97f3-40be-b1a9-2fa87b2ed813",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{HDB_PASS}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{HDB_USER}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"operation\":\"remove_node\",\n\t\"name\":\"{{TRUCK_2_NAME}}\"\n}"
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								}
							},
							"response": []
						},
						{
							"name": "Remove node truck 1 from server",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f6cea83-97f3-40be-b1a9-2fa87b2ed813",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{HDB_PASS}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{HDB_USER}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"operation\":\"remove_node\",\n\t\"name\":\"{{TRUCK_1_NAME}}\"\n}"
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "580e0919-bf70-4820-8812-27486209385b",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a3d8c4e3-043d-4ce8-b3f6-d86c27385119",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Test Case 8 - Publish",
					"item": [
						{
							"name": "Variable setup expect no response",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "3bc3288b-cad7-4b9e-8917-2fc1be382477",
										"exec": [
											"pm.environment.set(\"schema_name\", \"schema_test_case_8\");",
											"pm.environment.set(\"table_name\", \"test_case_8\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								}
							},
							"response": []
						},
						{
							"name": "create_schema Server",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "98bf379b-989a-4bd3-a39b-199314ab4c9e",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "bc1b74cb-7f6b-469e-ab44-d3cb987b2756",
										"exec": [
											"tests[\"Create Schema\"] = responseBody.has(\"successfully created\");\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"{{schema_name}}\"\n}"
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								},
								"description": "This method is used to create a schema.   A Schema can be thought of as a container of tables that are independent from tables in other schemas. An example might be the Schema dev could have a table called dog. The Schema Prod could also have a table called dog. \n\n<ul>\n\n<li><b>operation</b><i> (required)</i> - must always be create_schema</li>\n\n<li><b>schema</b><i> (required)</i> - name of the schema you are creating</li>\n\n</ul>"
							},
							"response": [
								{
									"name": "Create dev Schema",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"dev\"\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "45",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 16:52:45 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2d-GPJz4Nu7aSF7N/KODFK3o/TNPUw\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"schema dev successfully created\"}"
								}
							]
						},
						{
							"name": "create_table Server",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ca73d8d1-bea4-4e20-93d0-2526fca75ce7",
										"exec": [
											"tests[\"Create Table\"] = responseBody.has(\"successfully created.\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"{{schema_name}}\",\n  \"table\":\"{{table_name}}\",\n  \"hash_attribute\": \"id\"\n}"
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								},
								"description": "This method is used to create a table under the specified schema. \n\n<ul>\n\n<li><b>operation </b><i>(required)</i> - must always be create_table</li>\n\n<li><b>schema</b><i> (required)</i> - name of the schema where you want your table to live </li>\n\n<li><b>table </b><i>(required)</i> - name of the table you are creating</li>\n\n<li><b>hash_attribute</b><i> (required)</i> - hash for the table </li>"
							},
							"response": [
								{
									"name": "Create dev.dog Table",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"dev\",\n  \"table\":\"dog\",\n  \"hash_attribute\": \"id\"\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "49",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:00:40 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"31-2FV9i2eJXU1F9rNuA4B9T7Vu7EA\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"table dev.dog successfully created.\"}"
								}
							]
						},
						{
							"name": "create_schema truck 1",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "98bf379b-989a-4bd3-a39b-199314ab4c9e",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "bc1b74cb-7f6b-469e-ab44-d3cb987b2756",
										"exec": [
											"tests[\"Create Schema\"] = responseBody.has(\"successfully created\");\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"{{schema_name}}\"\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_1_HOST}}:{{TRUCK_1_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_1_HOST}}"
									],
									"port": "{{TRUCK_1_HDB_PORT}}"
								},
								"description": "This method is used to create a schema.   A Schema can be thought of as a container of tables that are independent from tables in other schemas. An example might be the Schema dev could have a table called dog. The Schema Prod could also have a table called dog. \n\n<ul>\n\n<li><b>operation</b><i> (required)</i> - must always be create_schema</li>\n\n<li><b>schema</b><i> (required)</i> - name of the schema you are creating</li>\n\n</ul>"
							},
							"response": [
								{
									"name": "Create dev Schema",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"dev\"\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "45",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 16:52:45 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2d-GPJz4Nu7aSF7N/KODFK3o/TNPUw\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"schema dev successfully created\"}"
								}
							]
						},
						{
							"name": "create_table truck 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ca73d8d1-bea4-4e20-93d0-2526fca75ce7",
										"exec": [
											"tests[\"Create Table\"] = responseBody.has(\"successfully created.\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"{{schema_name}}\",\n  \"table\":\"{{table_name}}\",\n  \"hash_attribute\": \"id\"\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_1_HOST}}:{{TRUCK_1_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_1_HOST}}"
									],
									"port": "{{TRUCK_1_HDB_PORT}}"
								},
								"description": "This method is used to create a table under the specified schema. \n\n<ul>\n\n<li><b>operation </b><i>(required)</i> - must always be create_table</li>\n\n<li><b>schema</b><i> (required)</i> - name of the schema where you want your table to live </li>\n\n<li><b>table </b><i>(required)</i> - name of the table you are creating</li>\n\n<li><b>hash_attribute</b><i> (required)</i> - hash for the table </li>"
							},
							"response": [
								{
									"name": "Create dev.dog Table",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"dev\",\n  \"table\":\"dog\",\n  \"hash_attribute\": \"id\"\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "49",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:00:40 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"31-2FV9i2eJXU1F9rNuA4B9T7Vu7EA\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"table dev.dog successfully created.\"}"
								}
							]
						},
						{
							"name": "create_schema truck 2",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "98bf379b-989a-4bd3-a39b-199314ab4c9e",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "bc1b74cb-7f6b-469e-ab44-d3cb987b2756",
										"exec": [
											"tests[\"Create Schema\"] = responseBody.has(\"successfully created\");\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"{{schema_name}}\"\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_2_HOST}}:{{TRUCK_2_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_2_HOST}}"
									],
									"port": "{{TRUCK_2_HDB_PORT}}"
								},
								"description": "This method is used to create a schema.   A Schema can be thought of as a container of tables that are independent from tables in other schemas. An example might be the Schema dev could have a table called dog. The Schema Prod could also have a table called dog. \n\n<ul>\n\n<li><b>operation</b><i> (required)</i> - must always be create_schema</li>\n\n<li><b>schema</b><i> (required)</i> - name of the schema you are creating</li>\n\n</ul>"
							},
							"response": [
								{
									"name": "Create dev Schema",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"dev\"\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "45",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 16:52:45 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2d-GPJz4Nu7aSF7N/KODFK3o/TNPUw\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"schema dev successfully created\"}"
								}
							]
						},
						{
							"name": "create_table truck 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ca73d8d1-bea4-4e20-93d0-2526fca75ce7",
										"exec": [
											"tests[\"Create Table\"] = responseBody.has(\"successfully created.\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"{{schema_name}}\",\n  \"table\":\"{{table_name}}\",\n  \"hash_attribute\": \"id\"\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_2_HOST}}:{{TRUCK_2_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_2_HOST}}"
									],
									"port": "{{TRUCK_2_HDB_PORT}}"
								},
								"description": "This method is used to create a table under the specified schema. \n\n<ul>\n\n<li><b>operation </b><i>(required)</i> - must always be create_table</li>\n\n<li><b>schema</b><i> (required)</i> - name of the schema where you want your table to live </li>\n\n<li><b>table </b><i>(required)</i> - name of the table you are creating</li>\n\n<li><b>hash_attribute</b><i> (required)</i> - hash for the table </li>"
							},
							"response": [
								{
									"name": "Create dev.dog Table",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"dev\",\n  \"table\":\"dog\",\n  \"hash_attribute\": \"id\"\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "49",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:00:40 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"31-2FV9i2eJXU1F9rNuA4B9T7Vu7EA\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"table dev.dog successfully created.\"}"
								}
							]
						},
						{
							"name": "Add node Truck 1 to Server",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f6cea83-97f3-40be-b1a9-2fa87b2ed813",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "5b6432d9-21dd-4934-be45-3e75391fee05",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{HDB_PASS}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{HDB_USER}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"operation\":\"add_node\",\n\t\"name\":\"{{TRUCK_1_NAME}}\" ,\n\t\"port\": \"{{TRUCK_1_CLUSTER_PORT}}\",\n\t\"host\":\"{{TRUCK_1_HOST}}\",\n\t\"subscriptions\": [\n      {\n        \"channel\":\"{{schema_name}}:{{table_name}}\",\n        \"publish\": true,\n        \"subscribe\": true\n      }\n    ]\n}"
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								}
							},
							"response": []
						},
						{
							"name": "Add node Truck 2 to server",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f6cea83-97f3-40be-b1a9-2fa87b2ed813",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "5b6432d9-21dd-4934-be45-3e75391fee05",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{HDB_PASS}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{HDB_USER}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"operation\":\"add_node\",\n\t\"name\":\"{{TRUCK_2_NAME}}\" ,\n\t\"port\": \"{{TRUCK_2_CLUSTER_PORT}}\",\n\t\"host\":\"{{TRUCK_2_HOST}}\",\n\t\"subscriptions\": [\n      {\n        \"channel\":\"{{schema_name}}:{{table_name}}\",\n        \"publish\": true,\n        \"subscribe\": false\n      }\n    ]\n}"
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								}
							},
							"response": []
						},
						{
							"name": "insert into truck 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af56a92a-ef50-4c72-b026-a24a7177a233",
										"exec": [
											"tests[\"Write Single Record\"] = responseBody.has(\"successfully wrote 1 records\");",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"{{schema_name}}\",\n\"table\":\"{{table_name}}\",\n\"records\": [\n  {\n    \"name\":\"Insert Test truck 1\",\n    \"breed\":\"Insert Test truck 1\",\n    \"id\":\"8100\",\n    \"age\":5\n    \n  }\n]\n\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_1_HOST}}:{{TRUCK_1_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_1_HOST}}"
									],
									"port": "{{TRUCK_1_HDB_PORT}}"
								},
								"description": "Method for inserting records. Can be used for a single insert or multiple records.  If a large amount of records are being updated, we recommend using the .CSV load method.  See our article on importing data sets here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115002007573-1Gigabyte-Limit-to-Request-Bodies\n\n<i>NOTE: Hash value of the inserted JSON record MUST be supplied on insert.  </i>\n\n<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'insert'</li>\n\n<li><b>schema</b><i> (required)</i> - schema where the table you are inserting records into lives</li>\n\n<li><b>table</b><i> (required)</i> - table where you want to insert records </li>\n\n<li><b>records</b><i> (required)</i> - array of one or more records for insert</li>\n</ul>"
							},
							"response": [
								{
									"name": "NoSQL Insert into dev.dog",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"dev\",\n\"table\":\"dog\",\n\"records\": [\n  {\n    \"name\":\"Harper\",\n    \"breed\":\"Mutt\",\n    \"id\":\"1\",\n    \"age\":5\n    \n  },\n  {\n    \"name\":\"Penny\",\n    \"breed\":\"Mutt\",\n    \"id\":\"3\",\n    \"age\":5\n    \n  }\n]\n\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "42",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:43:34 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2a-+I7U4Tpdia9SawmsfcyNUq20tzU\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"successfully wrote 2 records\"}"
								}
							]
						},
						{
							"name": "insert into server",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af56a92a-ef50-4c72-b026-a24a7177a233",
										"exec": [
											"tests[\"Write Single Record\"] = responseBody.has(\"successfully wrote 1 records\");",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"{{schema_name}}\",\n\"table\":\"{{table_name}}\",\n\"records\": [\n  {\n    \"name\":\"Insert Test Server\",\n    \"breed\":\"Insert Test Server\",\n    \"id\":\"8000\",\n    \"age\":5\n    \n  }\n]\n\n}"
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								},
								"description": "Method for inserting records. Can be used for a single insert or multiple records.  If a large amount of records are being updated, we recommend using the .CSV load method.  See our article on importing data sets here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115002007573-1Gigabyte-Limit-to-Request-Bodies\n\n<i>NOTE: Hash value of the inserted JSON record MUST be supplied on insert.  </i>\n\n<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'insert'</li>\n\n<li><b>schema</b><i> (required)</i> - schema where the table you are inserting records into lives</li>\n\n<li><b>table</b><i> (required)</i> - table where you want to insert records </li>\n\n<li><b>records</b><i> (required)</i> - array of one or more records for insert</li>\n</ul>"
							},
							"response": [
								{
									"name": "NoSQL Insert into dev.dog",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"dev\",\n\"table\":\"dog\",\n\"records\": [\n  {\n    \"name\":\"Harper\",\n    \"breed\":\"Mutt\",\n    \"id\":\"1\",\n    \"age\":5\n    \n  },\n  {\n    \"name\":\"Penny\",\n    \"breed\":\"Mutt\",\n    \"id\":\"3\",\n    \"age\":5\n    \n  }\n]\n\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "42",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:43:34 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2a-+I7U4Tpdia9SawmsfcyNUq20tzU\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"successfully wrote 2 records\"}"
								}
							]
						},
						{
							"name": "insert into truck 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af56a92a-ef50-4c72-b026-a24a7177a233",
										"exec": [
											"tests[\"Write Single Record\"] = responseBody.has(\"successfully wrote 1 records\");",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"{{schema_name}}\",\n\"table\":\"{{table_name}}\",\n\"records\": [\n  {\n    \"name\":\"Insert Test truck 2\",\n    \"breed\":\"Insert Test truck 2\",\n    \"id\":\"8200\",\n    \"age\":5\n    \n  }\n]\n\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_2_HOST}}:{{TRUCK_2_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_2_HOST}}"
									],
									"port": "{{TRUCK_2_HDB_PORT}}"
								},
								"description": "Method for inserting records. Can be used for a single insert or multiple records.  If a large amount of records are being updated, we recommend using the .CSV load method.  See our article on importing data sets here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115002007573-1Gigabyte-Limit-to-Request-Bodies\n\n<i>NOTE: Hash value of the inserted JSON record MUST be supplied on insert.  </i>\n\n<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'insert'</li>\n\n<li><b>schema</b><i> (required)</i> - schema where the table you are inserting records into lives</li>\n\n<li><b>table</b><i> (required)</i> - table where you want to insert records </li>\n\n<li><b>records</b><i> (required)</i> - array of one or more records for insert</li>\n</ul>"
							},
							"response": [
								{
									"name": "NoSQL Insert into dev.dog",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"dev\",\n\"table\":\"dog\",\n\"records\": [\n  {\n    \"name\":\"Harper\",\n    \"breed\":\"Mutt\",\n    \"id\":\"1\",\n    \"age\":5\n    \n  },\n  {\n    \"name\":\"Penny\",\n    \"breed\":\"Mutt\",\n    \"id\":\"3\",\n    \"age\":5\n    \n  }\n]\n\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "42",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 17:43:34 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2a-+I7U4Tpdia9SawmsfcyNUq20tzU\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"successfully wrote 2 records\"}"
								}
							]
						},
						{
							"name": "create_schema non sub",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "98bf379b-989a-4bd3-a39b-199314ab4c9e",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "bc1b74cb-7f6b-469e-ab44-d3cb987b2756",
										"exec": [
											"tests[\"Create Schema\"] = responseBody.has(\"successfully created\");\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{username}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"random_test_8_schema\"\n}"
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								},
								"description": "This method is used to create a schema.   A Schema can be thought of as a container of tables that are independent from tables in other schemas. An example might be the Schema dev could have a table called dog. The Schema Prod could also have a table called dog. \n\n<ul>\n\n<li><b>operation</b><i> (required)</i> - must always be create_schema</li>\n\n<li><b>schema</b><i> (required)</i> - name of the schema you are creating</li>\n\n</ul>"
							},
							"response": [
								{
									"name": "Create dev Schema",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"name": "Authorization",
												"value": "Basic SERCX0FETUlOOjE0MDA="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"dev\"\n}"
										},
										"url": {
											"raw": "http://localhost:9925",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "9925"
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "connection",
											"value": "keep-alive",
											"name": "connection",
											"description": ""
										},
										{
											"key": "content-length",
											"value": "45",
											"name": "content-length",
											"description": ""
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8",
											"name": "content-type",
											"description": ""
										},
										{
											"key": "date",
											"value": "Fri, 01 Sep 2017 16:52:45 GMT",
											"name": "date",
											"description": ""
										},
										{
											"key": "etag",
											"value": "W/\"2d-GPJz4Nu7aSF7N/KODFK3o/TNPUw\"",
											"name": "etag",
											"description": ""
										},
										{
											"key": "x-powered-by",
											"value": "HarperDB",
											"name": "x-powered-by",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\"message\":\"schema dev successfully created\"}"
								}
							]
						},
						{
							"name": "Remove node truck 2 from server",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f6cea83-97f3-40be-b1a9-2fa87b2ed813",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{HDB_PASS}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{HDB_USER}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"operation\":\"remove_node\",\n\t\"name\":\"{{TRUCK_2_NAME}}\"\n}"
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								}
							},
							"response": []
						},
						{
							"name": "Remove node truck 1 from server",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f6cea83-97f3-40be-b1a9-2fa87b2ed813",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{HDB_PASS}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{HDB_USER}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"operation\":\"remove_node\",\n\t\"name\":\"{{TRUCK_1_NAME}}\"\n}"
								},
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_HDB_PORT}}"
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "580e0919-bf70-4820-8812-27486209385b",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a3d8c4e3-043d-4ce8-b3f6-d86c27385119",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Clean Up",
					"item": [
						{
							"name": "Remove node Truck 2 from truck 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f6cea83-97f3-40be-b1a9-2fa87b2ed813",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{HDB_PASS}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{HDB_USER}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"operation\":\"remove_node\",\n\t\"name\":\"{{TRUCK_2_NAME}}\"\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_1_HOST}}:{{TRUCK_1_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_1_HOST}}"
									],
									"port": "{{TRUCK_1_HDB_PORT}}"
								}
							},
							"response": []
						},
						{
							"name": "Remove node server from truck 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f6cea83-97f3-40be-b1a9-2fa87b2ed813",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{HDB_PASS}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{HDB_USER}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"operation\":\"remove_node\",\n\t\"name\":\"{{SERVER_NAME}}\"\n}"
								},
								"url": {
									"raw": "http://{{TRUCK_2_HOST}}:{{TRUCK_2_HDB_PORT}}",
									"protocol": "http",
									"host": [
										"{{TRUCK_2_HOST}}"
									],
									"port": "{{TRUCK_2_HDB_PORT}}"
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "85d2bb2b-a212-4b40-8de7-a50244289542",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "254fb390-cbda-40c8-b05c-8bc94d891ed6",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}
{
	"info": {
		"_postman_id": "e42a82e3-707f-481c-8597-54e8209410c2",
		"name": "Clustering Test",
		"description": "Basic 2 node clustering register and data load.\nJSON ONLY.. \nSQL does not do across node data query.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "1. Configure Server",
			"item": [
				{
					"name": "Get Fingerprint",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c3c689de-425f-4538-a7c9-4c2c2a2c974e",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"test fingerprint returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData['fingerprint'] !== undefined);",
									"    pm.environment.set(\"fingerprint\", jsonData['fingerprint']);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{HDB_PASS}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{HDB_USER}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46MTQwMA=="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"get_fingerprint\"\n}"
						},
						"url": {
							"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{SERVER_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						},
						"description": "We first need to create a Schema.  A Schema can be thought of as a container of tables that are independent from tables in other schemas.  An example might be the Schema dev with a table called dog.  The Schema prod may also have a table dog. \n\nNote that if you see the error response \"Cannot complete request: User 'admin' not found\", you need to set the basic auth to the user and password you entered during the install process.  What the heck is basic auth?  Read our article on it here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115010250207-Basic-Auth-with-Postman"
					},
					"response": [
						{
							"name": "Create Schema",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"name": "Authorization",
										"value": "Basic ZWxpOnBhc3M="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"create_schema\",\n\"schema\":\"dev\"\n}"
								},
								"url": {
									"raw": "http://localhost:9925",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "9925"
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop",
									"name": "access-control-allow-origin",
									"description": ""
								},
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "45",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 13 Oct 2017 21:14:04 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"2d-GPJz4Nu7aSF7N/KODFK3o/TNPUw\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "vary",
									"value": "Origin",
									"name": "vary",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"message\":\"schema dev successfully created\"}"
						}
					]
				},
				{
					"name": "Call HDB LMS",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c3c689de-425f-4538-a7c9-4c2c2a2c974e",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"test fingerprint returned\", function () {",
									"    pm.environment.set(\"license\", pm.response.text());    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{LMS_PASS}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{LMS_USER}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46MTQwMA=="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"fingerprint\": \"{{fingerprint}}\",\n\t\"company\":\"{{COMPANY}}\",\n\t\"exp_date\":\"2040-09-11\"\n}"
						},
						"url": {
							"raw": "http://{{LMS_HOST}}",
							"protocol": "http",
							"host": [
								"{{LMS_HOST}}"
							]
						},
						"description": "We first need to create a Schema.  A Schema can be thought of as a container of tables that are independent from tables in other schemas.  An example might be the Schema dev with a table called dog.  The Schema prod may also have a table dog. \n\nNote that if you see the error response \"Cannot complete request: User 'admin' not found\", you need to set the basic auth to the user and password you entered during the install process.  What the heck is basic auth?  Read our article on it here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115010250207-Basic-Auth-with-Postman"
					},
					"response": [
						{
							"name": "Create Schema",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"name": "Authorization",
										"value": "Basic ZWxpOnBhc3M="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"create_schema\",\n\"schema\":\"dev\"\n}"
								},
								"url": {
									"raw": "http://localhost:9925",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "9925"
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop",
									"name": "access-control-allow-origin",
									"description": ""
								},
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "45",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 13 Oct 2017 21:14:04 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"2d-GPJz4Nu7aSF7N/KODFK3o/TNPUw\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "vary",
									"value": "Origin",
									"name": "vary",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"message\":\"schema dev successfully created\"}"
						}
					]
				},
				{
					"name": "Set License Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "056aa65e-6a84-4043-9396-1ad303277ea8",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"test fingerprint returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData['message'] === \"Wrote license key file.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{HDB_PASS}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{HDB_USER}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46MTQwMA=="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"operation\":\"set_license\",\n\"key\":\"{{license}}\",\n\"company\": \"{{COMPANY}}\"\n}"
						},
						"url": {
							"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{SERVER_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						},
						"description": "We first need to create a Schema.  A Schema can be thought of as a container of tables that are independent from tables in other schemas.  An example might be the Schema dev with a table called dog.  The Schema prod may also have a table dog. \n\nNote that if you see the error response \"Cannot complete request: User 'admin' not found\", you need to set the basic auth to the user and password you entered during the install process.  What the heck is basic auth?  Read our article on it here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115010250207-Basic-Auth-with-Postman"
					},
					"response": [
						{
							"name": "Create Schema",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"name": "Authorization",
										"value": "Basic ZWxpOnBhc3M="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"create_schema\",\n\"schema\":\"dev\"\n}"
								},
								"url": {
									"raw": "http://localhost:9925",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "9925"
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop",
									"name": "access-control-allow-origin",
									"description": ""
								},
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "45",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 13 Oct 2017 21:14:04 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"2d-GPJz4Nu7aSF7N/KODFK3o/TNPUw\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "vary",
									"value": "Origin",
									"name": "vary",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"message\":\"schema dev successfully created\"}"
						}
					]
				},
				{
					"name": "Configure Cluster Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5e4e982a-c39d-43eb-8496-fa6a0b0f20fd",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{HDB_PASS}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{HDB_USER}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46MTQwMA=="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\": \"configure_cluster\",\n\t\"clustering_enabled\": \"true\",\n\t\"clustering_port\": \"12345\",\n\t\"clustering_node_name\":\"{{SERVER_NAME}}\"\n}"
						},
						"url": {
							"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{SERVER_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						},
						"description": "We first need to create a Schema.  A Schema can be thought of as a container of tables that are independent from tables in other schemas.  An example might be the Schema dev with a table called dog.  The Schema prod may also have a table dog. \n\nNote that if you see the error response \"Cannot complete request: User 'admin' not found\", you need to set the basic auth to the user and password you entered during the install process.  What the heck is basic auth?  Read our article on it here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115010250207-Basic-Auth-with-Postman"
					},
					"response": [
						{
							"name": "Create Schema",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"name": "Authorization",
										"value": "Basic ZWxpOnBhc3M="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"create_schema\",\n\"schema\":\"dev\"\n}"
								},
								"url": {
									"raw": "http://localhost:9925",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "9925"
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop",
									"name": "access-control-allow-origin",
									"description": ""
								},
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "45",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 13 Oct 2017 21:14:04 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"2d-GPJz4Nu7aSF7N/KODFK3o/TNPUw\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "vary",
									"value": "Origin",
									"name": "vary",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"message\":\"schema dev successfully created\"}"
						}
					]
				},
				{
					"name": "Get Cluster Status",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{HDB_PASS}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{HDB_USER}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"cluster_status\"\n}"
						},
						"url": {
							"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{SERVER_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "9a881f61-ee4e-48fa-85f3-a1dbc8c1116c",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "764bfec7-3ddb-4c95-ba8a-7813b35592b5",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "2. Add and Configure Truck 1",
			"item": [
				{
					"name": "Get Fingerprint",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c3c689de-425f-4538-a7c9-4c2c2a2c974e",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"test fingerprint returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData['fingerprint'] !== undefined);",
									"    pm.environment.set(\"fingerprint\", jsonData['fingerprint']);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{HDB_PASS}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{HDB_USER}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46MTQwMA=="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"get_fingerprint\"\n}"
						},
						"url": {
							"raw": "http://{{TRUCK_1_HOST}}:{{TRUCK_1_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{TRUCK_1_HOST}}"
							],
							"port": "{{TRUCK_1_HDB_PORT}}"
						},
						"description": "We first need to create a Schema.  A Schema can be thought of as a container of tables that are independent from tables in other schemas.  An example might be the Schema dev with a table called dog.  The Schema prod may also have a table dog. \n\nNote that if you see the error response \"Cannot complete request: User 'admin' not found\", you need to set the basic auth to the user and password you entered during the install process.  What the heck is basic auth?  Read our article on it here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115010250207-Basic-Auth-with-Postman"
					},
					"response": [
						{
							"name": "Create Schema",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"name": "Authorization",
										"value": "Basic ZWxpOnBhc3M="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"create_schema\",\n\"schema\":\"dev\"\n}"
								},
								"url": {
									"raw": "http://localhost:9925",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "9925"
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop",
									"name": "access-control-allow-origin",
									"description": ""
								},
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "45",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 13 Oct 2017 21:14:04 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"2d-GPJz4Nu7aSF7N/KODFK3o/TNPUw\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "vary",
									"value": "Origin",
									"name": "vary",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"message\":\"schema dev successfully created\"}"
						}
					]
				},
				{
					"name": "Call HDB LMS",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c3c689de-425f-4538-a7c9-4c2c2a2c974e",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"test fingerprint returned\", function () {",
									"    pm.environment.set(\"license\", pm.response.text());    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{LMS_PASS}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{LMS_USER}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46MTQwMA=="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"fingerprint\": \"{{fingerprint}}\",\n\t\"company\":\"harperdb.io\",\n\t\"exp_date\":\"2040-09-11\"\n}\n"
						},
						"url": {
							"raw": "http://{{LMS_HOST}}",
							"protocol": "http",
							"host": [
								"{{LMS_HOST}}"
							]
						},
						"description": "We first need to create a Schema.  A Schema can be thought of as a container of tables that are independent from tables in other schemas.  An example might be the Schema dev with a table called dog.  The Schema prod may also have a table dog. \n\nNote that if you see the error response \"Cannot complete request: User 'admin' not found\", you need to set the basic auth to the user and password you entered during the install process.  What the heck is basic auth?  Read our article on it here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115010250207-Basic-Auth-with-Postman"
					},
					"response": [
						{
							"name": "Create Schema",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"name": "Authorization",
										"value": "Basic ZWxpOnBhc3M="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"create_schema\",\n\"schema\":\"dev\"\n}"
								},
								"url": {
									"raw": "http://localhost:9925",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "9925"
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop",
									"name": "access-control-allow-origin",
									"description": ""
								},
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "45",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 13 Oct 2017 21:14:04 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"2d-GPJz4Nu7aSF7N/KODFK3o/TNPUw\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "vary",
									"value": "Origin",
									"name": "vary",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"message\":\"schema dev successfully created\"}"
						}
					]
				},
				{
					"name": "Set License Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "056aa65e-6a84-4043-9396-1ad303277ea8",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"test fingerprint returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData['message'] === \"Wrote license key file.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{HDB_PASS}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{HDB_USER}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46MTQwMA=="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"operation\":\"set_license\",\n\"key\":\"{{license}}\",\n\"company\":\"{{COMPANY}}\"\n}"
						},
						"url": {
							"raw": "http://{{TRUCK_1_HOST}}:{{TRUCK_1_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{TRUCK_1_HOST}}"
							],
							"port": "{{TRUCK_1_HDB_PORT}}"
						},
						"description": "We first need to create a Schema.  A Schema can be thought of as a container of tables that are independent from tables in other schemas.  An example might be the Schema dev with a table called dog.  The Schema prod may also have a table dog. \n\nNote that if you see the error response \"Cannot complete request: User 'admin' not found\", you need to set the basic auth to the user and password you entered during the install process.  What the heck is basic auth?  Read our article on it here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115010250207-Basic-Auth-with-Postman"
					},
					"response": [
						{
							"name": "Create Schema",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"name": "Authorization",
										"value": "Basic ZWxpOnBhc3M="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"create_schema\",\n\"schema\":\"dev\"\n}"
								},
								"url": {
									"raw": "http://localhost:9925",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "9925"
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop",
									"name": "access-control-allow-origin",
									"description": ""
								},
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "45",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 13 Oct 2017 21:14:04 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"2d-GPJz4Nu7aSF7N/KODFK3o/TNPUw\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "vary",
									"value": "Origin",
									"name": "vary",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"message\":\"schema dev successfully created\"}"
						}
					]
				},
				{
					"name": "Configure Cluster Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5e4e982a-c39d-43eb-8496-fa6a0b0f20fd",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{HDB_PASS}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{HDB_USER}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46MTQwMA=="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\": \"configure_cluster\",\n\t\"clustering_enabled\": \"true\",\n\t\"clustering_port\": \"12345\",\n\t\"clustering_node_name\":\"{{TRUCK_1_NAME}}\"\n}"
						},
						"url": {
							"raw": "http://{{TRUCK_1_HOST}}:{{TRUCK_1_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{TRUCK_1_HOST}}"
							],
							"port": "{{TRUCK_1_HDB_PORT}}"
						},
						"description": "We first need to create a Schema.  A Schema can be thought of as a container of tables that are independent from tables in other schemas.  An example might be the Schema dev with a table called dog.  The Schema prod may also have a table dog. \n\nNote that if you see the error response \"Cannot complete request: User 'admin' not found\", you need to set the basic auth to the user and password you entered during the install process.  What the heck is basic auth?  Read our article on it here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115010250207-Basic-Auth-with-Postman"
					},
					"response": [
						{
							"name": "Create Schema",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"name": "Authorization",
										"value": "Basic ZWxpOnBhc3M="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"create_schema\",\n\"schema\":\"dev\"\n}"
								},
								"url": {
									"raw": "http://localhost:9925",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "9925"
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop",
									"name": "access-control-allow-origin",
									"description": ""
								},
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "45",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 13 Oct 2017 21:14:04 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"2d-GPJz4Nu7aSF7N/KODFK3o/TNPUw\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "vary",
									"value": "Origin",
									"name": "vary",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"message\":\"schema dev successfully created\"}"
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "9a881f61-ee4e-48fa-85f3-a1dbc8c1116c",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "764bfec7-3ddb-4c95-ba8a-7813b35592b5",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "3. Add and Configure Truck 2",
			"item": [
				{
					"name": "Get Fingerprint",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c3c689de-425f-4538-a7c9-4c2c2a2c974e",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"test fingerprint returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData['fingerprint'] !== undefined);",
									"    pm.environment.set(\"fingerprint\", jsonData['fingerprint']);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{HDB_PASS}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{HDB_USER}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46MTQwMA=="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"get_fingerprint\"\n}"
						},
						"url": {
							"raw": "http://{{TRUCK_2_HOST}}:{{TRUCK_2_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{TRUCK_2_HOST}}"
							],
							"port": "{{TRUCK_2_HDB_PORT}}"
						},
						"description": "We first need to create a Schema.  A Schema can be thought of as a container of tables that are independent from tables in other schemas.  An example might be the Schema dev with a table called dog.  The Schema prod may also have a table dog. \n\nNote that if you see the error response \"Cannot complete request: User 'admin' not found\", you need to set the basic auth to the user and password you entered during the install process.  What the heck is basic auth?  Read our article on it here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115010250207-Basic-Auth-with-Postman"
					},
					"response": [
						{
							"name": "Create Schema",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"name": "Authorization",
										"value": "Basic ZWxpOnBhc3M="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"create_schema\",\n\"schema\":\"dev\"\n}"
								},
								"url": {
									"raw": "http://localhost:9925",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "9925"
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop",
									"name": "access-control-allow-origin",
									"description": ""
								},
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "45",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 13 Oct 2017 21:14:04 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"2d-GPJz4Nu7aSF7N/KODFK3o/TNPUw\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "vary",
									"value": "Origin",
									"name": "vary",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"message\":\"schema dev successfully created\"}"
						}
					]
				},
				{
					"name": "Call HDB LMS",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c3c689de-425f-4538-a7c9-4c2c2a2c974e",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"test fingerprint returned\", function () {",
									"    pm.environment.set(\"license\", pm.response.text());    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{LMS_PASS}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{LMS_USER}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46MTQwMA=="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"fingerprint\": \"{{fingerprint}}\",\n\t\"company\":\"harperdb.io\",\n\t\"exp_date\":\"2040-09-11\"\n}\n"
						},
						"url": {
							"raw": "http://{{LMS_HOST}}",
							"protocol": "http",
							"host": [
								"{{LMS_HOST}}"
							]
						},
						"description": "We first need to create a Schema.  A Schema can be thought of as a container of tables that are independent from tables in other schemas.  An example might be the Schema dev with a table called dog.  The Schema prod may also have a table dog. \n\nNote that if you see the error response \"Cannot complete request: User 'admin' not found\", you need to set the basic auth to the user and password you entered during the install process.  What the heck is basic auth?  Read our article on it here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115010250207-Basic-Auth-with-Postman"
					},
					"response": [
						{
							"name": "Create Schema",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"name": "Authorization",
										"value": "Basic ZWxpOnBhc3M="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"create_schema\",\n\"schema\":\"dev\"\n}"
								},
								"url": {
									"raw": "http://localhost:9925",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "9925"
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop",
									"name": "access-control-allow-origin",
									"description": ""
								},
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "45",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 13 Oct 2017 21:14:04 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"2d-GPJz4Nu7aSF7N/KODFK3o/TNPUw\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "vary",
									"value": "Origin",
									"name": "vary",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"message\":\"schema dev successfully created\"}"
						}
					]
				},
				{
					"name": "Set License Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "056aa65e-6a84-4043-9396-1ad303277ea8",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"test fingerprint returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData['message'] === \"Wrote license key file.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{HDB_PASS}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{HDB_USER}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46MTQwMA=="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"operation\":\"set_license\",\n\"key\":\"{{license}}\",\n\"company\":\"{{COMPANY}}\"\n}"
						},
						"url": {
							"raw": "http://{{TRUCK_2_HOST}}:{{TRUCK_2_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{TRUCK_2_HOST}}"
							],
							"port": "{{TRUCK_2_HDB_PORT}}"
						},
						"description": "We first need to create a Schema.  A Schema can be thought of as a container of tables that are independent from tables in other schemas.  An example might be the Schema dev with a table called dog.  The Schema prod may also have a table dog. \n\nNote that if you see the error response \"Cannot complete request: User 'admin' not found\", you need to set the basic auth to the user and password you entered during the install process.  What the heck is basic auth?  Read our article on it here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115010250207-Basic-Auth-with-Postman"
					},
					"response": [
						{
							"name": "Create Schema",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"name": "Authorization",
										"value": "Basic ZWxpOnBhc3M="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"create_schema\",\n\"schema\":\"dev\"\n}"
								},
								"url": {
									"raw": "http://localhost:9925",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "9925"
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop",
									"name": "access-control-allow-origin",
									"description": ""
								},
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "45",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 13 Oct 2017 21:14:04 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"2d-GPJz4Nu7aSF7N/KODFK3o/TNPUw\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "vary",
									"value": "Origin",
									"name": "vary",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"message\":\"schema dev successfully created\"}"
						}
					]
				},
				{
					"name": "Configure Cluster Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5e4e982a-c39d-43eb-8496-fa6a0b0f20fd",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{HDB_PASS}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{HDB_USER}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46MTQwMA=="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\": \"configure_cluster\",\n\t\"clustering_enabled\": \"true\",\n\t\"clustering_port\": \"12345\",\n\t\"clustering_node_name\":\"{{TRUCK_2_NAME}}\"\n}"
						},
						"url": {
							"raw": "http://{{TRUCK_2_HOST}}:{{TRUCK_2_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{TRUCK_2_HOST}}"
							],
							"port": "{{TRUCK_2_HDB_PORT}}"
						},
						"description": "We first need to create a Schema.  A Schema can be thought of as a container of tables that are independent from tables in other schemas.  An example might be the Schema dev with a table called dog.  The Schema prod may also have a table dog. \n\nNote that if you see the error response \"Cannot complete request: User 'admin' not found\", you need to set the basic auth to the user and password you entered during the install process.  What the heck is basic auth?  Read our article on it here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115010250207-Basic-Auth-with-Postman"
					},
					"response": [
						{
							"name": "Create Schema",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"name": "Authorization",
										"value": "Basic ZWxpOnBhc3M="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"create_schema\",\n\"schema\":\"dev\"\n}"
								},
								"url": {
									"raw": "http://localhost:9925",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "9925"
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop",
									"name": "access-control-allow-origin",
									"description": ""
								},
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "45",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 13 Oct 2017 21:14:04 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"2d-GPJz4Nu7aSF7N/KODFK3o/TNPUw\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "vary",
									"value": "Origin",
									"name": "vary",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"message\":\"schema dev successfully created\"}"
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "9a881f61-ee4e-48fa-85f3-a1dbc8c1116c",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "764bfec7-3ddb-4c95-ba8a-7813b35592b5",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "4. Add and Configure Truck 3",
			"item": [
				{
					"name": "Get Fingerprint",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c3c689de-425f-4538-a7c9-4c2c2a2c974e",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"test fingerprint returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData['fingerprint'] !== undefined);",
									"    pm.environment.set(\"fingerprint\", jsonData['fingerprint']);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{HDB_PASS}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{HDB_USER}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46MTQwMA=="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"get_fingerprint\"\n}"
						},
						"url": {
							"raw": "http://{{TRUCK_3_HOST}}:{{TRUCK_3_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{TRUCK_3_HOST}}"
							],
							"port": "{{TRUCK_3_HDB_PORT}}"
						},
						"description": "We first need to create a Schema.  A Schema can be thought of as a container of tables that are independent from tables in other schemas.  An example might be the Schema dev with a table called dog.  The Schema prod may also have a table dog. \n\nNote that if you see the error response \"Cannot complete request: User 'admin' not found\", you need to set the basic auth to the user and password you entered during the install process.  What the heck is basic auth?  Read our article on it here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115010250207-Basic-Auth-with-Postman"
					},
					"response": [
						{
							"name": "Create Schema",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"name": "Authorization",
										"value": "Basic ZWxpOnBhc3M="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"create_schema\",\n\"schema\":\"dev\"\n}"
								},
								"url": {
									"raw": "http://localhost:9925",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "9925"
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop",
									"name": "access-control-allow-origin",
									"description": ""
								},
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "45",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 13 Oct 2017 21:14:04 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"2d-GPJz4Nu7aSF7N/KODFK3o/TNPUw\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "vary",
									"value": "Origin",
									"name": "vary",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"message\":\"schema dev successfully created\"}"
						}
					]
				},
				{
					"name": "Call HDB LMS",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c3c689de-425f-4538-a7c9-4c2c2a2c974e",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"test fingerprint returned\", function () {",
									"    pm.environment.set(\"license\", pm.response.text());    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{LMS_PASS}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{LMS_USER}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46MTQwMA=="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"fingerprint\": \"{{fingerprint}}\",\n\t\"company\":\"harperdb.io\",\n\t\"exp_date\":\"2040-09-11\"\n}\n"
						},
						"url": {
							"raw": "http://{{LMS_HOST}}",
							"protocol": "http",
							"host": [
								"{{LMS_HOST}}"
							]
						},
						"description": "We first need to create a Schema.  A Schema can be thought of as a container of tables that are independent from tables in other schemas.  An example might be the Schema dev with a table called dog.  The Schema prod may also have a table dog. \n\nNote that if you see the error response \"Cannot complete request: User 'admin' not found\", you need to set the basic auth to the user and password you entered during the install process.  What the heck is basic auth?  Read our article on it here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115010250207-Basic-Auth-with-Postman"
					},
					"response": [
						{
							"name": "Create Schema",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"name": "Authorization",
										"value": "Basic ZWxpOnBhc3M="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"create_schema\",\n\"schema\":\"dev\"\n}"
								},
								"url": {
									"raw": "http://localhost:9925",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "9925"
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop",
									"name": "access-control-allow-origin",
									"description": ""
								},
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "45",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 13 Oct 2017 21:14:04 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"2d-GPJz4Nu7aSF7N/KODFK3o/TNPUw\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "vary",
									"value": "Origin",
									"name": "vary",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"message\":\"schema dev successfully created\"}"
						}
					]
				},
				{
					"name": "Set License Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "056aa65e-6a84-4043-9396-1ad303277ea8",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"test fingerprint returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData['message'] === \"Wrote license key file.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{HDB_PASS}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{HDB_USER}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46MTQwMA=="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"operation\":\"set_license\",\n\"key\":\"{{license}}\",\n\"company\":\"{{COMPANY}}\"\n}"
						},
						"url": {
							"raw": "http://{{TRUCK_3_HOST}}:{{TRUCK_3_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{TRUCK_3_HOST}}"
							],
							"port": "{{TRUCK_3_HDB_PORT}}"
						},
						"description": "We first need to create a Schema.  A Schema can be thought of as a container of tables that are independent from tables in other schemas.  An example might be the Schema dev with a table called dog.  The Schema prod may also have a table dog. \n\nNote that if you see the error response \"Cannot complete request: User 'admin' not found\", you need to set the basic auth to the user and password you entered during the install process.  What the heck is basic auth?  Read our article on it here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115010250207-Basic-Auth-with-Postman"
					},
					"response": [
						{
							"name": "Create Schema",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"name": "Authorization",
										"value": "Basic ZWxpOnBhc3M="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"create_schema\",\n\"schema\":\"dev\"\n}"
								},
								"url": {
									"raw": "http://localhost:9925",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "9925"
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop",
									"name": "access-control-allow-origin",
									"description": ""
								},
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "45",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 13 Oct 2017 21:14:04 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"2d-GPJz4Nu7aSF7N/KODFK3o/TNPUw\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "vary",
									"value": "Origin",
									"name": "vary",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"message\":\"schema dev successfully created\"}"
						}
					]
				},
				{
					"name": "Configure Cluster Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5e4e982a-c39d-43eb-8496-fa6a0b0f20fd",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{HDB_PASS}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{HDB_USER}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46MTQwMA=="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\": \"configure_cluster\",\n\t\"clustering_enabled\": \"true\",\n\t\"clustering_port\": \"12345\",\n\t\"clustering_node_name\":\"{{TRUCK_1_NAME}}\"\n}"
						},
						"url": {
							"raw": "http://{{TRUCK_3_HOST}}:{{TRUCK_3_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{TRUCK_3_HOST}}"
							],
							"port": "{{TRUCK_3_HDB_PORT}}"
						},
						"description": "We first need to create a Schema.  A Schema can be thought of as a container of tables that are independent from tables in other schemas.  An example might be the Schema dev with a table called dog.  The Schema prod may also have a table dog. \n\nNote that if you see the error response \"Cannot complete request: User 'admin' not found\", you need to set the basic auth to the user and password you entered during the install process.  What the heck is basic auth?  Read our article on it here: https://harperdbhelp.zendesk.com/hc/en-us/articles/115010250207-Basic-Auth-with-Postman"
					},
					"response": [
						{
							"name": "Create Schema",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"name": "Authorization",
										"value": "Basic ZWxpOnBhc3M="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"create_schema\",\n\"schema\":\"dev\"\n}"
								},
								"url": {
									"raw": "http://localhost:9925",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "9925"
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop",
									"name": "access-control-allow-origin",
									"description": ""
								},
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "45",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 13 Oct 2017 21:14:04 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"2d-GPJz4Nu7aSF7N/KODFK3o/TNPUw\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "vary",
									"value": "Origin",
									"name": "vary",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"message\":\"schema dev successfully created\"}"
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "9a881f61-ee4e-48fa-85f3-a1dbc8c1116c",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "764bfec7-3ddb-4c95-ba8a-7813b35592b5",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "5. Set Up Bidirectional Cluster with Truck 1",
			"item": [
				{
					"name": "Add Truck 1 To Server",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{HDB_PASS}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{HDB_USER}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"add_node\",\n\t\"name\":\"{{TRUCK_1_NAME}}\" ,\n\t\"port\": \"{{TRUCK_1_CLUSTER_PORT}}\",\n\t\"host\":\"{{TRUCK_1_HOST}}\"\n}"
						},
						"url": {
							"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{SERVER_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "Add Server To Truck 1",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{HDB_PASS}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{HDB_USER}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"add_node\",\n\t\"name\":\"{{SERVER_NAME}}\" ,\n\t\"port\": \"{{SERVER_CLUSTER_PORT}}\",\n\t\"host\":\"{{SERVER_HOST}}\"\n}"
						},
						"url": {
							"raw": "http://{{TRUCK_1_HOST}}:{{TRUCK_1_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{TRUCK_1_HOST}}"
							],
							"port": "{{TRUCK_1_HDB_PORT}}"
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "8017f745-e384-42e3-b743-6ce5232c52f8",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "e772dcc0-aafe-4b56-b7f8-35bcb0bc221f",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "6. Set Up Inbound connection from Truck 2",
			"item": [
				{
					"name": "Add Server to Truck 2",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{HDB_PASS}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{HDB_USER}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"add_node\",\n\t\"name\":\"{{SERVER_NAME}}\" ,\n\t\"port\": \"{{SERVER_CLUSTER_PORT}}\",\n\t\"host\":\"{{SERVER_HOST}}\"\n}"
						},
						"url": {
							"raw": "http://{{TRUCK_2_HOST}}:{{TRUCK_2_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{TRUCK_2_HOST}}"
							],
							"port": "{{TRUCK_2_HDB_PORT}}"
						},
						"description": "Method for registering a node for HarperDB Clustering.  Each node must be aware of all other nodes. <b><i> This is a HarperDB Enterprise version only feature </i></b>\n<p>\n<a href=\"https://harperdbhelp.zendesk.com/hc/en-us/articles/115003583194\">See this article for more info</a>\n</p>\n<ul>\n<li>\n<b>operation</b> <i> (required) </i> - must always be 'add_node'\n</li>\n<li>\n<b>name</b> <i> (required) </i> - The name of the node you are registering with this node.  Must match exactly. \n</li>\n<li>\n<b>port</b> <i> (required) </i> - The clustering port for the node you are registering with this node.  Not to be confused with HTTP/S PORTS.\n</li>\n<li>\n<b>host</b> <i> (required) </i> - the uri where the node you are adding to the cluster resides. \n</li>\n\n\n\n\n</ul>"
					},
					"response": []
				},
				{
					"name": "Create Shema on Truck 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2a5ef5ae-021f-4808-9a35-f5522e7e47fe",
								"exec": [
									"tests[\"Create Schema\"] = responseBody.has(\"successfully created\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{HDB_PASS}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{HDB_USER}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46QWJjMTIzNCE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"operation\":\"create_schema\",\r\n  \"schema\": \"{{TRUCK_2_SCHEMA}}\"\r\n}\r\n"
						},
						"url": {
							"raw": "http://{{TRUCK_2_HOST}}:{{TRUCK_2_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{TRUCK_2_HOST}}"
							],
							"port": "{{TRUCK_2_HDB_PORT}}"
						},
						"description": "Add node to truck 2, expect replicate on server"
					},
					"response": []
				},
				{
					"name": "Check truck 2 for schema",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{HDB_PASS}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{HDB_USER}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46QWJjMTIzNCE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"operation\":\"describe_schema\",\r\n  \"schema\": \"{{TRUCK_2_SCHEMA}}\"\r\n}\r\n"
						},
						"url": {
							"raw": "http://{{TRUCK_2_HOST}}:{{TRUCK_2_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{TRUCK_2_HOST}}"
							],
							"port": "{{TRUCK_2_HDB_PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "Check server for schema",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{HDB_PASS}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{HDB_USER}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46QWJjMTIzNCE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"operation\":\"describe_schema\",\r\n  \"schema\": \"{{TRUCK_2_SCHEMA}}\"\r\n}\r\n"
						},
						"url": {
							"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{SERVER_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "eb095265-95c5-4026-9095-e9aa379b34cf",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "3e10e90c-7585-41ce-ba61-3ca31d18d0d0",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "7. Set Up Outbound to Truck 3",
			"item": [
				{
					"name": "Add Truck 3 to Server",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"add_node\",\n\t\"name\":\"{{TRUCK_3_NAME}}\" ,\n\t\"port\": \"{{TRUCK_3_CLUSTER_PORT}}\",\n\t\"host\":\"{{TRUCK_3_HOST}}\"\n}"
						},
						"url": {
							"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{SERVER_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "Check server for schema",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{HDB_PASS}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{HDB_USER}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46QWJjMTIzNCE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"operation\":\"describe_schema\",\r\n  \"schema\": \"{{TRUCK_3_SCHEMA}}\"\r\n}\r\n"
						},
						"url": {
							"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{SERVER_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "Check truck 2 for schema",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{HDB_PASS}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{HDB_USER}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46QWJjMTIzNCE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"operation\":\"describe_schema\",\r\n  \"schema\": \"{{TRUCK_3_SCHEMA}}\"\r\n}\r\n"
						},
						"url": {
							"raw": "http://{{TRUCK_3_HOST}}:{{TRUCK_3_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{TRUCK_3_HOST}}"
							],
							"port": "{{TRUCK_3_HDB_PORT}}"
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "eb095265-95c5-4026-9095-e9aa379b34cf",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "3e10e90c-7585-41ce-ba61-3ca31d18d0d0",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "8. Add data for bidirectional test",
			"item": [
				{
					"name": "Create Shema on truck 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2a5ef5ae-021f-4808-9a35-f5522e7e47fe",
								"exec": [
									"tests[\"Create Schema\"] = responseBody.has(\"successfully created\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{HDB_PASS}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{HDB_USER}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46QWJjMTIzNCE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"operation\":\"create_schema\",\r\n  \"schema\": \"{{TRUCK_1_SCHEMA}}\"\r\n}\r\n"
						},
						"url": {
							"raw": "http://{{TRUCK_1_HOST}}:{{TRUCK_1_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{TRUCK_1_HOST}}"
							],
							"port": "{{TRUCK_1_HDB_PORT}}"
						},
						"description": "Add node to truck 1, expect replicate on server"
					},
					"response": []
				},
				{
					"name": "Check truck 1 for schema",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "19082d37-0a49-4a21-878a-b5f5782c0198",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Your test name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.response.to.not.have.jsonBody(\"error\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{HDB_PASS}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{HDB_USER}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46QWJjMTIzNCE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"operation\":\"describe_schema\",\r\n  \"schema\": \"{{TRUCK_1_SCHEMA}}\"\r\n}\r\n"
						},
						"url": {
							"raw": "http://{{TRUCK_1_HOST}}:{{TRUCK_1_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{TRUCK_1_HOST}}"
							],
							"port": "{{TRUCK_1_HDB_PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "Check server for schema",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cde70d96-e6ee-48f3-8465-93b40516b9f3",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Your test name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.response.to.not.have.jsonBody(\"error\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{HDB_PASS}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{HDB_USER}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46QWJjMTIzNCE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"operation\":\"describe_schema\",\r\n  \"schema\": \"{{TRUCK_1_SCHEMA}}\"\r\n}\r\n"
						},
						"url": {
							"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{SERVER_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "Create table on truck 1 w/ residence *",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "32e99799-6478-4016-a7c1-cc8a1ce4f8dd",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{HDB_PASS}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{HDB_USER}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46QWJjMTIzNCE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"operation\":\"create_table\",\r\n\"schema\":\"{{TRUCK_1_SCHEMA}}\",\r\n\"table\":\"{{TRUCK_1_TABLE}}\",\r\n\"hash_attribute\": \"id\",\r\n\"residence\":[\"*\"]\r\n}\r\n"
						},
						"url": {
							"raw": "http://{{TRUCK_1_HOST}}:{{TRUCK_1_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{TRUCK_1_HOST}}"
							],
							"port": "{{TRUCK_1_HDB_PORT}}"
						},
						"description": "Req to node 2\nAdding node 1 and registered node."
					},
					"response": []
				},
				{
					"name": "Check SERVER for schema and table.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e9d896be-6ddb-4b6d-8d10-9d1b8b4dbb14",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Your test name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.response.to.not.have.jsonBody(\"error\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{HDB_PASS}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{HDB_USER}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46QWJjMTIzNCE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"operation\":\"describe_schema\",\r\n  \"schema\": \"{{TRUCK_1_SCHEMA}}\"\r\n}\r\n"
						},
						"url": {
							"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{SERVER_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "Check truck 1 for schema and table.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7cb46c6e-14d9-4580-bb2d-372e4689a4e8",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Your test name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.response.to.not.have.jsonBody(\"error\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{HDB_PASS}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{HDB_USER}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46QWJjMTIzNCE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"operation\":\"describe_schema\",\r\n  \"schema\": \"{{TRUCK_1_SCHEMA}}\"\r\n}\r\n"
						},
						"url": {
							"raw": "http://{{TRUCK_1_HOST}}:{{TRUCK_1_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{TRUCK_1_HOST}}"
							],
							"port": "{{TRUCK_1_HDB_PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "add data to server table {{TRUCK_1_TABLE}}",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f61b6d3f-407f-4e83-a22a-44a136ce9956",
								"exec": [
									"//pm.environment.set(\"variable_key\", \"variable_value\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{HDB_PASS}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{HDB_USER}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46QWJjMTIzNCE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"{{TRUCK_1_SCHEMA}}\",\n\"table\":\"{{TRUCK_1_TABLE}}\",\n\"records\": [\n  {\n  \t\"id\":\"{{$guid}}\",\n  \t\"temperature\":{{$randomInt}},\n  \t\"timestamp\":{{$timestamp}}\n  }\n]\n}"
						},
						"url": {
							"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{SERVER_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						},
						"description": "Req to node 2\nAdding node 1 and registered node."
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "eb095265-95c5-4026-9095-e9aa379b34cf",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "3e10e90c-7585-41ce-ba61-3ca31d18d0d0",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "9. Add data for inbound test",
			"item": [
				{
					"name": "Create Shema on truck 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2a5ef5ae-021f-4808-9a35-f5522e7e47fe",
								"exec": [
									"tests[\"Create Schema\"] = responseBody.has(\"successfully created\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{HDB_PASS}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{HDB_USER}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46QWJjMTIzNCE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"operation\":\"create_schema\",\r\n  \"schema\": \"{{TRUCK_2_SCHEMA}}\"\r\n}\r\n"
						},
						"url": {
							"raw": "http://{{TRUCK_2_HOST}}:{{TRUCK_2_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{TRUCK_2_HOST}}"
							],
							"port": "{{TRUCK_2_HDB_PORT}}"
						},
						"description": "Add node to truck 1, expect replicate on server"
					},
					"response": []
				},
				{
					"name": "Check truck 2 for schema",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "19082d37-0a49-4a21-878a-b5f5782c0198",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Your test name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.response.to.not.have.jsonBody(\"error\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{HDB_PASS}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{HDB_USER}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46QWJjMTIzNCE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"operation\":\"describe_schema\",\r\n  \"schema\": \"{{TRUCK_2_SCHEMA}}\"\r\n}\r\n"
						},
						"url": {
							"raw": "http://{{TRUCK_2_HOST}}:{{TRUCK_2_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{TRUCK_2_HOST}}"
							],
							"port": "{{TRUCK_2_HDB_PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "Check server for schema",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cde70d96-e6ee-48f3-8465-93b40516b9f3",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Your test name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.response.to.not.have.jsonBody(\"error\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{HDB_PASS}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{HDB_USER}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46QWJjMTIzNCE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"operation\":\"describe_schema\",\r\n  \"schema\": \"{{TRUCK_2_SCHEMA}}\"\r\n}\r\n"
						},
						"url": {
							"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{SERVER_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "Create table on truck 2 w/ residence *",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "32e99799-6478-4016-a7c1-cc8a1ce4f8dd",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{HDB_PASS}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{HDB_USER}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46QWJjMTIzNCE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"operation\":\"create_table\",\r\n\"schema\":\"{{TRUCK_2_SCHEMA}}\",\r\n\"table\":\"{{TRUCK_2_TABLE}}\",\r\n\"hash_attribute\": \"id\",\r\n\"residence\":[\"*\"]\r\n}\r\n"
						},
						"url": {
							"raw": "http://{{TRUCK_2_HOST}}:{{TRUCK_2_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{TRUCK_2_HOST}}"
							],
							"port": "{{TRUCK_2_HDB_PORT}}"
						},
						"description": "Req to node 2\nAdding node 1 and registered node."
					},
					"response": []
				},
				{
					"name": "Check SERVER for schema and table. Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e9d896be-6ddb-4b6d-8d10-9d1b8b4dbb14",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Your test name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.response.to.not.have.jsonBody(\"error\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{HDB_PASS}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{HDB_USER}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46QWJjMTIzNCE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"operation\":\"describe_schema\",\r\n  \"schema\": \"{{TRUCK_2_SCHEMA}}\"\r\n}\r\n"
						},
						"url": {
							"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{SERVER_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "Check truck 2 for schema and table.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7cb46c6e-14d9-4580-bb2d-372e4689a4e8",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Your test name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.response.to.not.have.jsonBody(\"error\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{HDB_PASS}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{HDB_USER}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46QWJjMTIzNCE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"operation\":\"describe_schema\",\r\n  \"schema\": \"{{TRUCK_2_SCHEMA}}\"\r\n}\r\n"
						},
						"url": {
							"raw": "http://{{TRUCK_2_HOST}}:{{TRUCK_2_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{TRUCK_2_HOST}}"
							],
							"port": "{{TRUCK_2_HDB_PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "add data to Truck 2 table {{TRUCK_2_TABLE}}",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f61b6d3f-407f-4e83-a22a-44a136ce9956",
								"exec": [
									"//pm.environment.set(\"variable_key\", \"variable_value\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{HDB_PASS}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{HDB_USER}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46QWJjMTIzNCE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"{{TRUCK_2_SCHEMA}}\",\n\"table\":\"{{TRUCK_2_TABLE}}\",\n\"records\": [\n  {\n  \t\"id\":\"{{$guid}}\",\n  \t\"temperature\":{{$randomInt}},\n  \t\"timestamp\":{{$timestamp}}\n  }\n]\n}"
						},
						"url": {
							"raw": "http://{{TRUCK_2_HOST}}:{{TRUCK_2_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{TRUCK_2_HOST}}"
							],
							"port": "{{TRUCK_2_HDB_PORT}}"
						},
						"description": "Req to node 2\nAdding node 1 and registered node."
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "eb095265-95c5-4026-9095-e9aa379b34cf",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "3e10e90c-7585-41ce-ba61-3ca31d18d0d0",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "10. Add data for outbound test",
			"item": [
				{
					"name": "Create truck 3 schema on Server",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2a5ef5ae-021f-4808-9a35-f5522e7e47fe",
								"exec": [
									"tests[\"Create Schema\"] = responseBody.has(\"successfully created\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{HDB_PASS}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{HDB_USER}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46QWJjMTIzNCE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"operation\":\"create_schema\",\r\n  \"schema\": \"{{TRUCK_3_SCHEMA}}\"\r\n}\r\n"
						},
						"url": {
							"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{SERVER_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						},
						"description": "Add node to truck 1, expect replicate on server"
					},
					"response": []
				},
				{
					"name": "Check server for schema",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cde70d96-e6ee-48f3-8465-93b40516b9f3",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Your test name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.response.to.not.have.jsonBody(\"error\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{HDB_PASS}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{HDB_USER}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46QWJjMTIzNCE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"operation\":\"describe_schema\",\r\n  \"schema\": \"{{TRUCK_3_SCHEMA}}\"\r\n}\r\n"
						},
						"url": {
							"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{SERVER_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "Create table on server w/ residence *",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "32e99799-6478-4016-a7c1-cc8a1ce4f8dd",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{HDB_PASS}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{HDB_USER}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46QWJjMTIzNCE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"operation\":\"create_table\",\r\n\"schema\":\"{{TRUCK_3_SCHEMA}}\",\r\n\"table\":\"{{TRUCK_3_TABLE}}\",\r\n\"hash_attribute\": \"id\",\r\n\"residence\":[\"*\"]\r\n}\r\n"
						},
						"url": {
							"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{SERVER_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						},
						"description": "Req to node 2\nAdding node 1 and registered node."
					},
					"response": []
				},
				{
					"name": "Check SERVER for schema and table.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e9d896be-6ddb-4b6d-8d10-9d1b8b4dbb14",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Your test name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.response.to.not.have.jsonBody(\"error\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{HDB_PASS}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{HDB_USER}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46QWJjMTIzNCE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"operation\":\"describe_schema\",\r\n  \"schema\": \"{{TRUCK_3_SCHEMA}}\"\r\n}\r\n"
						},
						"url": {
							"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{SERVER_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "Check truck 3 for schema and table.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7cb46c6e-14d9-4580-bb2d-372e4689a4e8",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Your test name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.response.to.not.have.jsonBody(\"error\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{HDB_PASS}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{HDB_USER}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46QWJjMTIzNCE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"operation\":\"describe_schema\",\r\n  \"schema\": \"{{TRUCK_3_SCHEMA}}\"\r\n}\r\n"
						},
						"url": {
							"raw": "http://{{TRUCK_3_HOST}}:{{TRUCK_3_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{TRUCK_3_HOST}}"
							],
							"port": "{{TRUCK_3_HDB_PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "add data to server, Truck 3 table {{TRUCK_3_TABLE}}",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f61b6d3f-407f-4e83-a22a-44a136ce9956",
								"exec": [
									"//pm.environment.set(\"variable_key\", \"variable_value\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{HDB_PASS}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{HDB_USER}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46QWJjMTIzNCE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"{{TRUCK_3_SCHEMA}}\",\n\"table\":\"{{TRUCK_3_TABLE}}\",\n\"records\": [\n  {\n  \t\"id\":\"{{$guid}}\",\n  \t\"temperature\":{{$randomInt}},\n  \t\"timestamp\":{{$timestamp}}\n  }\n]\n}"
						},
						"url": {
							"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{SERVER_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "eb095265-95c5-4026-9095-e9aa379b34cf",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "3e10e90c-7585-41ce-ba61-3ca31d18d0d0",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "11. Check for data",
			"item": [
				{
					"name": "Select truck 1 data from server",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46QWJjMTIzNCE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"search_by_value\",\n\t\"schema\":\"{{TRUCK_1_SCHEMA}}\",\n\t\"table\":\"{{TRUCK_1_TABLE}}\",\n\t\"search_attribute\":\"id\",\n\t\"search_value\":\"*\",\n\t\"get_attributes\":[\"*\"]\n}"
						},
						"url": {
							"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{SERVER_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "Select truck 1 data from truck 1",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46QWJjMTIzNCE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"search_by_value\",\n\t\"schema\":\"{{TRUCK_1_SCHEMA}}\",\n\t\"table\":\"{{TRUCK_1_TABLE}}\",\n\t\"search_attribute\":\"id\",\n\t\"search_value\":\"*\",\n\t\"get_attributes\":[\"*\"]\n}"
						},
						"url": {
							"raw": "http://{{TRUCK_1_HOST}}:{{TRUCK_1_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{TRUCK_1_HOST}}"
							],
							"port": "{{TRUCK_1_HDB_PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "Select truck 2 data from server",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46QWJjMTIzNCE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"search_by_value\",\n\t\"schema\":\"{{TRUCK_2_SCHEMA}}\",\n\t\"table\":\"{{TRUCK_2_TABLE}}\",\n\t\"search_attribute\":\"id\",\n\t\"search_value\":\"*\",\n\t\"get_attributes\":[\"*\"]\n}"
						},
						"url": {
							"raw": "http://{{SERVER_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{SERVER_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "Select truck 3 data from truck 3",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46QWJjMTIzNCE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"search_by_value\",\n\t\"schema\":\"{{TRUCK_3_SCHEMA}}\",\n\t\"table\":\"{{TRUCK_3_TABLE}}\",\n\t\"search_attribute\":\"id\",\n\t\"search_value\":\"*\",\n\t\"get_attributes\":[\"*\"]\n}"
						},
						"url": {
							"raw": "http://{{TRUCK_3_HOST}}:{{TRUCK_3_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{TRUCK_3_HOST}}"
							],
							"port": "{{TRUCK_3_HDB_PORT}}"
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "3fb6e77e-a37a-469c-bd3e-87efc44e70b7",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "37fadf39-df6f-4e2b-b60b-ab60baf4355a",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "1400",
				"type": "string"
			},
			{
				"key": "username",
				"value": "HDB_ADMIN",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "81ca77b4-5077-4dfd-89a3-22307d038f3e",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "33dd32b9-289a-48c2-b0a5-dd2d104f446a",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}
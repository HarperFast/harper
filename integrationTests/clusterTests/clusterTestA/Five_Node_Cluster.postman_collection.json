{
	"info": {
		"_postman_id": "b3b8fbc0-cb36-4876-a887-d0757e131430",
		"name": "Five_Node_Cluster",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "7046690"
	},
	"item": [
		{
			"name": "Enable Clustering",
			"item": [
				{
					"name": "Set config enable clustering node 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"operation\": \"set_configuration\",\n    \"clustering_enabled\": true,\n    \"replication_url\": null\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "Set config enable clustering node 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"operation\": \"set_configuration\",\n    \"clustering_enabled\": true,\n    \"replication_url\": null\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{NODE2_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE2_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "Set config enable clustering node 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"operation\": \"set_configuration\",\n    \"clustering_enabled\": true,\n    \"replication_url\": null\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{NODE3_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE3_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "Set config enable clustering node 4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"operation\": \"set_configuration\",\n    \"clustering_enabled\": true,\n    \"replication_url\": null\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{NODE4_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE4_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "Set config enable clustering node 5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"operation\": \"set_configuration\",\n    \"clustering_enabled\": true,\n    \"replication_url\": null\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{NODE5_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE5_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "Restart node 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Clustering service is restarted\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql(\"Restarting HarperDB. This may take up to 60 seconds.\")",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"operation\": \"restart\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "Restart node 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Clustering service is restarted\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql(\"Restarting HarperDB. This may take up to 60 seconds.\")",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"operation\": \"restart\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{NODE2_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE2_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "Restart node 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Clustering service is restarted\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql(\"Restarting HarperDB. This may take up to 60 seconds.\")",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"operation\": \"restart\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{NODE3_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE3_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "Restart node 4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Clustering service is restarted\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql(\"Restarting HarperDB. This may take up to 60 seconds.\")",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"operation\": \"restart\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{NODE4_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE4_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "Restart node 5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Clustering service is restarted\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql(\"Restarting HarperDB. This may take up to 60 seconds.\")",
									"});",
									"setTimeout(() => {}, 30000) // wait for the restart to complete"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"operation\": \"restart\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{NODE5_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE5_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Add Routes",
			"item": [
				{
					"name": "Config Node1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"const node2_host = pm.environment.get('NODE2_HOST');",
									"const node3_host = pm.environment.get('NODE3_HOST');",
									"const node4_host = pm.environment.get('NODE4_HOST');",
									"const node5_host = pm.environment.get('NODE5_HOST');",
									"const clustering_port = pm.environment.get('CLUSTERING_PORT');",
									"",
									"pm.test(\"Node 1 is configured\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql(\"cluster routes successfully set\");",
									"",
									"    for (const route of jsonData.set) {",
									"        pm.expect(route.host).to.be.oneOf([node2_host, node3_host, node4_host, node5_host])",
									"        pm.expect(route.port).to.equal(+clustering_port);",
									"    }",
									"    pm.expect(jsonData.skipped).to.eql([]);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"operation\": \"cluster_set_routes\",\n    \"server\": \"hub\",\n    \"routes\":[\n            {\"host\": \"{{NODE2_HOST}}\", \"port\": {{CLUSTERING_PORT}}}, \n            {\"host\": \"{{NODE3_HOST}}\", \"port\": {{CLUSTERING_PORT}}}, \n            {\"host\": \"{{NODE4_HOST}}\", \"port\": {{CLUSTERING_PORT}}},\n            {\"host\": \"{{NODE5_HOST}}\", \"port\": {{CLUSTERING_PORT}}}\n        ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "Restart Node1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Clustering service is restarted\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql(\"Restarting HarperDB. This may take up to 60 seconds.\")",
									"    setTimeout(() => {}, 30000) // wait for the restart to complete",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"operation\": \"restart\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Add Schemas and Tables",
			"item": [
				{
					"name": "CREATE SCHEMA treat_sys on Node1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Schema treat_sys was created on Node1\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql(\"database 'treat_sys' successfully created\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"treat_sys\"\n}"
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Create dev Schema",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOjE0MDA=",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"dev\"\n}"
								},
								"url": {
									"raw": "http://localhost:9925",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "9925"
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "45",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 16:52:45 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"2d-GPJz4Nu7aSF7N/KODFK3o/TNPUw\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"message\":\"schema dev successfully created\"}"
						}
					]
				},
				{
					"name": "CREATE TABLE  hub1 on Node 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Table treat_sys.hub1 was created on Node1\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql(\"table 'treat_sys.hub1' successfully created.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"treat_sys\",\n  \"table\":\"hub1\",\n  \"hash_attribute\": \"id\"\n}"
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Create dev.dog Table",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOjE0MDA=",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"dev\",\n  \"table\":\"dog\",\n  \"hash_attribute\": \"id\"\n}"
								},
								"url": {
									"raw": "http://localhost:9925",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "9925"
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "49",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:00:40 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"31-2FV9i2eJXU1F9rNuA4B9T7Vu7EA\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"message\":\"table dev.dog successfully created.\"}"
						}
					]
				},
				{
					"name": "CREATE TABLE  collar on Node 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Table treat_sys.collar was created on Node1\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.equal(\"table 'treat_sys.collar' successfully created.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"treat_sys\",\n  \"table\":\"collar\",\n  \"hash_attribute\": \"id\"\n}"
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Create dev.dog Table",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOjE0MDA=",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"dev\",\n  \"table\":\"dog\",\n  \"hash_attribute\": \"id\"\n}"
								},
								"url": {
									"raw": "http://localhost:9925",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "9925"
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "49",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:00:40 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"31-2FV9i2eJXU1F9rNuA4B9T7Vu7EA\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"message\":\"table dev.dog successfully created.\"}"
						}
					]
				},
				{
					"name": "CREATE TABLE  dispenser on Node 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Table treat_sys.dispenser was created on Node1\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.equal(\"table 'treat_sys.dispenser' successfully created.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"treat_sys\",\n  \"table\":\"dispenser\",\n  \"hash_attribute\": \"id\"\n}"
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Create dev.dog Table",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOjE0MDA=",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"dev\",\n  \"table\":\"dog\",\n  \"hash_attribute\": \"id\"\n}"
								},
								"url": {
									"raw": "http://localhost:9925",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "9925"
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "49",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:00:40 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"31-2FV9i2eJXU1F9rNuA4B9T7Vu7EA\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"message\":\"table dev.dog successfully created.\"}"
						}
					]
				},
				{
					"name": "CREATE TABLE  hub2 on Node 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Table treat_sys.hub2 was created on Node1\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.equal(\"table 'treat_sys.hub2' successfully created.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"treat_sys\",\n  \"table\":\"hub2\",\n  \"hash_attribute\": \"id\"\n}"
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Create dev.dog Table",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOjE0MDA=",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"dev\",\n  \"table\":\"dog\",\n  \"hash_attribute\": \"id\"\n}"
								},
								"url": {
									"raw": "http://localhost:9925",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "9925"
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "49",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:00:40 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"31-2FV9i2eJXU1F9rNuA4B9T7Vu7EA\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"message\":\"table dev.dog successfully created.\"}"
						}
					]
				},
				{
					"name": "CREATE SCHEMA treat_sys on Node2",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Schema treat_sys was created on Node2\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql(\"database 'treat_sys' successfully created\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"treat_sys\"\n}"
						},
						"url": {
							"raw": "http://{{NODE2_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE2_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Create dev Schema",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOjE0MDA=",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"dev\"\n}"
								},
								"url": {
									"raw": "http://localhost:9925",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "9925"
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "45",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 16:52:45 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"2d-GPJz4Nu7aSF7N/KODFK3o/TNPUw\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"message\":\"schema dev successfully created\"}"
						}
					]
				},
				{
					"name": "CREATE TABLE  collar2 on Node 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Table treat_sys.collar2 was created on Node2\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql(\"table 'treat_sys.collar2' successfully created.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"treat_sys\",\n  \"table\":\"collar2\",\n  \"hash_attribute\": \"id\"\n}"
						},
						"url": {
							"raw": "http://{{NODE2_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE2_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Create dev.dog Table",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOjE0MDA=",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"dev\",\n  \"table\":\"dog\",\n  \"hash_attribute\": \"id\"\n}"
								},
								"url": {
									"raw": "http://localhost:9925",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "9925"
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "49",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:00:40 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"31-2FV9i2eJXU1F9rNuA4B9T7Vu7EA\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"message\":\"table dev.dog successfully created.\"}"
						}
					]
				}
			]
		},
		{
			"name": "Add Nodes",
			"item": [
				{
					"name": "ADD Node3 to Node1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Node3 added\", function () {",
									"    const jsonData = pm.response.json();",
									"    const node_name = pm.environment.get(\"NODE3_NAME\");",
									"    pm.expect(jsonData.message).to.eql(`Successfully added '${node_name}' to manifest`);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"operation\": \"add_node\",\n    \"node_name\": \"{{NODE3_NAME}}\",\n    \"subscriptions\": [\n        {\n            \"schema\": \"treat_sys\",\n            \"table\": \"collar\",\n            \"subscribe\": true,\n            \"publish\": false\n        },\n        {\n            \"schema\": \"treat_sys\",\n            \"table\": \"hub1\",\n            \"subscribe\": true,\n            \"publish\": false\n        }\n    ]\n}"
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						},
						"description": "Make Node2 publish to Node1"
					},
					"response": [
						{
							"name": "Add Node",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"operation\": \"add_node\",\n    \"name\": \"node2\",\n    \"host\": \"192.168.100.100\",\n    \"port\": 9925,\n    \"subscriptions\": [\n        {\n            \"channel\": \"dev:dog\",\n            \"subscribe\": false,\n            \"publish\": true\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "50"
								},
								{
									"key": "ETag",
									"value": "W/\"32-SSInrnKg7a0FqI3KO7/TGYLgYAc\""
								},
								{
									"key": "Date",
									"value": "Fri, 18 Oct 2019 18:20:33 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Check progress of cluster Node1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Cluster status with just node3 is returned\", function () {",
									"    const response = pm.response.json();",
									"    const node1_name = pm.environment.get(\"NODE1_NAME\");",
									"    const node3_name = pm.environment.get(\"NODE3_NAME\");",
									"    const server_hdb_port = pm.environment.get(\"SERVER_HDB_PORT\");",
									"    const clustering_port = pm.environment.get(\"CLUSTERING_PORT\");",
									"",
									"    pm.expect(response.is_enabled).to.be.true",
									"    pm.expect(response.node_name).to.equal(node1_name)",
									"    pm.expect(response.connections.length).to.equal(1)",
									"    pm.expect(response.connections[0].node_name).to.equal(node3_name);",
									"    pm.expect(response.connections[0].status).to.equal('open');",
									"    pm.expect(response.connections[0].ports.clustering).to.equal(+clustering_port)",
									"    pm.expect(response.connections[0].ports.operations_api).to.equal(+server_hdb_port)",
									"    pm.expect(response.connections[0]).to.haveOwnProperty('latency_ms')",
									"    pm.expect(response.connections[0]).to.haveOwnProperty('uptime')",
									"    pm.expect(response.connections[0].subscriptions).to.eql([",
									"                {",
									"                    \"schema\": \"treat_sys\",",
									"                    \"table\": \"collar\",",
									"                    \"publish\": false,",
									"                    \"subscribe\": true",
									"                },",
									"                {",
									"                    \"schema\": \"treat_sys\",",
									"                    \"table\": \"hub1\",",
									"                    \"publish\": false,",
									"                    \"subscribe\": true",
									"                }",
									"            ])",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"operation\": \"cluster_status\"\n}"
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						},
						"description": "Make Node2 publish to Node1"
					},
					"response": [
						{
							"name": "Add Node",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"operation\": \"add_node\",\n    \"name\": \"node2\",\n    \"host\": \"192.168.100.100\",\n    \"port\": 9925,\n    \"subscriptions\": [\n        {\n            \"channel\": \"dev:dog\",\n            \"subscribe\": false,\n            \"publish\": true\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "50"
								},
								{
									"key": "ETag",
									"value": "W/\"32-SSInrnKg7a0FqI3KO7/TGYLgYAc\""
								},
								{
									"key": "Date",
									"value": "Fri, 18 Oct 2019 18:20:33 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "ADD Node5 to Node1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Node5 added\", function () {",
									"    const jsonData = pm.response.json();",
									"    const node_name = pm.environment.get(\"NODE5_NAME\");",
									"    pm.expect(jsonData.message).to.eql(`Successfully added '${node_name}' to manifest`);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"operation\": \"add_node\",\n    \"node_name\": \"{{NODE5_NAME}}\",\n    \"subscriptions\": [\n        {\n            \"schema\": \"treat_sys\",\n            \"table\": \"dispenser\",\n            \"subscribe\": true,\n            \"publish\": false\n        },\n        {\n            \"schema\": \"treat_sys\",\n            \"table\": \"hub1\",\n            \"subscribe\": false,\n            \"publish\": true\n        }\n    ]\n}"
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						},
						"description": "Make Node3 publish to Node1"
					},
					"response": [
						{
							"name": "Add Node",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"operation\": \"add_node\",\n    \"name\": \"node2\",\n    \"host\": \"192.168.100.100\",\n    \"port\": 9925,\n    \"subscriptions\": [\n        {\n            \"channel\": \"dev:dog\",\n            \"subscribe\": false,\n            \"publish\": true\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "50"
								},
								{
									"key": "ETag",
									"value": "W/\"32-SSInrnKg7a0FqI3KO7/TGYLgYAc\""
								},
								{
									"key": "Date",
									"value": "Fri, 18 Oct 2019 18:20:33 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "ADD Node 2 to Node1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Node2 added\", function () {",
									"    const jsonData = pm.response.json();",
									"    const node_name = pm.environment.get(\"NODE2_NAME\");",
									"    pm.expect(jsonData.message).to.eql(`Successfully added '${node_name}' to manifest`);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"operation\": \"add_node\",\n    \"node_name\": \"{{NODE2_NAME}}\",\n    \"subscriptions\": [\n        {\n            \"schema\": \"treat_sys\",\n            \"table\": \"hub1\",\n            \"subscribe\": true,\n            \"publish\": true\n        },\n        {\n            \"schema\": \"treat_sys\",\n            \"table\": \"hub2\",\n            \"subscribe\": true,\n            \"publish\": true\n        }\n    ]\n}"
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						},
						"description": "Make Node4 publish and subscribe to Node1"
					},
					"response": [
						{
							"name": "Add Node",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"operation\": \"add_node\",\n    \"name\": \"node2\",\n    \"host\": \"192.168.100.100\",\n    \"port\": 9925,\n    \"subscriptions\": [\n        {\n            \"channel\": \"dev:dog\",\n            \"subscribe\": false,\n            \"publish\": true\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "50"
								},
								{
									"key": "ETag",
									"value": "W/\"32-SSInrnKg7a0FqI3KO7/TGYLgYAc\""
								},
								{
									"key": "Date",
									"value": "Fri, 18 Oct 2019 18:20:33 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Check Cluster Node1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Cluster status with all nodes is returned\", function () {",
									"    const response = pm.response.json();",
									"    const node1_name = pm.environment.get(\"NODE1_NAME\");",
									"    const node2_name = pm.environment.get(\"NODE2_NAME\");",
									"    const node3_name = pm.environment.get(\"NODE3_NAME\");",
									"    const node5_name = pm.environment.get(\"NODE5_NAME\");",
									"",
									"    pm.expect(response.is_enabled).to.be.true",
									"    pm.expect(response.node_name).to.equal(node1_name)",
									"    pm.expect(response.connections.length).to.equal(3)",
									"",
									"    for (const node of response.connections) {",
									"        pm.expect(node.node_name).to.be.oneOf([node3_name, node2_name, node5_name])",
									"        pm.expect(node.status).to.equal('open');",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"operation\": \"cluster_status\"\n}"
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						},
						"description": "Make Node2 publish to Node1"
					},
					"response": [
						{
							"name": "Add Node",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"operation\": \"add_node\",\n    \"name\": \"node2\",\n    \"host\": \"192.168.100.100\",\n    \"port\": 9925,\n    \"subscriptions\": [\n        {\n            \"channel\": \"dev:dog\",\n            \"subscribe\": false,\n            \"publish\": true\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "50"
								},
								{
									"key": "ETag",
									"value": "W/\"32-SSInrnKg7a0FqI3KO7/TGYLgYAc\""
								},
								{
									"key": "Date",
									"value": "Fri, 18 Oct 2019 18:20:33 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "ADD Node 4 to Node2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Node4 added to Node2\", function () {",
									"    const jsonData = pm.response.json();",
									"    const node_name = pm.environment.get(\"NODE4_NAME\");",
									"    pm.expect(jsonData.message).to.eql(`Successfully added '${node_name}' to manifest`);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"operation\": \"add_node\",\n    \"node_name\": \"{{NODE4_NAME}}\",\n    \"subscriptions\": [\n        {\n            \"schema\": \"treat_sys\",\n            \"table\": \"collar2\",\n            \"subscribe\": false,\n            \"publish\": true\n        },\n        {\n            \"schema\": \"treat_sys\",\n            \"table\": \"hub2\",\n            \"subscribe\": true,\n            \"publish\": true\n        }\n    ]\n}"
						},
						"url": {
							"raw": "http://{{NODE2_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE2_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						},
						"description": "Make Node4 publish and subscribe to Node1"
					},
					"response": [
						{
							"name": "Add Node",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"operation\": \"add_node\",\n    \"name\": \"node2\",\n    \"host\": \"192.168.100.100\",\n    \"port\": 9925,\n    \"subscriptions\": [\n        {\n            \"channel\": \"dev:dog\",\n            \"subscribe\": false,\n            \"publish\": true\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "50"
								},
								{
									"key": "ETag",
									"value": "W/\"32-SSInrnKg7a0FqI3KO7/TGYLgYAc\""
								},
								{
									"key": "Date",
									"value": "Fri, 18 Oct 2019 18:20:33 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Check other cluster after adding node",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Other cluster status with all nodes is returned\", function () {",
									"    const response = pm.response.json();",
									"    const node1_name = pm.environment.get(\"NODE1_NAME\");",
									"    const node2_name = pm.environment.get(\"NODE2_NAME\");",
									"    const node4_name = pm.environment.get(\"NODE4_NAME\");",
									"",
									"    pm.expect(response.is_enabled).to.be.true",
									"    pm.expect(response.node_name).to.equal(node2_name)",
									"    pm.expect(response.connections.length).to.equal(2)",
									"",
									"    for (const node of response.connections) {",
									"        pm.expect(node.node_name).to.be.oneOf([node1_name, node4_name])",
									"        pm.expect(node.status).to.equal('open');",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"operation\": \"cluster_status\"\n}"
						},
						"url": {
							"raw": "http://{{NODE2_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE2_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						},
						"description": "Make Node2 publish to Node1"
					},
					"response": [
						{
							"name": "Add Node",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"operation\": \"add_node\",\n    \"name\": \"node2\",\n    \"host\": \"192.168.100.100\",\n    \"port\": 9925,\n    \"subscriptions\": [\n        {\n            \"channel\": \"dev:dog\",\n            \"subscribe\": false,\n            \"publish\": true\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "50"
								},
								{
									"key": "ETag",
									"value": "W/\"32-SSInrnKg7a0FqI3KO7/TGYLgYAc\""
								},
								{
									"key": "Date",
									"value": "Fri, 18 Oct 2019 18:20:33 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Check Cluster Node3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Cluster status with Node1 is returned\", function () {",
									"    const response = pm.response.json();",
									"    const node1_name = pm.environment.get(\"NODE1_NAME\");",
									"    const node3_name = pm.environment.get(\"NODE3_NAME\");",
									"",
									"    pm.expect(response.is_enabled).to.be.true",
									"    pm.expect(response.node_name).to.equal(node3_name)",
									"    pm.expect(response.connections.length).to.equal(1)",
									"",
									"    for (const node of response.connections) {",
									"        pm.expect(node.node_name).to.eql(node1_name)",
									"        pm.expect(node.status).to.equal('open');",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"operation\": \"cluster_status\"\n}"
						},
						"url": {
							"raw": "http://{{NODE3_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE3_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						},
						"description": "Make Node2 publish to Node1"
					},
					"response": [
						{
							"name": "Add Node",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"operation\": \"add_node\",\n    \"name\": \"node2\",\n    \"host\": \"192.168.100.100\",\n    \"port\": 9925,\n    \"subscriptions\": [\n        {\n            \"channel\": \"dev:dog\",\n            \"subscribe\": false,\n            \"publish\": true\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "50"
								},
								{
									"key": "ETag",
									"value": "W/\"32-SSInrnKg7a0FqI3KO7/TGYLgYAc\""
								},
								{
									"key": "Date",
									"value": "Fri, 18 Oct 2019 18:20:33 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Check Cluster Node4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Cluster status with Node2 is returned\", function () {",
									"    const response = pm.response.json();",
									"    const node2_name = pm.environment.get(\"NODE2_NAME\");",
									"    const node4_name = pm.environment.get(\"NODE4_NAME\");",
									"",
									"    pm.expect(response.is_enabled).to.be.true",
									"    pm.expect(response.node_name).to.equal(node4_name)",
									"    pm.expect(response.connections.length).to.equal(1)",
									"",
									"    for (const node of response.connections) {",
									"        pm.expect(node.node_name).to.eql(node2_name)",
									"        pm.expect(node.status).to.equal('open');",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"operation\": \"cluster_status\"\n}"
						},
						"url": {
							"raw": "http://{{NODE4_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE4_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						},
						"description": "Make Node2 publish to Node1"
					},
					"response": [
						{
							"name": "Add Node",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"operation\": \"add_node\",\n    \"name\": \"node2\",\n    \"host\": \"192.168.100.100\",\n    \"port\": 9925,\n    \"subscriptions\": [\n        {\n            \"channel\": \"dev:dog\",\n            \"subscribe\": false,\n            \"publish\": true\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "50"
								},
								{
									"key": "ETag",
									"value": "W/\"32-SSInrnKg7a0FqI3KO7/TGYLgYAc\""
								},
								{
									"key": "Date",
									"value": "Fri, 18 Oct 2019 18:20:33 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Check Cluster Node5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Cluster status with Node1 is returned\", function () {",
									"    const response = pm.response.json();",
									"    const node1_name = pm.environment.get(\"NODE1_NAME\");",
									"    const node5_name = pm.environment.get(\"NODE5_NAME\");",
									"",
									"    pm.expect(response.is_enabled).to.be.true",
									"    pm.expect(response.node_name).to.equal(node5_name)",
									"    pm.expect(response.connections.length).to.equal(1)",
									"",
									"    for (const node of response.connections) {",
									"        pm.expect(node.node_name).to.eql(node1_name)",
									"        pm.expect(node.status).to.equal('open');",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"operation\": \"cluster_status\"\n}"
						},
						"url": {
							"raw": "http://{{NODE5_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE5_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						},
						"description": "Make Node2 publish to Node1"
					},
					"response": [
						{
							"name": "Add Node",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"operation\": \"add_node\",\n    \"name\": \"node2\",\n    \"host\": \"192.168.100.100\",\n    \"port\": 9925,\n    \"subscriptions\": [\n        {\n            \"channel\": \"dev:dog\",\n            \"subscribe\": false,\n            \"publish\": true\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "50"
								},
								{
									"key": "ETag",
									"value": "W/\"32-SSInrnKg7a0FqI3KO7/TGYLgYAc\""
								},
								{
									"key": "Date",
									"value": "Fri, 18 Oct 2019 18:20:33 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Test schema/table/attr propagation",
			"item": [
				{
					"name": "TEST for treat-sys schema on Node1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"treat_sys schema on Node1\", function () {",
									"    const response = pm.response.json()",
									"    pm.expect(response.hasOwnProperty(\"treat_sys\")).to.be.eql(true);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"describe_all\"\n}"
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Decribe All",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"describe_all\"\n\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "568",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:07:00 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"238-gfg0d+lv1qmocnKKFjlrSBm00dM\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "TEST for treat_sys schema on Node2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"treat_sys schema on Node2\", function () {",
									"    const response = pm.response.json()",
									"    pm.expect(response.hasOwnProperty(\"treat_sys\")).to.be.eql(true);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"describe_all\"\n}"
						},
						"url": {
							"raw": "http://{{NODE2_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE2_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Decribe All",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"describe_all\"\n\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "568",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:07:00 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"238-gfg0d+lv1qmocnKKFjlrSBm00dM\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "TEST for treat_sys schema on Node3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"treat_sys schema on Node3\", function () {",
									"    const response = pm.response.json()",
									"    pm.expect(response.hasOwnProperty(\"treat_sys\")).to.be.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"describe_all\"\n}"
						},
						"url": {
							"raw": "http://{{NODE3_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE3_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Decribe All",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"describe_all\"\n\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "568",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:07:00 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"238-gfg0d+lv1qmocnKKFjlrSBm00dM\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "TEST for treat_sys schema on Node4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"treat_sys schema on Node4\", function () {",
									"    const response = pm.response.json()",
									"    pm.expect(response.hasOwnProperty(\"treat_sys\")).to.be.eql(true);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"describe_all\"\n}"
						},
						"url": {
							"raw": "http://{{NODE4_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE4_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Decribe All",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"describe_all\"\n\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "568",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:07:00 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"238-gfg0d+lv1qmocnKKFjlrSBm00dM\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "TEST for treat_sys schema on Node5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"treat_sys schema on Node5\", function () {",
									"    const response = pm.response.json()",
									"    pm.expect(response.hasOwnProperty(\"treat_sys\")).to.be.eql(true);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"describe_all\"\n}"
						},
						"url": {
							"raw": "http://{{NODE5_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE5_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Decribe All",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"describe_all\"\n\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "568",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:07:00 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"238-gfg0d+lv1qmocnKKFjlrSBm00dM\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "CREATE TABLE cam on Node1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Table treat_sys.cam was created\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql(\"table 'treat_sys.cam' successfully created.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"treat_sys\",\n  \"table\":\"cam\",\n  \"hash_attribute\": \"id\"\n}"
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Create dev.dog Table",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOjE0MDA=",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"dev\",\n  \"table\":\"dog\",\n  \"hash_attribute\": \"id\"\n}"
								},
								"url": {
									"raw": "http://localhost:9925",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "9925"
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "49",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:00:40 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"31-2FV9i2eJXU1F9rNuA4B9T7Vu7EA\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"message\":\"table dev.dog successfully created.\"}"
						}
					]
				},
				{
					"name": "TEST correct tables on Node1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"treat_sys.cam is on Node1\", function () {",
									"    const response = pm.response.json();",
									"    const tables = Object.keys(response.treat_sys);",
									"    pm.expect(tables.length).to.eql(5)",
									"    for (const table of tables) {",
									"        pm.expect(table).to.be.oneOf([\"collar\", \"cam\", \"hub1\", \"hub2\", \"dispenser\"]);",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"describe_all\"\n}"
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Decribe All",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"describe_all\"\n\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "568",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:07:00 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"238-gfg0d+lv1qmocnKKFjlrSBm00dM\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "TEST correct tables on Node2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"treat_sys.cam is on Node2\", function () {",
									"    const response = pm.response.json();",
									"    const tables = Object.keys(response.treat_sys);",
									"    pm.expect(tables.length).to.eql(3)",
									"    for (const table of tables) {",
									"        pm.expect(table).to.be.oneOf([\"hub1\", \"hub2\", \"collar2\"]);",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"describe_all\"\n}"
						},
						"url": {
							"raw": "http://{{NODE2_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE2_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Decribe All",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"describe_all\"\n\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "568",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:07:00 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"238-gfg0d+lv1qmocnKKFjlrSBm00dM\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "TEST correct tables on Node3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"treat_sys.cam not on Node3\", function () {",
									"    const response = pm.response.json();",
									"    const tables = Object.keys(response.treat_sys);",
									"    pm.expect(tables.length).to.eql(2)",
									"    for (const table of tables) {",
									"        pm.expect(table).to.be.oneOf([\"hub1\", \"collar\"]);",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"describe_all\"\n}"
						},
						"url": {
							"raw": "http://{{NODE3_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE3_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Decribe All",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"describe_all\"\n\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "568",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:07:00 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"238-gfg0d+lv1qmocnKKFjlrSBm00dM\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "TEST correct tables on Node4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"treat_sys.cam not on Node4\", function () {",
									"    const response = pm.response.json();",
									"    const tables = Object.keys(response.treat_sys);",
									"    pm.expect(tables.length).to.eql(2)",
									"    for (const table of tables) {",
									"        pm.expect(table).to.be.oneOf([\"hub2\", \"collar2\"]);",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"describe_all\"\n}"
						},
						"url": {
							"raw": "http://{{NODE4_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE4_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Decribe All",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"describe_all\"\n\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "568",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:07:00 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"238-gfg0d+lv1qmocnKKFjlrSBm00dM\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "TEST correct tables on Node5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"treat_sys.cam not on Node5\", function () {",
									"    const response = pm.response.json();",
									"    const tables = Object.keys(response.treat_sys);",
									"    pm.expect(tables.length).to.eql(2)",
									"    for (const table of tables) {",
									"        pm.expect(table).to.be.oneOf([\"hub1\", \"dispenser\"]);",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"describe_all\"\n}"
						},
						"url": {
							"raw": "http://{{NODE5_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE5_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Decribe All",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"describe_all\"\n\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "568",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:07:00 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"238-gfg0d+lv1qmocnKKFjlrSBm00dM\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "DROP table hub1 from Node1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Table hub1 was deleted from Node1\", function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"successfully deleted table 'treat_sys.hub1'\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"operation\":\"drop_table\",\n  \"schema\": \"treat_sys\",\n  \"table\": \"hub1\"\n}"
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Create dev Schema",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOjE0MDA=",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"dev\"\n}"
								},
								"url": {
									"raw": "http://localhost:9925",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "9925"
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "45",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 16:52:45 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"2d-GPJz4Nu7aSF7N/KODFK3o/TNPUw\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"message\":\"schema dev successfully created\"}"
						}
					]
				},
				{
					"name": "CONFIRM that table hub1 was dropped Node1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"hub1 table dropped from Node1\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.treat_sys.hub1).to.be.undefined;",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"describe_all\"\n}"
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Decribe All",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"describe_all\"\n\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "568",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:07:00 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"238-gfg0d+lv1qmocnKKFjlrSBm00dM\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "TEST that table hub1 still exists on Node2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"treat_sys.hub1 table still on Node2\", function () {",
									"    const resp = pm.response.json();",
									"    pm.expect(resp.treat_sys.hub1.name).to.equal(\"hub1\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"describe_all\"\n}"
						},
						"url": {
							"raw": "http://{{NODE2_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE2_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Decribe All",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"describe_all\"\n\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "568",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:07:00 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"238-gfg0d+lv1qmocnKKFjlrSBm00dM\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "TEST that table hub1 still exists on Node3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"treat_sys.hub1 table still on Node3\", function () {",
									"    const resp = pm.response.json();",
									"    pm.expect(resp.treat_sys.hub1.name).to.equal(\"hub1\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"describe_all\"\n}"
						},
						"url": {
							"raw": "http://{{NODE3_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE3_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Decribe All",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"describe_all\"\n\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "568",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:07:00 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"238-gfg0d+lv1qmocnKKFjlrSBm00dM\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "TEST that table hub1 still exists on Node5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"treat_sys.hub1 table still on Node5\", function () {",
									"    const resp = pm.response.json();",
									"    pm.expect(resp.treat_sys.hub1.name).to.equal(\"hub1\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"describe_all\"\n}"
						},
						"url": {
							"raw": "http://{{NODE5_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE5_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Decribe All",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"describe_all\"\n\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "568",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:07:00 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"238-gfg0d+lv1qmocnKKFjlrSBm00dM\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "DROP SCHEMA treat_sys from Node1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Schema treat_sys was deleted from Node1\", function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.equal(\"successfully deleted 'treat_sys'\");\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"operation\":\"drop_schema\",\n  \"schema\": \"treat_sys\"\n}"
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Create dev Schema",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOjE0MDA=",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"dev\"\n}"
								},
								"url": {
									"raw": "http://localhost:9925",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "9925"
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "45",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 16:52:45 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"2d-GPJz4Nu7aSF7N/KODFK3o/TNPUw\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"message\":\"schema dev successfully created\"}"
						}
					]
				},
				{
					"name": "CONFIRM that schema treat_sys dropped Node1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"treat_sys schema dropped from Node1\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.hasOwnProperty(\"treat_sys\")).to.be.false;",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"describe_all\"\n}"
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Decribe All",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"describe_all\"\n\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "568",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:07:00 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"238-gfg0d+lv1qmocnKKFjlrSBm00dM\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "TEST that schema treat_sys still exists on Node2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"treat_sys schema still on Node2\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.hasOwnProperty(\"treat_sys\")).to.be.true;",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"describe_all\"\n}"
						},
						"url": {
							"raw": "http://{{NODE2_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE2_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Decribe All",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"describe_all\"\n\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "568",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:07:00 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"238-gfg0d+lv1qmocnKKFjlrSBm00dM\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "TEST that schema treat_sys still exists on Node3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"treat_sys schema still on Node3\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.hasOwnProperty(\"treat_sys\")).to.be.true;",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"describe_all\"\n}"
						},
						"url": {
							"raw": "http://{{NODE3_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE3_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Decribe All",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"describe_all\"\n\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "568",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:07:00 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"238-gfg0d+lv1qmocnKKFjlrSBm00dM\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "TEST that schema treat_sys still exists on Node5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"treat_sys schema still on Node5\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.hasOwnProperty(\"treat_sys\")).to.be.true;",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"describe_all\"\n}"
						},
						"url": {
							"raw": "http://{{NODE5_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE5_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Decribe All",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"describe_all\"\n\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "568",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:07:00 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"238-gfg0d+lv1qmocnKKFjlrSBm00dM\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "RE-CREATE SCHEMA treat_sys on Node1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Schema treat_sys was re-created\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.equal(\"database 'treat_sys' successfully created\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"treat_sys\"\n}"
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Create dev Schema",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOjE0MDA=",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_schema\",\n  \"schema\": \"dev\"\n}"
								},
								"url": {
									"raw": "http://localhost:9925",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "9925"
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "45",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 16:52:45 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"2d-GPJz4Nu7aSF7N/KODFK3o/TNPUw\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"message\":\"schema dev successfully created\"}"
						}
					]
				},
				{
					"name": "RE-CREATE TABLE hub1 on Node1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Table treat_sys.hub1 was re-created\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.equal(\"table 'treat_sys.hub1' successfully created.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"treat_sys\",\n  \"table\":\"hub1\",\n  \"hash_attribute\": \"id\"\n}"
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Create dev.dog Table",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOjE0MDA=",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"dev\",\n  \"table\":\"dog\",\n  \"hash_attribute\": \"id\"\n}"
								},
								"url": {
									"raw": "http://localhost:9925",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "9925"
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "49",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:00:40 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"31-2FV9i2eJXU1F9rNuA4B9T7Vu7EA\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"message\":\"table dev.dog successfully created.\"}"
						}
					]
				},
				{
					"name": "RE-CREATE TABLE collar on Node1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Table treat_sys.collar was re-created\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.equal(\"table 'treat_sys.collar' successfully created.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"treat_sys\",\n  \"table\":\"collar\",\n  \"hash_attribute\": \"id\"\n}"
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Create dev.dog Table",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOjE0MDA=",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"dev\",\n  \"table\":\"dog\",\n  \"hash_attribute\": \"id\"\n}"
								},
								"url": {
									"raw": "http://localhost:9925",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "9925"
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "49",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:00:40 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"31-2FV9i2eJXU1F9rNuA4B9T7Vu7EA\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"message\":\"table dev.dog successfully created.\"}"
						}
					]
				},
				{
					"name": "RE-CREATE TABLE owners on Node1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Table treat_sys.dispenser was re-created\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.equal(\"table 'treat_sys.dispenser' successfully created.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"treat_sys\",\n  \"table\":\"dispenser\",\n  \"hash_attribute\": \"id\"\n}"
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Create dev.dog Table",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOjE0MDA=",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"dev\",\n  \"table\":\"dog\",\n  \"hash_attribute\": \"id\"\n}"
								},
								"url": {
									"raw": "http://localhost:9925",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "9925"
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "49",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:00:40 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"31-2FV9i2eJXU1F9rNuA4B9T7Vu7EA\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"message\":\"table dev.dog successfully created.\"}"
						}
					]
				},
				{
					"name": "RE-CREATE TABLE hub2 on Node1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Table treat_sys.hub2 was re-created\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.equal(\"table 'treat_sys.hub2' successfully created.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"treat_sys\",\n  \"table\":\"hub2\",\n  \"hash_attribute\": \"id\"\n}"
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Create dev.dog Table",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOjE0MDA=",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"create_table\",\n  \"schema\":\"dev\",\n  \"table\":\"dog\",\n  \"hash_attribute\": \"id\"\n}"
								},
								"url": {
									"raw": "http://localhost:9925",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "9925"
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "49",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:00:40 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"31-2FV9i2eJXU1F9rNuA4B9T7Vu7EA\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"message\":\"table dev.dog successfully created.\"}"
						}
					]
				}
			]
		},
		{
			"name": "Test insert/update/upsert propagation",
			"item": [
				{
					"name": "INSERT - NoSQL - into Node2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Insert two records into treat_sys.hub1 on Node2\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.equal(\"inserted 2 of 2 records\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"operation\":\"insert\",\n    \"schema\":\"treat_sys\",\n    \"table\":\"hub1\",\n    \"records\": [\n        {\n            \"treat\": true,\n            \"id\": 4,\n            \"timestamp\": \"2022-07-12T14:51:25Z\",\n            \"event\": \"proximity\"\n        },\n        {\n            \"treat\": false,\n            \"id\": 5,\n            \"timestamp\": \"2022-07-12T14:52:25Z\",\n            \"event\": \"proximity\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "http://{{NODE2_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE2_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "NoSQL Insert into dev.dog",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOjE0MDA=",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"dev\",\n\"table\":\"dog\",\n\"records\": [\n  {\n    \"name\":\"Harper\",\n    \"breed\":\"Mutt\",\n    \"id\":\"1\",\n    \"age\":5\n    \n  },\n  {\n    \"name\":\"Penny\",\n    \"breed\":\"Mutt\",\n    \"id\":\"3\",\n    \"age\":5\n    \n  }\n]\n\n}"
								},
								"url": {
									"raw": "http://localhost:9925",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "9925"
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "42",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:43:34 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"2a-+I7U4Tpdia9SawmsfcyNUq20tzU\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"message\":\"successfully wrote 2 records\"}"
						}
					]
				},
				{
					"name": "CONFIRM data in Node2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Data inserted in Node2\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.lengthOf(2);",
									"",
									"    for (const record of response) {",
									"        pm.expect(record.id).to.be.oneOf([4, 5])",
									"        pm.expect(record.event).to.equal(\"proximity\")",
									"        pm.expect(record.treat).to.be.oneOf([true, false])",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"search_by_value\",\n\t\"schema\":\"treat_sys\",\n\t\"table\":\"hub1\",\n\t\"search_attribute\":\"id\",\n\t\"search_value\":\"*\",\n\t\"get_attributes\":[\"*\"]\n}"
						},
						"url": {
							"raw": "http://{{NODE2_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE2_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						},
						"description": "<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'search_by_hashes'</li>\n\n<li><b>schema</b> <i>(required)</i> - schema where the table you are searching lives</li>\n\n<li><b>table</b> <i>(required)</i> - table you wish to search</li>\n\n<li><b>hash_attribute</b><i> (required)</i> - hash_attribute for table you are searching. defined in add table</li>\n\n<li><b>hash_values</b><i>(required) </i>- array of hashes to retrive </li>\n\n<li><b>get_attriburtes</b><i> (required)</i> - define which attributes you want returned. <i>Use '*' to return all attributes</i>\n</ul>"
					},
					"response": [
						{
							"name": "Search By Hash",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"search_by_hash\",\n  \"schema\": \"dev\",\n  \"table\": \"dog\",\n  \"hash_values\":[1,3],\n  \"get_attributes\": [\"*\"]\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "145",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:47:21 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"91-7qgDOcZcf+jmd3/hkx3lrpmyUCA\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "TEST data in Node1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Data propagated to Node1\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.lengthOf(2);",
									"",
									"    for (const record of response) {",
									"        pm.expect(record.id).to.be.oneOf([4, 5])",
									"        pm.expect(record.event).to.equal(\"proximity\")",
									"        pm.expect(record.treat).to.be.oneOf([true, false])",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"search_by_value\",\n\t\"schema\":\"treat_sys\",\n\t\"table\":\"hub1\",\n\t\"search_attribute\":\"id\",\n\t\"search_value\":\"*\",\n\t\"get_attributes\":[\"*\"]\n}"
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						},
						"description": "<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'search_by_hashes'</li>\n\n<li><b>schema</b> <i>(required)</i> - schema where the table you are searching lives</li>\n\n<li><b>table</b> <i>(required)</i> - table you wish to search</li>\n\n<li><b>hash_attribute</b><i> (required)</i> - hash_attribute for table you are searching. defined in add table</li>\n\n<li><b>hash_values</b><i>(required) </i>- array of hashes to retrive </li>\n\n<li><b>get_attriburtes</b><i> (required)</i> - define which attributes you want returned. <i>Use '*' to return all attributes</i>\n</ul>"
					},
					"response": [
						{
							"name": "Search By Hash",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"search_by_hash\",\n  \"schema\": \"dev\",\n  \"table\": \"dog\",\n  \"hash_values\":[1,3],\n  \"get_attributes\": [\"*\"]\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "145",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:47:21 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"91-7qgDOcZcf+jmd3/hkx3lrpmyUCA\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "TEST data in Node5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Data propagated to Node5\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.lengthOf(2);",
									"    ",
									"    for (const record of response) {",
									"        pm.expect(record.id).to.be.oneOf([4, 5])",
									"        pm.expect(record.event).to.equal(\"proximity\")",
									"        pm.expect(record.treat).to.be.oneOf([true, false])",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"search_by_value\",\n\t\"schema\":\"treat_sys\",\n\t\"table\":\"hub1\",\n\t\"search_attribute\":\"id\",\n\t\"search_value\":\"*\",\n\t\"get_attributes\":[\"*\"]\n}"
						},
						"url": {
							"raw": "http://{{NODE5_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE5_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						},
						"description": "<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'search_by_hashes'</li>\n\n<li><b>schema</b> <i>(required)</i> - schema where the table you are searching lives</li>\n\n<li><b>table</b> <i>(required)</i> - table you wish to search</li>\n\n<li><b>hash_attribute</b><i> (required)</i> - hash_attribute for table you are searching. defined in add table</li>\n\n<li><b>hash_values</b><i>(required) </i>- array of hashes to retrive </li>\n\n<li><b>get_attriburtes</b><i> (required)</i> - define which attributes you want returned. <i>Use '*' to return all attributes</i>\n</ul>"
					},
					"response": [
						{
							"name": "Search By Hash",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"search_by_hash\",\n  \"schema\": \"dev\",\n  \"table\": \"dog\",\n  \"hash_values\":[1,3],\n  \"get_attributes\": [\"*\"]\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "145",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:47:21 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"91-7qgDOcZcf+jmd3/hkx3lrpmyUCA\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "TEST data not in Node3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Data not propagated to Node3\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.lengthOf(0);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"search_by_value\",\n\t\"schema\":\"treat_sys\",\n\t\"table\":\"hub1\",\n\t\"search_attribute\":\"id\",\n\t\"search_value\":\"*\",\n\t\"get_attributes\":[\"*\"]\n}"
						},
						"url": {
							"raw": "http://{{NODE3_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE3_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Search By Hash",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"search_by_hash\",\n  \"schema\": \"dev\",\n  \"table\": \"dog\",\n  \"hash_values\":[1,3],\n  \"get_attributes\": [\"*\"]\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "145",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:47:21 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"91-7qgDOcZcf+jmd3/hkx3lrpmyUCA\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "INSERT - SQL - other data into Node3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Insert two records into treat_sys.hub1 on Node3\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.equal(\"inserted 2 of 2 records\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"sql\",\n\t\"sql\": \"INSERT INTO treat_sys.hub1 (sensor_data, id, treat) VALUES(true, 8, false), (false, 9, false)\"\n}"
						},
						"url": {
							"raw": "http://{{NODE3_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE3_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "NoSQL Insert into dev.dog",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOjE0MDA=",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"dev\",\n\"table\":\"dog\",\n\"records\": [\n  {\n    \"name\":\"Harper\",\n    \"breed\":\"Mutt\",\n    \"id\":\"1\",\n    \"age\":5\n    \n  },\n  {\n    \"name\":\"Penny\",\n    \"breed\":\"Mutt\",\n    \"id\":\"3\",\n    \"age\":5\n    \n  }\n]\n\n}"
								},
								"url": {
									"raw": "http://localhost:9925",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "9925"
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "42",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:43:34 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"2a-+I7U4Tpdia9SawmsfcyNUq20tzU\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"message\":\"successfully wrote 2 records\"}"
						}
					]
				},
				{
					"name": "CONFIRM other data in Node3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Data propagated to Node1\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.lengthOf(2);",
									"    for (const record of response) {",
									"        pm.expect(record.id).to.be.oneOf([8, 9])",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"search_by_value\",\n\t\"schema\":\"treat_sys\",\n\t\"table\":\"hub1\",\n\t\"search_attribute\":\"id\",\n\t\"search_value\":\"*\",\n\t\"get_attributes\":[\"*\"]\n}"
						},
						"url": {
							"raw": "http://{{NODE3_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE3_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Search By Hash",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"search_by_hash\",\n  \"schema\": \"dev\",\n  \"table\": \"dog\",\n  \"hash_values\":[1,3],\n  \"get_attributes\": [\"*\"]\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "145",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:47:21 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"91-7qgDOcZcf+jmd3/hkx3lrpmyUCA\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "TEST other data in Node1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Data propagated to Node1\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.lengthOf(4);",
									"",
									"    for (const record of response) {",
									"        pm.expect(record.id).to.be.oneOf([4, 5, 8, 9])",
									"       ",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"search_by_value\",\n\t\"schema\":\"treat_sys\",\n\t\"table\":\"hub1\",\n\t\"search_attribute\":\"id\",\n\t\"search_value\":\"*\",\n\t\"get_attributes\":[\"*\"]\n}"
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Search By Hash",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"search_by_hash\",\n  \"schema\": \"dev\",\n  \"table\": \"dog\",\n  \"hash_values\":[1,3],\n  \"get_attributes\": [\"*\"]\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "145",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:47:21 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"91-7qgDOcZcf+jmd3/hkx3lrpmyUCA\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "TEST other data in Node5",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Data propagated to Node5\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.lengthOf(4);",
									"    ",
									"    for (const record of response) {",
									"        pm.expect(record.id).to.be.oneOf([4, 5, 8, 9])",
									"       ",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"search_by_value\",\n\t\"schema\":\"treat_sys\",\n\t\"table\":\"hub1\",\n\t\"search_attribute\":\"id\",\n\t\"search_value\":\"*\",\n\t\"get_attributes\":[\"*\"]\n}"
						},
						"url": {
							"raw": "http://{{NODE5_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE5_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Search By Hash",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"search_by_hash\",\n  \"schema\": \"dev\",\n  \"table\": \"dog\",\n  \"hash_values\":[1,3],\n  \"get_attributes\": [\"*\"]\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "145",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:47:21 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"91-7qgDOcZcf+jmd3/hkx3lrpmyUCA\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "TEST other data in Node2",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Data propagated to Node2\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.lengthOf(4);",
									"    ",
									"    for (const record of response) {",
									"        pm.expect(record.id).to.be.oneOf([4, 5, 8, 9])",
									"       ",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"search_by_value\",\n\t\"schema\":\"treat_sys\",\n\t\"table\":\"hub1\",\n\t\"search_attribute\":\"id\",\n\t\"search_value\":\"*\",\n\t\"get_attributes\":[\"*\"]\n}"
						},
						"url": {
							"raw": "http://{{NODE2_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE2_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Search By Hash",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"search_by_hash\",\n  \"schema\": \"dev\",\n  \"table\": \"dog\",\n  \"hash_values\":[1,3],\n  \"get_attributes\": [\"*\"]\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "145",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:47:21 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"91-7qgDOcZcf+jmd3/hkx3lrpmyUCA\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "UPDATE - NoSQL - record in Node5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Data hash 2 updated in Node5\", function () {",
									"    const response = pm.response.json()",
									"    pm.expect(response.update_hashes).to.eql([4, 8]);  ",
									"    pm.expect(response.skipped_hashes).to.eql([]);  ",
									"    pm.expect(response.message).to.equal(\"updated 2 of 2 records\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"update\",\n\t\"schema\":\"treat_sys\",\n\t\"table\":\"hub1\",\n\t\"records\": [\n\t  {\n\t    \"id\": 4,\n        \"sensor_data\": false,\n        \"new_data_stuff\": \"more data\"\n\t  },\n\t  {\n\t    \"id\": 8,\n        \"event\": \"restart\",\n        \"treat\": true\n\t  }\n\t]\n}"
						},
						"url": {
							"raw": "http://{{NODE5_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE5_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Update",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"update\",\n\"schema\":\"dev\",\n\"table\":\"dog\",\n\"records\": [\n  {\n    \"id\": 1,\n    \"weight_lbs\": 55\n  },\n    {\n    \"id\": 3,\n    \"owner\": \"kyle b\",\n    \"weight_lbs\": 35\n  }\n]\n\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "78",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:44:20 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"4e-TQj7cawhxiZSTYGpOL1BQRmQM/8\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "TEST updated data NOT in Node1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Data NOT updated to Node1\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.lengthOf(4);",
									"    response.forEach(record => {",
									"        if (record.id === 4) {",
									"            pm.expect(record.new_data).to.be.undefined;",
									"        }",
									"    ",
									"    });",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"search_by_value\",\n\t\"schema\":\"treat_sys\",\n\t\"table\":\"hub1\",\n\t\"search_attribute\":\"id\",\n\t\"search_value\":\"*\",\n\t\"get_attributes\":[\"*\"]\n}"
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Search By Hash",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"search_by_hash\",\n  \"schema\": \"dev\",\n  \"table\": \"dog\",\n  \"hash_values\":[1,3],\n  \"get_attributes\": [\"*\"]\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "145",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:47:21 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"91-7qgDOcZcf+jmd3/hkx3lrpmyUCA\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "TEST updated data NOT in Node2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Data NOT updated to Node2\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.lengthOf(4);",
									"    response.forEach(record => {",
									"        if (record.id === 4) {",
									"            pm.expect(record.new_data).to.be.undefined;",
									"        }",
									"        if (record.id === 8) {",
									"            pm.expect(record.treat).to.be.false;",
									"        }",
									"    ",
									"    });",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"search_by_value\",\n\t\"schema\":\"treat_sys\",\n\t\"table\":\"hub1\",\n\t\"search_attribute\":\"id\",\n\t\"search_value\":\"*\",\n\t\"get_attributes\":[\"*\"]\n}"
						},
						"url": {
							"raw": "http://{{NODE2_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE2_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Search By Hash",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"search_by_hash\",\n  \"schema\": \"dev\",\n  \"table\": \"dog\",\n  \"hash_values\":[1,3],\n  \"get_attributes\": [\"*\"]\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "145",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:47:21 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"91-7qgDOcZcf+jmd3/hkx3lrpmyUCA\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "TEST updated data NOT in Node3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Data NOT updated to Node3\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.lengthOf(2);",
									"",
									"    for (const record of response) {",
									"        pm.expect(record.id).to.be.oneOf([8, 9])",
									"        if (record.id === 8) {",
									"                pm.expect(record.new_data).to.be.undefined;",
									"            }",
									"    ",
									"        pm.expect(Object.keys(record)).to.be.length(5)",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"search_by_value\",\n\t\"schema\":\"treat_sys\",\n\t\"table\":\"hub1\",\n\t\"search_attribute\":\"id\",\n\t\"search_value\":\"*\",\n\t\"get_attributes\":[\"*\"]\n}"
						},
						"url": {
							"raw": "http://{{NODE3_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE3_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Search By Hash",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"search_by_hash\",\n  \"schema\": \"dev\",\n  \"table\": \"dog\",\n  \"hash_values\":[1,3],\n  \"get_attributes\": [\"*\"]\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "145",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:47:21 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"91-7qgDOcZcf+jmd3/hkx3lrpmyUCA\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "UPDATE - SQL - record in Node2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Data hash 4 updated on Node2\", function () {",
									"    const response = pm.response.json()",
									"    pm.expect(response.update_hashes).to.eql([4]);  ",
									"    pm.expect(response.skipped_hashes).to.eql([]);  ",
									"    pm.expect(response.message).to.equal(\"updated 1 of 1 records\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"sql\",\n\t\"sql\":\"UPDATE treat_sys.hub1 SET sensor_data=true, extra_data='even more info' WHERE id=4\"\n}"
						},
						"url": {
							"raw": "http://{{NODE2_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE2_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Update",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"update\",\n\"schema\":\"dev\",\n\"table\":\"dog\",\n\"records\": [\n  {\n    \"id\": 1,\n    \"weight_lbs\": 55\n  },\n    {\n    \"id\": 3,\n    \"owner\": \"kyle b\",\n    \"weight_lbs\": 35\n  }\n]\n\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "78",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:44:20 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"4e-TQj7cawhxiZSTYGpOL1BQRmQM/8\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "TEST more updated data in Node1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Data updated to Node1\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.lengthOf(4);",
									"    response.forEach(record => {",
									"        if (record.id === 4) {",
									"            pm.expect(record.extra_data).to.equal(\"even more info\");",
									"            pm.expect(record.sensor_data).to.be.true;",
									"        }",
									"    ",
									"        pm.expect(Object.keys(record)).to.be.length(8)",
									"    });",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"search_by_value\",\n\t\"schema\":\"treat_sys\",\n\t\"table\":\"hub1\",\n\t\"search_attribute\":\"id\",\n\t\"search_value\":\"*\",\n\t\"get_attributes\":[\"*\"]\n}"
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Search By Hash",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"search_by_hash\",\n  \"schema\": \"dev\",\n  \"table\": \"dog\",\n  \"hash_values\":[1,3],\n  \"get_attributes\": [\"*\"]\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "145",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:47:21 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"91-7qgDOcZcf+jmd3/hkx3lrpmyUCA\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "TEST more updated data in Node5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Data updated to Node5\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.lengthOf(4);",
									"    response.forEach(record => {",
									"        if (record.id === 4) {",
									"            pm.expect(record.extra_data).to.equal(\"even more info\");",
									"            pm.expect(record.sensor_data).to.be.true;",
									"        }",
									"    ",
									"    });",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"search_by_value\",\n\t\"schema\":\"treat_sys\",\n\t\"table\":\"hub1\",\n\t\"search_attribute\":\"id\",\n\t\"search_value\":\"*\",\n\t\"get_attributes\":[\"*\"]\n}"
						},
						"url": {
							"raw": "http://{{NODE5_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE5_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Search By Hash",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"search_by_hash\",\n  \"schema\": \"dev\",\n  \"table\": \"dog\",\n  \"hash_values\":[1,3],\n  \"get_attributes\": [\"*\"]\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "145",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:47:21 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"91-7qgDOcZcf+jmd3/hkx3lrpmyUCA\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "TEST more updated data NOT in Node3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Data NOT updated to Node3\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.lengthOf(2);",
									"    for (const record of response) {",
									"        pm.expect(record.id).to.be.oneOf([8, 9])",
									"        if (record.id === 8) {",
									"                pm.expect(record.extra_data).to.be.undefined;",
									"            }",
									"        pm.expect(Object.keys(record)).to.be.length(5)",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"search_by_value\",\n\t\"schema\":\"treat_sys\",\n\t\"table\":\"hub1\",\n\t\"search_attribute\":\"id\",\n\t\"search_value\":\"*\",\n\t\"get_attributes\":[\"*\"]\n}"
						},
						"url": {
							"raw": "http://{{NODE3_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE3_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Search By Hash",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"search_by_hash\",\n  \"schema\": \"dev\",\n  \"table\": \"dog\",\n  \"hash_values\":[1,3],\n  \"get_attributes\": [\"*\"]\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "145",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:47:21 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"91-7qgDOcZcf+jmd3/hkx3lrpmyUCA\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "INSERT - NoSQL - into Node4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Insert two records into treat_sys.hub1 on Node4\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.equal(\"inserted 2 of 2 records\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"operation\":\"insert\",\n    \"schema\":\"treat_sys\",\n    \"table\":\"hub2\",\n    \"records\": [\n        {\n            \"id\": 20,\n            \"timestamp\": \"2021-12-12T14:51:25Z\",\n            \"event\": \"restart\"\n        },\n        {\n            \"id\": 21,\n            \"timestamp\": \"2021-08-12T14:52:25Z\",\n            \"event\": \"update\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "http://{{NODE4_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE4_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "NoSQL Insert into dev.dog",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOjE0MDA=",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"insert\",\n\"schema\":\"dev\",\n\"table\":\"dog\",\n\"records\": [\n  {\n    \"name\":\"Harper\",\n    \"breed\":\"Mutt\",\n    \"id\":\"1\",\n    \"age\":5\n    \n  },\n  {\n    \"name\":\"Penny\",\n    \"breed\":\"Mutt\",\n    \"id\":\"3\",\n    \"age\":5\n    \n  }\n]\n\n}"
								},
								"url": {
									"raw": "http://localhost:9925",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "9925"
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "42",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:43:34 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"2a-+I7U4Tpdia9SawmsfcyNUq20tzU\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"message\":\"successfully wrote 2 records\"}"
						}
					]
				},
				{
					"name": "TEST data in Node4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Data inserted in hub2 of Node4\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.lengthOf(2);",
									"",
									"    for (const record of response) {",
									"        pm.expect(record.id).to.be.oneOf([20, 21])",
									"        pm.expect(record.event).to.be.oneOf([\"restart\", \"update\"])",
									"        pm.expect(record.timestamp).to.be.oneOf([\"2021-12-12T14:51:25Z\", \"2021-08-12T14:52:25Z\"])",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"setTimeout(()=>{}, 100);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"search_by_value\",\n\t\"schema\":\"treat_sys\",\n\t\"table\":\"hub2\",\n\t\"search_attribute\":\"id\",\n\t\"search_value\":\"*\",\n\t\"get_attributes\":[\"*\"]\n}"
						},
						"url": {
							"raw": "http://{{NODE4_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE4_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						},
						"description": "<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'search_by_hashes'</li>\n\n<li><b>schema</b> <i>(required)</i> - schema where the table you are searching lives</li>\n\n<li><b>table</b> <i>(required)</i> - table you wish to search</li>\n\n<li><b>hash_attribute</b><i> (required)</i> - hash_attribute for table you are searching. defined in add table</li>\n\n<li><b>hash_values</b><i>(required) </i>- array of hashes to retrive </li>\n\n<li><b>get_attriburtes</b><i> (required)</i> - define which attributes you want returned. <i>Use '*' to return all attributes</i>\n</ul>"
					},
					"response": [
						{
							"name": "Search By Hash",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"search_by_hash\",\n  \"schema\": \"dev\",\n  \"table\": \"dog\",\n  \"hash_values\":[1,3],\n  \"get_attributes\": [\"*\"]\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "145",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:47:21 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"91-7qgDOcZcf+jmd3/hkx3lrpmyUCA\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "TEST data in Node2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Data propogated to hub2 of Node2\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.lengthOf(2);",
									"    ",
									"    for (const record of response) {",
									"        pm.expect(record.id).to.be.oneOf([20, 21])",
									"        pm.expect(record.event).to.be.oneOf([\"restart\", \"update\"])",
									"        pm.expect(record.timestamp).to.be.oneOf([\"2021-12-12T14:51:25Z\", \"2021-08-12T14:52:25Z\"])",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"search_by_value\",\n\t\"schema\":\"treat_sys\",\n\t\"table\":\"hub2\",\n\t\"search_attribute\":\"id\",\n\t\"search_value\":\"*\",\n\t\"get_attributes\":[\"*\"]\n}"
						},
						"url": {
							"raw": "http://{{NODE2_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE2_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						},
						"description": "<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'search_by_hashes'</li>\n\n<li><b>schema</b> <i>(required)</i> - schema where the table you are searching lives</li>\n\n<li><b>table</b> <i>(required)</i> - table you wish to search</li>\n\n<li><b>hash_attribute</b><i> (required)</i> - hash_attribute for table you are searching. defined in add table</li>\n\n<li><b>hash_values</b><i>(required) </i>- array of hashes to retrive </li>\n\n<li><b>get_attriburtes</b><i> (required)</i> - define which attributes you want returned. <i>Use '*' to return all attributes</i>\n</ul>"
					},
					"response": [
						{
							"name": "Search By Hash",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"search_by_hash\",\n  \"schema\": \"dev\",\n  \"table\": \"dog\",\n  \"hash_values\":[1,3],\n  \"get_attributes\": [\"*\"]\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "145",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:47:21 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"91-7qgDOcZcf+jmd3/hkx3lrpmyUCA\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "TEST data in Node1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Data propogated to hub2 of Node1\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.lengthOf(2);",
									"    ",
									"    for (const record of response) {",
									"        pm.expect(record.id).to.be.oneOf([20, 21])",
									"        pm.expect(record.event).to.be.oneOf([\"restart\", \"update\"])",
									"        pm.expect(record.timestamp).to.be.oneOf([\"2021-12-12T14:51:25Z\", \"2021-08-12T14:52:25Z\"])",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"search_by_value\",\n\t\"schema\":\"treat_sys\",\n\t\"table\":\"hub2\",\n\t\"search_attribute\":\"id\",\n\t\"search_value\":\"*\",\n\t\"get_attributes\":[\"*\"]\n}"
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						},
						"description": "<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'search_by_hashes'</li>\n\n<li><b>schema</b> <i>(required)</i> - schema where the table you are searching lives</li>\n\n<li><b>table</b> <i>(required)</i> - table you wish to search</li>\n\n<li><b>hash_attribute</b><i> (required)</i> - hash_attribute for table you are searching. defined in add table</li>\n\n<li><b>hash_values</b><i>(required) </i>- array of hashes to retrive </li>\n\n<li><b>get_attriburtes</b><i> (required)</i> - define which attributes you want returned. <i>Use '*' to return all attributes</i>\n</ul>"
					},
					"response": [
						{
							"name": "Search By Hash",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"search_by_hash\",\n  \"schema\": \"dev\",\n  \"table\": \"dog\",\n  \"hash_values\":[1,3],\n  \"get_attributes\": [\"*\"]\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "145",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:47:21 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"91-7qgDOcZcf+jmd3/hkx3lrpmyUCA\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "UPDATE relationship Node4 to Node2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"const node4_name = pm.environment.get('NODE4_NAME')",
									"pm.test(\"Node4 added to Node2\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql(`Successfully updated '${node4_name}'`);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"operation\": \"update_node\",\n    \"node_name\": \"{{NODE4_NAME}}\",\n    \"subscriptions\": [\n        {\n            \"schema\": \"treat_sys\",\n            \"table\": \"collar2\",\n            \"subscribe\": false,\n            \"publish\": true\n        },\n        {\n            \"schema\": \"treat_sys\",\n            \"table\": \"hub2\",\n            \"subscribe\": false,\n            \"publish\": true\n        }\n    ]\n}"
						},
						"url": {
							"raw": "http://{{NODE2_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE2_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						},
						"description": "Make Node4 publish and subscribe to Node1"
					},
					"response": [
						{
							"name": "Add Node",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"operation\": \"add_node\",\n    \"name\": \"node2\",\n    \"host\": \"192.168.100.100\",\n    \"port\": 9925,\n    \"subscriptions\": [\n        {\n            \"channel\": \"dev:dog\",\n            \"subscribe\": false,\n            \"publish\": true\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "50"
								},
								{
									"key": "ETag",
									"value": "W/\"32-SSInrnKg7a0FqI3KO7/TGYLgYAc\""
								},
								{
									"key": "Date",
									"value": "Fri, 18 Oct 2019 18:20:33 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "UPSERT - NoSQL - record in Node4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Upsert One Record in Node4\", function () {",
									"    const response = pm.response.json()",
									"    pm.expect(response.message).to.equal(\"upserted 1 of 1 records\");",
									"    pm.expect(response.upserted_hashes).to.eql([20]);   ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"upsert\",\n\t\"schema\":\"treat_sys\",\n\t\"table\":\"hub2\",\n\t\"records\": [\n\t  {\n\t    \"id\": 20,\n\t    \"newest_data\": \"xyz\"\n\t  }\n\t]\n}"
						},
						"url": {
							"raw": "http://{{NODE4_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE4_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Update",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"update\",\n\"schema\":\"dev\",\n\"table\":\"dog\",\n\"records\": [\n  {\n    \"id\": 1,\n    \"weight_lbs\": 55\n  },\n    {\n    \"id\": 3,\n    \"owner\": \"kyle b\",\n    \"weight_lbs\": 35\n  }\n]\n\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "78",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:44:20 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"4e-TQj7cawhxiZSTYGpOL1BQRmQM/8\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "TEST upserted data in Node4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Data upserted correctly on Node4\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.lengthOf(2);  ",
									"    response.forEach(record => {",
									"        if (record.id === 20) {",
									"            pm.expect(record.newest_data).to.equal(\"xyz\");",
									"        }",
									"    });",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"search_by_value\",\n\t\"schema\":\"treat_sys\",\n\t\"table\":\"hub2\",\n\t\"search_attribute\":\"id\",\n\t\"search_value\":\"*\",\n\t\"get_attributes\":[\"*\"]\n}"
						},
						"url": {
							"raw": "http://{{NODE4_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE4_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Search By Hash",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"search_by_hash\",\n  \"schema\": \"dev\",\n  \"table\": \"dog\",\n  \"hash_values\":[1,3],\n  \"get_attributes\": [\"*\"]\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "145",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:47:21 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"91-7qgDOcZcf+jmd3/hkx3lrpmyUCA\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "TEST upserted data NOT in Node2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Data upserted correctly on Node2\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.lengthOf(2);  ",
									"    response.forEach(record => {",
									"        if (record.id === 20) {",
									"            pm.expect(record.newest_data).to.be.undefined;",
									"        }",
									"        pm.expect(Object.keys(record)).to.be.length(5)",
									"    });",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"search_by_value\",\n\t\"schema\":\"treat_sys\",\n\t\"table\":\"hub2\",\n\t\"search_attribute\":\"id\",\n\t\"search_value\":\"*\",\n\t\"get_attributes\":[\"*\"]\n}"
						},
						"url": {
							"raw": "http://{{NODE2_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE2_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Search By Hash",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"search_by_hash\",\n  \"schema\": \"dev\",\n  \"table\": \"dog\",\n  \"hash_values\":[1,3],\n  \"get_attributes\": [\"*\"]\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "145",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:47:21 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"91-7qgDOcZcf+jmd3/hkx3lrpmyUCA\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"setTimeout(() => {}, 10)"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Test Roles with Insert/Update/Read/Delete",
			"item": [
				{
					"name": "Add non-SU role on Node1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"responseData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"role_id\", responseData.id)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic SERCX0FETUlOOnJvb3QxOTg0"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\": \"add_role\",\n\t\"role\": \"test_dev_role_1\",\n\t\"permission\": {\n\t\t\"super_user\": false,\n\t\t\"treat_sys\": {\n\t\t\t\"tables\": {\n\t\t\t\t\"hub1\": {\n\t\t\t\t\t\"read\": true,\n\t\t\t\t\t\"insert\": false,\n\t\t\t\t\t\"update\": false,\n\t\t\t\t\t\"delete\": false,\n\t\t\t\t\t\"attribute_permissions\": []\n\t\t\t\t},\n\t\t\t\t\"hub2\": {\n\t\t\t\t\t\"read\": true,\n\t\t\t\t\t\"insert\": true,\n\t\t\t\t\t\"update\": true,\n\t\t\t\t\t\"delete\": true,\n\t\t\t\t\t\"attribute_permissions\": []\n\t\t\t\t},\n\t\t\t\t\"collar\": {\n\t\t\t\t\t\"read\": false,\n\t\t\t\t\t\"insert\": false,\n\t\t\t\t\t\"update\": false,\n\t\t\t\t\t\"delete\": false,\n\t\t\t\t\t\"attribute_permissions\": []\n\t\t\t\t},\n\t\t\t\t\"dispenser\": {\n\t\t\t\t\t\"read\": true,\n\t\t\t\t\t\"insert\": true,\n\t\t\t\t\t\"update\": false,\n\t\t\t\t\t\"delete\": false,\n\t\t\t\t\t\"attribute_permissions\": []\n\t\t\t\t}\n\t\t\t\t\n            }\n        }\n\t}\n}"
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "Add User with non-SU role",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic c2dvbGRiZXJnOnRlc3QxMjM0IQ=="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"operation\":\"add_user\",\n    \"role\":\"test_dev_role_1\",\n    \"username\":\"test_user\",\n    \"password\":\"{{password}}\", \n    \"active\":true\n}"
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "Try to Insert with non SU on Node1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"const jsonData = pm.response.json();",
									"",
									"pm.test(\"Operation auth error message for csv_data_load non-SU\", function () {",
									"    pm.expect(jsonData.error).to.eql(\"This operation is not authorized due to role restrictions and/or invalid database items\");",
									"});",
									"",
									"pm.test(\"Includes correct table perm object in unauthorized_access\", function () {",
									"    pm.expect(jsonData.unauthorized_access.length).to.eql(1);",
									"    pm.expect(jsonData.unauthorized_access[0].schema).to.eql(\"treat_sys\");",
									"    pm.expect(jsonData.unauthorized_access[0].table).to.eql(\"hub1\");",
									"    pm.expect(jsonData.unauthorized_access[0].required_table_permissions).to.eql([\"insert\"]);",
									"});",
									"",
									"pm.test(\"Invalid_schema_items is empty\", function () {",
									"    pm.expect(jsonData.invalid_schema_items.length).to.eql(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test_user",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\": \"insert\",\n\t\"schema\": \"treat_sys\",\n\t\"table\": \"hub1\",\n\t\"records\": [\n        {\n            \"treat\": true,\n            \"id\": 17,\n            \"timestamp\": \"2022-02-12T14:51:25Z\",\n            \"event\": \"proximity\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						},
						"description": "Checks to confirm that a 500 status and error msg are returned when an invalid attribute name is used"
					},
					"response": []
				},
				{
					"name": "CONFIRM record NOT inserted to hub1 on Node1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Data NOT inserted to Node1\", function () {",
									"    const response = pm.response.json();",
									"    for (const record of response) {",
									"        pm.expect(record.id).to.not.eql(17)",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"search_by_value\",\n\t\"schema\":\"treat_sys\",\n\t\"table\":\"hub1\",\n\t\"search_attribute\":\"id\",\n\t\"search_value\":\"*\",\n\t\"get_attributes\":[\"*\"]\n}"
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Search By Hash",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"search_by_hash\",\n  \"schema\": \"dev\",\n  \"table\": \"dog\",\n  \"hash_values\":[1,3],\n  \"get_attributes\": [\"*\"]\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "145",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:47:21 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"91-7qgDOcZcf+jmd3/hkx3lrpmyUCA\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Try to Read with non SU on Node1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test_user",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"search_by_value\",\n\t\"schema\":\"treat_sys\",\n\t\"table\":\"hub1\",\n\t\"search_attribute\":\"id\",\n\t\"search_value\":\"*\",\n\t\"get_attributes\":[\"*\"]\n}"
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						},
						"description": "Checks to confirm that a 500 status and error msg are returned when an invalid attribute name is used"
					},
					"response": []
				},
				{
					"name": "Try to Read with non SU on Node2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Test nonSU cannot access Node2 without permission\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.error).to.eql(\"Login failed\")",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test_user",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"search_by_value\",\n\t\"schema\":\"treat_sys\",\n\t\"table\":\"hub1\",\n\t\"search_attribute\":\"id\",\n\t\"search_value\":\"*\",\n\t\"get_attributes\":[\"*\"]\n}"
						},
						"url": {
							"raw": "http://{{NODE2_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE2_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						},
						"description": "Checks to confirm that a 500 status and error msg are returned when an invalid attribute name is used"
					},
					"response": []
				},
				{
					"name": "Try to Read with non SU on Node3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Test nonSU cannot access Node3 without permission\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.error).to.eql(\"Login failed\")",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test_user",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"search_by_value\",\n\t\"schema\":\"treat_sys\",\n\t\"table\":\"hub1\",\n\t\"search_attribute\":\"id\",\n\t\"search_value\":\"*\",\n\t\"get_attributes\":[\"*\"]\n}"
						},
						"url": {
							"raw": "http://{{NODE3_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE3_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						},
						"description": "Checks to confirm that a 500 status and error msg are returned when an invalid attribute name is used"
					},
					"response": []
				},
				{
					"name": "Try to Read with non SU on Node5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Test nonSU cannot access Node5 without permission\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.error).to.eql(\"Login failed\")",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test_user",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"search_by_value\",\n\t\"schema\":\"treat_sys\",\n\t\"table\":\"hub1\",\n\t\"search_attribute\":\"id\",\n\t\"search_value\":\"*\",\n\t\"get_attributes\":[\"*\"]\n}"
						},
						"url": {
							"raw": "http://{{NODE5_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE5_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						},
						"description": "Checks to confirm that a 500 status and error msg are returned when an invalid attribute name is used"
					},
					"response": []
				},
				{
					"name": "Try to Update with non SU on Node1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"const jsonData = pm.response.json();",
									"",
									"pm.test(\"Operation auth error message for csv_data_load non-SU\", function () {",
									"    pm.expect(jsonData.error).to.eql(\"This operation is not authorized due to role restrictions and/or invalid database items\");",
									"});",
									"",
									"pm.test(\"Includes correct table perm object in unauthorized_access\", function () {",
									"    pm.expect(jsonData.unauthorized_access.length).to.eql(1);",
									"    pm.expect(jsonData.unauthorized_access[0].schema).to.eql(\"treat_sys\");",
									"    pm.expect(jsonData.unauthorized_access[0].table).to.eql(\"hub1\");",
									"    pm.expect(jsonData.unauthorized_access[0].required_table_permissions).to.eql([\"update\"]);",
									"});",
									"",
									"pm.test(\"invalid_schema_items is empty\", function () {",
									"    pm.expect(jsonData.invalid_schema_items.length).to.eql(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test_user",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\": \"update\",\n\t\"schema\": \"treat_sys\",\n\t\"table\": \"hub1\",\n\t\"records\": [\n        {\n            \"id\": 4,\n            \"extra_data\": \"updated info\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						},
						"description": "Checks to confirm that a 500 status and error msg are returned when an invalid attribute name is used"
					},
					"response": []
				},
				{
					"name": "CONFIRM record NOT updated hub1 on Node1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Data NOT updated to Node1\", function () {",
									"    const response = pm.response.json();",
									"    for (const record of response) {",
									"        pm.expect(record.id).to.be.oneOf([4, 5, 8, 9])",
									"        if (record.id === 4) {",
									"            pm.expect(record.extra_data).to.not.eql('updated info')",
									"        } ",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"search_by_value\",\n\t\"schema\":\"treat_sys\",\n\t\"table\":\"hub1\",\n\t\"search_attribute\":\"id\",\n\t\"search_value\":\"*\",\n\t\"get_attributes\":[\"*\"]\n}"
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Search By Hash",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"search_by_hash\",\n  \"schema\": \"dev\",\n  \"table\": \"dog\",\n  \"hash_values\":[1,3],\n  \"get_attributes\": [\"*\"]\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "145",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:47:21 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"91-7qgDOcZcf+jmd3/hkx3lrpmyUCA\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Try to Delete with non SU on Node1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"const jsonData = pm.response.json();",
									"",
									"pm.test(\"Operation auth error message for csv_data_load non-SU\", function () {",
									"    pm.expect(jsonData.error).to.eql(\"This operation is not authorized due to role restrictions and/or invalid database items\");",
									"});",
									"",
									"pm.test(\"Includes correct table perm object in unauthorized_access\", function () {",
									"    pm.expect(jsonData.unauthorized_access.length).to.eql(1);",
									"    pm.expect(jsonData.unauthorized_access[0].schema).to.eql(\"treat_sys\");",
									"    pm.expect(jsonData.unauthorized_access[0].table).to.eql(\"hub1\");",
									"    pm.expect(jsonData.unauthorized_access[0].required_table_permissions).to.eql([\"delete\"]);",
									"});",
									"",
									"pm.test(\"invalid_schema_items is empty\", function () {",
									"    pm.expect(jsonData.invalid_schema_items.length).to.eql(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test_user",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"delete\",\n\t\"schema\":\"treat_sys\",\n\t\"table\":\"hub1\",\n\t\"hash_values\":[4]\n}"
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						},
						"description": "Checks to confirm that a 500 status and error msg are returned when an invalid attribute name is used"
					},
					"response": []
				},
				{
					"name": "CONFIRM record NOT deleted from hub1 on Node1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Data NOT deleted from hub1 Node1\", function () {",
									"    const response = pm.response.json();",
									"    for (const record of response) {",
									"        pm.expect(record.id).to.be.oneOf([4, 5, 8, 9])",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"search_by_value\",\n\t\"schema\":\"treat_sys\",\n\t\"table\":\"hub1\",\n\t\"search_attribute\":\"id\",\n\t\"search_value\":\"*\",\n\t\"get_attributes\":[\"*\"]\n}"
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Search By Hash",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"search_by_hash\",\n  \"schema\": \"dev\",\n  \"table\": \"dog\",\n  \"hash_values\":[1,3],\n  \"get_attributes\": [\"*\"]\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "145",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:47:21 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"91-7qgDOcZcf+jmd3/hkx3lrpmyUCA\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Try to Insert with non SU on Node1 hub2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Insert works with nonSU on Node1 hub2\", function () {",
									"    const response = pm.response.json()",
									"    pm.expect(response.message).to.equal(\"inserted 1 of 1 records\")",
									"    pm.expect(response.inserted_hashes).to.eql([17])",
									"    pm.expect(response.skipped_hashes).to.eql([])",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test_user",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\": \"insert\",\n\t\"schema\": \"treat_sys\",\n\t\"table\": \"hub2\",\n\t\"records\": [\n        {\n            \"treat\": true,\n            \"id\": 17,\n            \"timestamp\": \"2022-02-12T14:51:25Z\",\n            \"event\": \"proximity\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						},
						"description": "Checks to confirm that a 500 status and error msg are returned when an invalid attribute name is used"
					},
					"response": []
				},
				{
					"name": "CONFIRM record inserted to hub2 on Node1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Data inserted to Node1\", function () {",
									"    const response = pm.response.json();",
									"    for (const record of response) {",
									"        pm.expect(record.id).to.be.oneOf([17, 20, 21])",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"search_by_value\",\n\t\"schema\":\"treat_sys\",\n\t\"table\":\"hub2\",\n\t\"search_attribute\":\"id\",\n\t\"search_value\":\"*\",\n\t\"get_attributes\":[\"*\"]\n}"
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Search By Hash",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"search_by_hash\",\n  \"schema\": \"dev\",\n  \"table\": \"dog\",\n  \"hash_values\":[1,3],\n  \"get_attributes\": [\"*\"]\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "145",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:47:21 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"91-7qgDOcZcf+jmd3/hkx3lrpmyUCA\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "CONFIRM nonSU data in Node2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Data propagated to hub2 in Node2\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.lengthOf(3);",
									"",
									"    for (const record of response) {",
									"        const attributes = Object.keys(record)",
									"        pm.expect(record.id).to.be.oneOf([17, 20, 21])",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"search_by_value\",\n\t\"schema\":\"treat_sys\",\n\t\"table\":\"hub2\",\n\t\"search_attribute\":\"id\",\n\t\"search_value\":\"*\",\n\t\"get_attributes\":[\"*\"]\n}"
						},
						"url": {
							"raw": "http://{{NODE2_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE2_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						},
						"description": "<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'search_by_hashes'</li>\n\n<li><b>schema</b> <i>(required)</i> - schema where the table you are searching lives</li>\n\n<li><b>table</b> <i>(required)</i> - table you wish to search</li>\n\n<li><b>hash_attribute</b><i> (required)</i> - hash_attribute for table you are searching. defined in add table</li>\n\n<li><b>hash_values</b><i>(required) </i>- array of hashes to retrive </li>\n\n<li><b>get_attriburtes</b><i> (required)</i> - define which attributes you want returned. <i>Use '*' to return all attributes</i>\n</ul>"
					},
					"response": [
						{
							"name": "Search By Hash",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"search_by_hash\",\n  \"schema\": \"dev\",\n  \"table\": \"dog\",\n  \"hash_values\":[1,3],\n  \"get_attributes\": [\"*\"]\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "145",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:47:21 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"91-7qgDOcZcf+jmd3/hkx3lrpmyUCA\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "CONFIRM nonSU data in Node4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Data propagated to hub2 in Node4\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.lengthOf(3);",
									"",
									"    for (const record of response) {",
									"        const attributes = Object.keys(record)",
									"        pm.expect(record.id).to.be.oneOf([17, 20, 21])",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"search_by_value\",\n\t\"schema\":\"treat_sys\",\n\t\"table\":\"hub2\",\n\t\"search_attribute\":\"id\",\n\t\"search_value\":\"*\",\n\t\"get_attributes\":[\"*\"]\n}"
						},
						"url": {
							"raw": "http://{{NODE4_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE4_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						},
						"description": "<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'search_by_hashes'</li>\n\n<li><b>schema</b> <i>(required)</i> - schema where the table you are searching lives</li>\n\n<li><b>table</b> <i>(required)</i> - table you wish to search</li>\n\n<li><b>hash_attribute</b><i> (required)</i> - hash_attribute for table you are searching. defined in add table</li>\n\n<li><b>hash_values</b><i>(required) </i>- array of hashes to retrive </li>\n\n<li><b>get_attriburtes</b><i> (required)</i> - define which attributes you want returned. <i>Use '*' to return all attributes</i>\n</ul>"
					},
					"response": [
						{
							"name": "Search By Hash",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"search_by_hash\",\n  \"schema\": \"dev\",\n  \"table\": \"dog\",\n  \"hash_values\":[1,3],\n  \"get_attributes\": [\"*\"]\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "145",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:47:21 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"91-7qgDOcZcf+jmd3/hkx3lrpmyUCA\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "CONFIRM nonSU data in Node1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Data propagated to hub2 in Node1\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.lengthOf(3);",
									"",
									"    for (const record of response) {",
									"        const attributes = Object.keys(record)",
									"        pm.expect(record.id).to.be.oneOf([17, 20, 21])",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"search_by_value\",\n\t\"schema\":\"treat_sys\",\n\t\"table\":\"hub2\",\n\t\"search_attribute\":\"id\",\n\t\"search_value\":\"*\",\n\t\"get_attributes\":[\"*\"]\n}"
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						},
						"description": "<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'search_by_hashes'</li>\n\n<li><b>schema</b> <i>(required)</i> - schema where the table you are searching lives</li>\n\n<li><b>table</b> <i>(required)</i> - table you wish to search</li>\n\n<li><b>hash_attribute</b><i> (required)</i> - hash_attribute for table you are searching. defined in add table</li>\n\n<li><b>hash_values</b><i>(required) </i>- array of hashes to retrive </li>\n\n<li><b>get_attriburtes</b><i> (required)</i> - define which attributes you want returned. <i>Use '*' to return all attributes</i>\n</ul>"
					},
					"response": [
						{
							"name": "Search By Hash",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"search_by_hash\",\n  \"schema\": \"dev\",\n  \"table\": \"dog\",\n  \"hash_values\":[1,3],\n  \"get_attributes\": [\"*\"]\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "145",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:47:21 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"91-7qgDOcZcf+jmd3/hkx3lrpmyUCA\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Try to Update with non SU on Node1 hub2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Try to update with non Su on Node1 hub2\", function () {",
									"    const response = pm.response.json()",
									"    pm.expect(response.update_hashes).to.deep.equal([17]);  ",
									"    pm.expect(response.skipped_hashes).to.deep.equal([]);  ",
									"    pm.expect(response.message).to.equal(\"updated 1 of 1 records\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test_user",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\": \"update\",\n\t\"schema\": \"treat_sys\",\n\t\"table\": \"hub2\",\n\t\"records\": [\n        {\n            \"treat\": false,\n            \"id\": 17,\n            \"more_info\": \"xyz\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						},
						"description": "Checks to confirm that a 500 status and error msg are returned when an invalid attribute name is used"
					},
					"response": []
				},
				{
					"name": "CONFIRM nonSU updates data in Node2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Non SU updated data in hub2 in Node2\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.lengthOf(3);",
									"",
									"    for (const record of response) {",
									"        const attributes = Object.keys(record)",
									"        pm.expect(record.id).to.be.oneOf([17, 20, 21])",
									"        if (record.id === 17) {",
									"            pm.expect(record.more_info).to.eql('xyz')",
									"        }",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"search_by_value\",\n\t\"schema\":\"treat_sys\",\n\t\"table\":\"hub2\",\n\t\"search_attribute\":\"id\",\n\t\"search_value\":\"*\",\n\t\"get_attributes\":[\"*\"]\n}"
						},
						"url": {
							"raw": "http://{{NODE2_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE2_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						},
						"description": "<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'search_by_hashes'</li>\n\n<li><b>schema</b> <i>(required)</i> - schema where the table you are searching lives</li>\n\n<li><b>table</b> <i>(required)</i> - table you wish to search</li>\n\n<li><b>hash_attribute</b><i> (required)</i> - hash_attribute for table you are searching. defined in add table</li>\n\n<li><b>hash_values</b><i>(required) </i>- array of hashes to retrive </li>\n\n<li><b>get_attriburtes</b><i> (required)</i> - define which attributes you want returned. <i>Use '*' to return all attributes</i>\n</ul>"
					},
					"response": [
						{
							"name": "Search By Hash",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"search_by_hash\",\n  \"schema\": \"dev\",\n  \"table\": \"dog\",\n  \"hash_values\":[1,3],\n  \"get_attributes\": [\"*\"]\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "145",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:47:21 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"91-7qgDOcZcf+jmd3/hkx3lrpmyUCA\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "CONFIRM nonSU updates data in Node4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Updated data from nonSU propagated to hub2 in Node4\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.lengthOf(3);",
									"",
									"    for (const record of response) {",
									"        const attributes = Object.keys(record)",
									"        pm.expect(record.id).to.be.oneOf([17, 20, 21])",
									"        if (record.id === 17) {",
									"            pm.expect(record.more_info).to.eql('xyz')",
									"        }",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"search_by_value\",\n\t\"schema\":\"treat_sys\",\n\t\"table\":\"hub2\",\n\t\"search_attribute\":\"id\",\n\t\"search_value\":\"*\",\n\t\"get_attributes\":[\"*\"]\n}"
						},
						"url": {
							"raw": "http://{{NODE4_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE4_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						},
						"description": "<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'search_by_hashes'</li>\n\n<li><b>schema</b> <i>(required)</i> - schema where the table you are searching lives</li>\n\n<li><b>table</b> <i>(required)</i> - table you wish to search</li>\n\n<li><b>hash_attribute</b><i> (required)</i> - hash_attribute for table you are searching. defined in add table</li>\n\n<li><b>hash_values</b><i>(required) </i>- array of hashes to retrive </li>\n\n<li><b>get_attriburtes</b><i> (required)</i> - define which attributes you want returned. <i>Use '*' to return all attributes</i>\n</ul>"
					},
					"response": [
						{
							"name": "Search By Hash",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"search_by_hash\",\n  \"schema\": \"dev\",\n  \"table\": \"dog\",\n  \"hash_values\":[1,3],\n  \"get_attributes\": [\"*\"]\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "145",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:47:21 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"91-7qgDOcZcf+jmd3/hkx3lrpmyUCA\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "CONFIRM nonSU updates data in Node1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"NonSU updated data propagated to hub2 in Node1\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.lengthOf(3);",
									"",
									"    for (const record of response) {",
									"        const attributes = Object.keys(record)",
									"        pm.expect(record.id).to.be.oneOf([17, 20, 21])",
									"        if (record.id === 17) {",
									"            pm.expect(record.more_info).to.eql('xyz')",
									"        }",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"search_by_value\",\n\t\"schema\":\"treat_sys\",\n\t\"table\":\"hub2\",\n\t\"search_attribute\":\"id\",\n\t\"search_value\":\"*\",\n\t\"get_attributes\":[\"*\"]\n}"
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						},
						"description": "<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'search_by_hashes'</li>\n\n<li><b>schema</b> <i>(required)</i> - schema where the table you are searching lives</li>\n\n<li><b>table</b> <i>(required)</i> - table you wish to search</li>\n\n<li><b>hash_attribute</b><i> (required)</i> - hash_attribute for table you are searching. defined in add table</li>\n\n<li><b>hash_values</b><i>(required) </i>- array of hashes to retrive </li>\n\n<li><b>get_attriburtes</b><i> (required)</i> - define which attributes you want returned. <i>Use '*' to return all attributes</i>\n</ul>"
					},
					"response": [
						{
							"name": "Search By Hash",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"search_by_hash\",\n  \"schema\": \"dev\",\n  \"table\": \"dog\",\n  \"hash_values\":[1,3],\n  \"get_attributes\": [\"*\"]\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "145",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:47:21 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"91-7qgDOcZcf+jmd3/hkx3lrpmyUCA\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Try to Read with non SU on Node1 hub2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test_user",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"search_by_value\",\n\t\"schema\":\"treat_sys\",\n\t\"table\":\"hub2\",\n\t\"search_attribute\":\"id\",\n\t\"search_value\":\"*\",\n\t\"get_attributes\":[\"*\"]\n}"
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						},
						"description": "Checks to confirm that a 500 status and error msg are returned when an invalid attribute name is used"
					},
					"response": []
				},
				{
					"name": "Try to Delete with non SU on Node1 hub2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Deleted hash includes correct hash, 17\", function () {",
									"    const response = pm.response.json()",
									"    pm.expect(response.message).to.equal(\"1 of 1 record successfully deleted\");",
									"    pm.expect(response.deleted_hashes.length === 1);",
									"    pm.expect(response.deleted_hashes[0] === 17);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test_user",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"delete\",\n\t\"schema\":\"treat_sys\",\n\t\"table\":\"hub2\",\n\t\"hash_values\":[17]\n}"
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						},
						"description": "Checks to confirm that a 500 status and error msg are returned when an invalid attribute name is used"
					},
					"response": []
				},
				{
					"name": "CONFIRM nonSU deletes data in Node1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"NonSU deleted data from hub2 in Node1\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.lengthOf(2);",
									"",
									"    for (const record of response) {",
									"        pm.expect(record.id).to.be.oneOf([17, 20, 21])",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"search_by_value\",\n\t\"schema\":\"treat_sys\",\n\t\"table\":\"hub2\",\n\t\"search_attribute\":\"id\",\n\t\"search_value\":\"*\",\n\t\"get_attributes\":[\"*\"]\n}"
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						},
						"description": "<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'search_by_hashes'</li>\n\n<li><b>schema</b> <i>(required)</i> - schema where the table you are searching lives</li>\n\n<li><b>table</b> <i>(required)</i> - table you wish to search</li>\n\n<li><b>hash_attribute</b><i> (required)</i> - hash_attribute for table you are searching. defined in add table</li>\n\n<li><b>hash_values</b><i>(required) </i>- array of hashes to retrive </li>\n\n<li><b>get_attriburtes</b><i> (required)</i> - define which attributes you want returned. <i>Use '*' to return all attributes</i>\n</ul>"
					},
					"response": [
						{
							"name": "Search By Hash",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"search_by_hash\",\n  \"schema\": \"dev\",\n  \"table\": \"dog\",\n  \"hash_values\":[1,3],\n  \"get_attributes\": [\"*\"]\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "145",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:47:21 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"91-7qgDOcZcf+jmd3/hkx3lrpmyUCA\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "CONFIRM nonSU deletes data in Node2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Non SU deleted data propagated in hub2 in Node2\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.lengthOf(2);",
									"",
									"    for (const record of response) {",
									"        pm.expect(record.id).to.be.oneOf([20, 21])",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"search_by_value\",\n\t\"schema\":\"treat_sys\",\n\t\"table\":\"hub2\",\n\t\"search_attribute\":\"id\",\n\t\"search_value\":\"*\",\n\t\"get_attributes\":[\"*\"]\n}"
						},
						"url": {
							"raw": "http://{{NODE2_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE2_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						},
						"description": "<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'search_by_hashes'</li>\n\n<li><b>schema</b> <i>(required)</i> - schema where the table you are searching lives</li>\n\n<li><b>table</b> <i>(required)</i> - table you wish to search</li>\n\n<li><b>hash_attribute</b><i> (required)</i> - hash_attribute for table you are searching. defined in add table</li>\n\n<li><b>hash_values</b><i>(required) </i>- array of hashes to retrive </li>\n\n<li><b>get_attriburtes</b><i> (required)</i> - define which attributes you want returned. <i>Use '*' to return all attributes</i>\n</ul>"
					},
					"response": [
						{
							"name": "Search By Hash",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"search_by_hash\",\n  \"schema\": \"dev\",\n  \"table\": \"dog\",\n  \"hash_values\":[1,3],\n  \"get_attributes\": [\"*\"]\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "145",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:47:21 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"91-7qgDOcZcf+jmd3/hkx3lrpmyUCA\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "CONFIRM nonSU deletes data in Node4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Deleted data from nonSU propagated to hub2 in Node4\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.lengthOf(2);",
									"",
									"    for (const record of response) {",
									"        pm.expect(record.id).to.be.oneOf([20, 21])",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"search_by_value\",\n\t\"schema\":\"treat_sys\",\n\t\"table\":\"hub2\",\n\t\"search_attribute\":\"id\",\n\t\"search_value\":\"*\",\n\t\"get_attributes\":[\"*\"]\n}"
						},
						"url": {
							"raw": "http://{{NODE4_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE4_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						},
						"description": "<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'search_by_hashes'</li>\n\n<li><b>schema</b> <i>(required)</i> - schema where the table you are searching lives</li>\n\n<li><b>table</b> <i>(required)</i> - table you wish to search</li>\n\n<li><b>hash_attribute</b><i> (required)</i> - hash_attribute for table you are searching. defined in add table</li>\n\n<li><b>hash_values</b><i>(required) </i>- array of hashes to retrive </li>\n\n<li><b>get_attriburtes</b><i> (required)</i> - define which attributes you want returned. <i>Use '*' to return all attributes</i>\n</ul>"
					},
					"response": [
						{
							"name": "Search By Hash",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"search_by_hash\",\n  \"schema\": \"dev\",\n  \"table\": \"dog\",\n  \"hash_values\":[1,3],\n  \"get_attributes\": [\"*\"]\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "145",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:47:21 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"91-7qgDOcZcf+jmd3/hkx3lrpmyUCA\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Drop test_user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Receive correct message for drop_user\", function () {",
									"    const respMsg = pm.response.json().message;",
									"    pm.expect(respMsg).to.equal(",
									"        \"test_user successfully deleted\"",
									"    );",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46cGFzc3dvcmQ="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"operation\":\"drop_user\",\n  \"username\":\"test_user\"\n}"
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "Drop_role - non-SU role",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Receive correct message for drop_role\", function () {",
									"    const respMsg = pm.response.json().message;",
									"    pm.expect(respMsg).to.equal(",
									"        \"test_dev_role_1 successfully deleted\"",
									"    );",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46cGFzc3dvcmQ="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"operation\":\"drop_role\",\n    \"id\":\"{{role_id}}\"\n}"
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"setTimeout(() => {}, 10)"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Bulk Add Records",
			"item": [
				{
					"name": "csv_data_load Node1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Test csv_data_load to Node1\", function () {",
									"    const response = pm.response.json();",
									"    let id_index = response.message.indexOf('id ');",
									"    let parsedId = response.message.substr(id_index + 3, response.message.length);",
									"    pm.environment.set('job_id', parsedId)",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\": \"csv_data_load\",\n\t\"action\": \"insert\",\n\t\"schema\": \"treat_sys\",\n\t\"table\": \"dispenser\",\n    \"transact_to_cluster\":true,\n\t\"data\": \"id,name,section,country,image\\n1,ENGLISH POINTER,British and Irish Pointers and Setters,GREAT BRITAIN,http://www.fci.be/Nomenclature/Illustrations/001g07.jpg\\n2,ENGLISH SETTER,British and Irish Pointers and Setters,GREAT BRITAIN,http://www.fci.be/Nomenclature/Illustrations/002g07.jpg\\n3,KERRY BLUE TERRIER,Large and medium sized Terriers,IRELAND,\\n\"\n}"
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						},
						"description": "Checks to confirm that a 500 status and error msg are returned when an invalid attribute name is used"
					},
					"response": []
				},
				{
					"name": "Wait for CSV data load Node1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"const job_id = pm.environment.get('job_id')",
									"if (response.length === 0) {",
									"    pm.expect.fail(`\"csv_data_load to Node1\" was unable to find a job with id: ${job_id}`)",
									"}",
									"",
									"const status = response[0].status;",
									"switch(status){",
									"    case 'IN_PROGRESS':",
									"        console.log('Waiting for \"csv_data_load to Node1\" to complete');",
									"        setTimeout(() => {}, 2000);",
									"        postman.setNextRequest(pm.info.requestId);",
									"        break;",
									"",
									"    case 'COMPLETE':",
									"        pm.test('\"csv_data_load to Node1\" has completed', () => {",
									"            pm.expect(status).to.equal('COMPLETE');",
									"        });",
									"        break;",
									"",
									"    case 'ERROR':",
									"        console.error(`\"csv_data_load to Node1\" response: ${JSON.stringify(response)}`)",
									"        pm.expect.fail(`\"csv_data_load to Node1\" received ERROR status`);",
									"        break;",
									"        ",
									"    default:",
									"        console.error(`\"csv_data_load to Node1\" response: ${JSON.stringify(response)}`)",
									"        pm.expect.fail(`\"csv_data_load to Node1\" received unknown status`);",
									"        break;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"operation\": \"get_job\",\n    \"id\": \"{{job_id}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "Confirm data in Node1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"CSV data loaded to Node1\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.lengthOf(3);",
									"",
									"    for (const record of response) {",
									"        pm.expect(record.id).to.be.oneOf([1, 2, 3])",
									"        pm.expect(record.country).to.be.oneOf([\"GREAT BRITAIN\", \"IRELAND\"])",
									"        pm.expect(record.name).to.be.oneOf([\"ENGLISH POINTER\", \"ENGLISH SETTER\", \"KERRY BLUE TERRIER\"])",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"search_by_value\",\n\t\"schema\":\"treat_sys\",\n\t\"table\":\"dispenser\",\n\t\"search_attribute\":\"id\",\n\t\"search_value\":\"*\",\n\t\"get_attributes\":[\"*\"]\n}"
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						},
						"description": "<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'search_by_hashes'</li>\n\n<li><b>schema</b> <i>(required)</i> - schema where the table you are searching lives</li>\n\n<li><b>table</b> <i>(required)</i> - table you wish to search</li>\n\n<li><b>hash_attribute</b><i> (required)</i> - hash_attribute for table you are searching. defined in add table</li>\n\n<li><b>hash_values</b><i>(required) </i>- array of hashes to retrive </li>\n\n<li><b>get_attriburtes</b><i> (required)</i> - define which attributes you want returned. <i>Use '*' to return all attributes</i>\n</ul>"
					},
					"response": [
						{
							"name": "Search By Hash",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"search_by_hash\",\n  \"schema\": \"dev\",\n  \"table\": \"dog\",\n  \"hash_values\":[1,3],\n  \"get_attributes\": [\"*\"]\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "145",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:47:21 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"91-7qgDOcZcf+jmd3/hkx3lrpmyUCA\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Confirm data not in Node5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Data not propagated into Node5 from csv_data_load\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.lengthOf(0);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"search_by_value\",\n\t\"schema\":\"treat_sys\",\n\t\"table\":\"dispenser\",\n\t\"search_attribute\":\"id\",\n\t\"search_value\":\"*\",\n\t\"get_attributes\":[\"*\"]\n}"
						},
						"url": {
							"raw": "http://{{NODE5_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE5_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Search By Hash",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"search_by_hash\",\n  \"schema\": \"dev\",\n  \"table\": \"dog\",\n  \"hash_values\":[1,3],\n  \"get_attributes\": [\"*\"]\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "145",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:47:21 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"91-7qgDOcZcf+jmd3/hkx3lrpmyUCA\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "csv_file_load Node3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Test csv_file_load to Node3\", function () {",
									"    const response = pm.response.json();",
									"    let id_index = response.message.indexOf('id ');",
									"    let parsedId = response.message.substr(id_index + 3, response.message.length);",
									"    pm.environment.set('job_id', parsedId)",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\": \"csv_file_load\",\n\t\"action\": \"insert\",\n\t\"schema\": \"treat_sys\",\n\t\"table\": \"collar\",\n    \"transact_to_cluster\":true,\n\t\"file_path\": \"{{CSV_BASE_PATH}}/clusteringCsvs/dog_data.csv\"\n}"
						},
						"url": {
							"raw": "http://{{NODE3_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE3_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						},
						"description": "Checks to confirm that a 500 status and error msg are returned when an invalid attribute name is used"
					},
					"response": []
				},
				{
					"name": "Wait for CSV file load Node3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"const job_id = pm.environment.get('job_id')",
									"if (response.length === 0) {",
									"    pm.expect.fail(`\"csv_file_load to Node3\" was unable to find a job with id: ${job_id}`)",
									"}",
									"",
									"const status = response[0].status;",
									"switch(status){",
									"    case 'IN_PROGRESS':",
									"        console.log('Waiting for \"csv_file_load to Node3\" to complete');",
									"        setTimeout(() => {}, 2000);",
									"        postman.setNextRequest(pm.info.requestId);",
									"        break;",
									"",
									"    case 'COMPLETE':",
									"        pm.test('\"csv_file_load to Node3\" has completed', () => {",
									"            pm.expect(status).to.equal('COMPLETE');",
									"            console.log(response);",
									"        });",
									"        break;",
									"",
									"    case 'ERROR':",
									"        console.error(`\"csv_file_load to Node3\" response: ${JSON.stringify(response)}`)",
									"        pm.expect.fail(`\"csv_file_load to Node3\" received ERROR status`);",
									"        break;",
									"        ",
									"    default:",
									"        console.error(`\"csv_file_load to Node3\" response: ${JSON.stringify(response)}`)",
									"        pm.expect.fail(`\"csv_file_load to Node3\" received unknown status`);",
									"        break;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"operation\": \"get_job\",\n    \"id\": \"{{job_id}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{NODE3_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE3_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "Confirm data in Node3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"CSV file loaded to Node3\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.lengthOf(1200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"search_by_value\",\n\t\"schema\":\"treat_sys\",\n\t\"table\":\"collar\",\n\t\"search_attribute\":\"id\",\n\t\"search_value\":\"*\",\n\t\"get_attributes\":[\"*\"]\n}"
						},
						"url": {
							"raw": "http://{{NODE3_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE3_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						},
						"description": "<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'search_by_hashes'</li>\n\n<li><b>schema</b> <i>(required)</i> - schema where the table you are searching lives</li>\n\n<li><b>table</b> <i>(required)</i> - table you wish to search</li>\n\n<li><b>hash_attribute</b><i> (required)</i> - hash_attribute for table you are searching. defined in add table</li>\n\n<li><b>hash_values</b><i>(required) </i>- array of hashes to retrive </li>\n\n<li><b>get_attriburtes</b><i> (required)</i> - define which attributes you want returned. <i>Use '*' to return all attributes</i>\n</ul>"
					},
					"response": [
						{
							"name": "Search By Hash",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"search_by_hash\",\n  \"schema\": \"dev\",\n  \"table\": \"dog\",\n  \"hash_values\":[1,3],\n  \"get_attributes\": [\"*\"]\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "145",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:47:21 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"91-7qgDOcZcf+jmd3/hkx3lrpmyUCA\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Confirm data in Node1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Data propagated into Node1 from csv_file_load\", function () {",
									"    const response = pm.response.json();    ",
									"    pm.expect(response).to.have.lengthOf(1200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"search_by_value\",\n\t\"schema\":\"treat_sys\",\n\t\"table\":\"collar\",\n\t\"search_attribute\":\"id\",\n\t\"search_value\":\"*\",\n\t\"get_attributes\":[\"*\"]\n}"
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						},
						"description": "<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'search_by_hashes'</li>\n\n<li><b>schema</b> <i>(required)</i> - schema where the table you are searching lives</li>\n\n<li><b>table</b> <i>(required)</i> - table you wish to search</li>\n\n<li><b>hash_attribute</b><i> (required)</i> - hash_attribute for table you are searching. defined in add table</li>\n\n<li><b>hash_values</b><i>(required) </i>- array of hashes to retrive </li>\n\n<li><b>get_attriburtes</b><i> (required)</i> - define which attributes you want returned. <i>Use '*' to return all attributes</i>\n</ul>"
					},
					"response": [
						{
							"name": "Search By Hash",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"search_by_hash\",\n  \"schema\": \"dev\",\n  \"table\": \"dog\",\n  \"hash_values\":[1,3],\n  \"get_attributes\": [\"*\"]\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "145",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:47:21 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"91-7qgDOcZcf+jmd3/hkx3lrpmyUCA\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "csv_url_load Node2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Test csv_url_load to Node2\", function () {",
									"    const response = pm.response.json();",
									"    let id_index = response.message.indexOf('id ');",
									"    let parsedId = response.message.substr(id_index + 3, response.message.length);",
									"    pm.environment.set('job_id', parsedId)",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\": \"csv_url_load\",\n\t\"action\": \"insert\",\n\t\"schema\": \"treat_sys\",\n\t\"table\": \"collar2\",\n    \"transact_to_cluster\":true,\n\t\"csv_url\": \"https://harperdb-integration-test-data.s3.us-east-2.amazonaws.com/breeds.csv\"\n}"
						},
						"url": {
							"raw": "http://{{NODE2_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE2_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						},
						"description": "Checks to confirm that a 500 status and error msg are returned when an invalid attribute name is used"
					},
					"response": []
				},
				{
					"name": "Wait for CSV url load Node2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"const job_id = pm.environment.get('job_id')",
									"if (response.length === 0) {",
									"    pm.expect.fail(`\"csv_url_load to Node2\" was unable to find a job with id: ${job_id}`)",
									"}",
									"",
									"const status = response[0].status;",
									"switch(status){",
									"    case 'IN_PROGRESS':",
									"        console.log('Waiting for \"csv_url_load to Node2\" to complete');",
									"        setTimeout(() => {}, 2000);",
									"        postman.setNextRequest(pm.info.requestId);",
									"        break;",
									"",
									"    case 'COMPLETE':",
									"        pm.test('\"csv_url_load to Node2\" has completed', () => {",
									"            pm.expect(status).to.equal('COMPLETE');",
									"        });",
									"        break;",
									"",
									"    case 'ERROR':",
									"        console.error(`\"csv_url_load to Node2\" response: ${JSON.stringify(response)}`)",
									"        pm.expect.fail(`\"csv_url_load to Node2\" received ERROR status`);",
									"        break;",
									"        ",
									"    default:",
									"        console.error(`\"csv_url_load to Node2\" response: ${JSON.stringify(response)}`)",
									"        pm.expect.fail(`\"csv_url_load to Node2\" received unknown status`);",
									"        break;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"operation\": \"get_job\",\n    \"id\": \"{{job_id}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{NODE2_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE2_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "Confirm data in Node2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"CSV url loaded to Node2\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.lengthOf(350);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"setTimeout(()=>{}, 100);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"search_by_value\",\n\t\"schema\":\"treat_sys\",\n\t\"table\":\"collar2\",\n\t\"search_attribute\":\"id\",\n\t\"search_value\":\"*\",\n\t\"get_attributes\":[\"*\"]\n}"
						},
						"url": {
							"raw": "http://{{NODE2_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE2_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						},
						"description": "<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'search_by_hashes'</li>\n\n<li><b>schema</b> <i>(required)</i> - schema where the table you are searching lives</li>\n\n<li><b>table</b> <i>(required)</i> - table you wish to search</li>\n\n<li><b>hash_attribute</b><i> (required)</i> - hash_attribute for table you are searching. defined in add table</li>\n\n<li><b>hash_values</b><i>(required) </i>- array of hashes to retrive </li>\n\n<li><b>get_attriburtes</b><i> (required)</i> - define which attributes you want returned. <i>Use '*' to return all attributes</i>\n</ul>"
					},
					"response": [
						{
							"name": "Search By Hash",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"search_by_hash\",\n  \"schema\": \"dev\",\n  \"table\": \"dog\",\n  \"hash_values\":[1,3],\n  \"get_attributes\": [\"*\"]\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "145",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:47:21 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"91-7qgDOcZcf+jmd3/hkx3lrpmyUCA\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Confirm data in Node4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Data propagated into Node4 from csv_url_load\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.lengthOf(350);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"search_by_value\",\n\t\"schema\":\"treat_sys\",\n\t\"table\":\"collar2\",\n\t\"search_attribute\":\"id\",\n\t\"search_value\":\"*\",\n\t\"get_attributes\":[\"*\"]\n}"
						},
						"url": {
							"raw": "http://{{NODE4_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE4_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						},
						"description": "<ul>\n<li><b>operation</b><i> (required)</i> - must always be 'search_by_hashes'</li>\n\n<li><b>schema</b> <i>(required)</i> - schema where the table you are searching lives</li>\n\n<li><b>table</b> <i>(required)</i> - table you wish to search</li>\n\n<li><b>hash_attribute</b><i> (required)</i> - hash_attribute for table you are searching. defined in add table</li>\n\n<li><b>hash_values</b><i>(required) </i>- array of hashes to retrive </li>\n\n<li><b>get_attriburtes</b><i> (required)</i> - define which attributes you want returned. <i>Use '*' to return all attributes</i>\n</ul>"
					},
					"response": [
						{
							"name": "Search By Hash",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operation\":\"search_by_hash\",\n  \"schema\": \"dev\",\n  \"table\": \"dog\",\n  \"hash_values\":[1,3],\n  \"get_attributes\": [\"*\"]\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "145",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:47:21 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"91-7qgDOcZcf+jmd3/hkx3lrpmyUCA\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"setTimeout(() => {}, 100)"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Delete Records",
			"item": [
				{
					"name": "NoSQL Delete records on Node1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Deleted hash includes correct hash, 20\", function () {",
									"    const response = pm.response.json()",
									"    pm.expect(response.message).to.equal(\"1 of 1 record successfully deleted\");",
									"    pm.expect(response.deleted_hashes.length === 1);",
									"    pm.expect(response.deleted_hashes[0] === 20);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"delete\",\n\t\"schema\":\"treat_sys\",\n\t\"table\":\"hub2\",\n\t\"hash_values\":[20]\n}"
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Delete",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"delete\",\n\"table\":\"dog\",\n\"schema\":\"dev\",\n\"hash_values\":[\"1\",\"3\"]\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "42",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:45:32 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"2a-Y+b8ancCZDlk5zkmlNYgvGhMwCE\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Confirm delete record on Node1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Test data deleted on Node1\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.lengthOf(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"search_by_hash\",\n\t\"schema\":\"treat_sys\",\n\t\"table\":\"hub2\",\n\t\"hash_values\":[20],\n\t\"get_attributes\":[\"*\"]\n}"
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Delete",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"delete\",\n\"table\":\"dog\",\n\"schema\":\"dev\",\n\"hash_values\":[\"1\",\"3\"]\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "42",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:45:32 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"2a-Y+b8ancCZDlk5zkmlNYgvGhMwCE\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Confirm delete record on Node2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Test data deleted on Node2\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.lengthOf(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"search_by_hash\",\n\t\"schema\":\"treat_sys\",\n\t\"table\":\"hub2\",\n\t\"hash_values\":[20],\n\t\"get_attributes\":[\"*\"]\n}"
						},
						"url": {
							"raw": "http://{{NODE2_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE2_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Delete",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"delete\",\n\"table\":\"dog\",\n\"schema\":\"dev\",\n\"hash_values\":[\"1\",\"3\"]\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "42",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:45:32 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"2a-Y+b8ancCZDlk5zkmlNYgvGhMwCE\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Confirm delete record on Node4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Test data deleted on Node4\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.lengthOf(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"search_by_hash\",\n\t\"schema\":\"treat_sys\",\n\t\"table\":\"hub2\",\n\t\"hash_values\":[20],\n\t\"get_attributes\":[\"*\"]\n}"
						},
						"url": {
							"raw": "http://{{NODE4_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE4_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Delete",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"delete\",\n\"table\":\"dog\",\n\"schema\":\"dev\",\n\"hash_values\":[\"1\",\"3\"]\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "42",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:45:32 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"2a-Y+b8ancCZDlk5zkmlNYgvGhMwCE\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "SQL Delete records on Node2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Deleted hash includes correct hashes, 8\", function () {",
									"    const response = pm.response.json()",
									"    pm.expect(response.message).to.equal(\"1 of 1 record successfully deleted\");",
									"    pm.expect(response.deleted_hashes.length === 1);",
									"    pm.expect(response.deleted_hashes[0] === 8);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"sql\",\n\t\"sql\":\"DELETE FROM treat_sys.hub1 WHERE id = 8\"\n}"
						},
						"url": {
							"raw": "http://{{NODE2_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE2_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Delete",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"delete\",\n\"table\":\"dog\",\n\"schema\":\"dev\",\n\"hash_values\":[\"1\",\"3\"]\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "42",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:45:32 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"2a-Y+b8ancCZDlk5zkmlNYgvGhMwCE\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Confirm delete record on Node2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Test data deleted on Node2\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.lengthOf(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"search_by_hash\",\n\t\"schema\":\"treat_sys\",\n\t\"table\":\"hub1\",\n\t\"hash_values\":[8],\n\t\"get_attributes\":[\"*\"]\n}"
						},
						"url": {
							"raw": "http://{{NODE2_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE2_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Delete",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"delete\",\n\"table\":\"dog\",\n\"schema\":\"dev\",\n\"hash_values\":[\"1\",\"3\"]\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "42",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:45:32 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"2a-Y+b8ancCZDlk5zkmlNYgvGhMwCE\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Confirm delete record on Node1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Test data deleted on Node1\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.lengthOf(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"search_by_hash\",\n\t\"schema\":\"treat_sys\",\n\t\"table\":\"hub1\",\n\t\"hash_values\":[8],\n\t\"get_attributes\":[\"*\"]\n}"
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Delete",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"delete\",\n\"table\":\"dog\",\n\"schema\":\"dev\",\n\"hash_values\":[\"1\",\"3\"]\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "42",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:45:32 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"2a-Y+b8ancCZDlk5zkmlNYgvGhMwCE\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Confirm delete record on Node5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Test data deleted on Node5\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.lengthOf(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"search_by_hash\",\n\t\"schema\":\"treat_sys\",\n\t\"table\":\"hub1\",\n\t\"hash_values\":[8],\n\t\"get_attributes\":[\"*\"]\n}"
						},
						"url": {
							"raw": "http://{{NODE5_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE5_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Delete",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"delete\",\n\"table\":\"dog\",\n\"schema\":\"dev\",\n\"hash_values\":[\"1\",\"3\"]\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "42",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:45:32 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"2a-Y+b8ancCZDlk5zkmlNYgvGhMwCE\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Confirm Not delete on Node3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Test data not deleted on Node3\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.lengthOf(1);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"search_by_hash\",\n\t\"schema\":\"treat_sys\",\n\t\"table\":\"hub1\",\n\t\"hash_values\":[8],\n\t\"get_attributes\":[\"*\"]\n}"
						},
						"url": {
							"raw": "http://{{NODE3_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE3_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Delete",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"delete\",\n\"table\":\"dog\",\n\"schema\":\"dev\",\n\"hash_values\":[\"1\",\"3\"]\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "42",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 17:45:32 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"2a-Y+b8ancCZDlk5zkmlNYgvGhMwCE\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"setTimeout(() => {}, 10)"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Cleanup",
			"item": [
				{
					"name": "REMOVE Node2 from Node1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Node2 removed\", function () {",
									"    const jsonData = pm.response.json();",
									"    const node_name = pm.environment.get(\"NODE2_NAME\");",
									"    pm.expect(jsonData.message).to.eql(`Successfully removed '${node_name}' from manifest`);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"remove_node\",\n\t\"node_name\":\"{{NODE2_NAME}}\"\n}"
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Remove Node",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"operation\":\"remove_node\",\n\t\"name\":\"node2\"\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "54"
								},
								{
									"key": "ETag",
									"value": "W/\"36-5DOQiUhBa8vd+mg6BRSMMJSnkwk\""
								},
								{
									"key": "Date",
									"value": "Fri, 18 Oct 2019 18:20:59 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "REMOVE Node3 from Node1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Node3 removed\", function () {",
									"    const jsonData = pm.response.json();",
									"    const node_name = pm.environment.get(\"NODE3_NAME\");",
									"    pm.expect(jsonData.message).to.eql(`Successfully removed '${node_name}' from manifest`);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"remove_node\",\n\t\"node_name\":\"{{NODE3_NAME}}\"\n}"
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Remove Node",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"operation\":\"remove_node\",\n\t\"name\":\"node2\"\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "54"
								},
								{
									"key": "ETag",
									"value": "W/\"36-5DOQiUhBa8vd+mg6BRSMMJSnkwk\""
								},
								{
									"key": "Date",
									"value": "Fri, 18 Oct 2019 18:20:59 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "REMOVE Node4 from Node2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Node4 removed from Node2\", function () {",
									"    const jsonData = pm.response.json();",
									"    const node_name = pm.environment.get(\"NODE4_NAME\");",
									"    pm.expect(jsonData.message).to.eql(`Successfully removed '${node_name}' from manifest`);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"remove_node\",\n\t\"node_name\":\"{{NODE4_NAME}}\"\n}"
						},
						"url": {
							"raw": "http://{{NODE2_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE2_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Remove Node",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"operation\":\"remove_node\",\n\t\"name\":\"node2\"\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "54"
								},
								{
									"key": "ETag",
									"value": "W/\"36-5DOQiUhBa8vd+mg6BRSMMJSnkwk\""
								},
								{
									"key": "Date",
									"value": "Fri, 18 Oct 2019 18:20:59 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "REMOVE Node5 from Node1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Node5 removed\", function () {",
									"    const jsonData = pm.response.json();",
									"    const node_name = pm.environment.get(\"NODE5_NAME\");",
									"    pm.expect(jsonData.message).to.eql(`Successfully removed '${node_name}' from manifest`);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"remove_node\",\n\t\"node_name\":\"{{NODE5_NAME}}\"\n}"
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Remove Node",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"operation\":\"remove_node\",\n\t\"name\":\"node2\"\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "54"
								},
								{
									"key": "ETag",
									"value": "W/\"36-5DOQiUhBa8vd+mg6BRSMMJSnkwk\""
								},
								{
									"key": "Date",
									"value": "Fri, 18 Oct 2019 18:20:59 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "DROP SCHEMA on Node1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Schema successfully dropped from Node1\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.be.eql(\"successfully deleted 'treat_sys'\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"drop_schema\",\n\t\"schema\":\"treat_sys\"\n}"
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Drop Schema",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"drop_schema\",\n\"schema\":\"dev\"\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "37",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 16:54:29 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"25-PimhvvsUauiRfSAGNB/OXJVFwsY\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "DROP SCHEMA on Node2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Schema successfully dropped from Node2\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.be.eql(\"successfully deleted 'treat_sys'\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"drop_schema\",\n\t\"schema\":\"treat_sys\"\n}"
						},
						"url": {
							"raw": "http://{{NODE2_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE2_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Drop Schema",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"drop_schema\",\n\"schema\":\"dev\"\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "37",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 16:54:29 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"25-PimhvvsUauiRfSAGNB/OXJVFwsY\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "DROP SCHEMA on Node3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Schema successfully dropped from Node3\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.be.eql(\"successfully deleted 'treat_sys'\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"drop_schema\",\n\t\"schema\":\"treat_sys\"\n}"
						},
						"url": {
							"raw": "http://{{NODE3_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE3_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Drop Schema",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"drop_schema\",\n\"schema\":\"dev\"\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "37",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 16:54:29 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"25-PimhvvsUauiRfSAGNB/OXJVFwsY\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "DROP SCHEMA on Node4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Schema successfully dropped from Node4\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.be.eql(\"successfully deleted 'treat_sys'\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"drop_schema\",\n\t\"schema\":\"treat_sys\"\n}"
						},
						"url": {
							"raw": "http://{{NODE4_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE4_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Drop Schema",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"drop_schema\",\n\"schema\":\"dev\"\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "37",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 16:54:29 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"25-PimhvvsUauiRfSAGNB/OXJVFwsY\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "DROP SCHEMA on Node5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Schema successfully dropped from Node5\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.be.eql(\"successfully deleted 'treat_sys'\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"drop_schema\",\n\t\"schema\":\"treat_sys\"\n}"
						},
						"url": {
							"raw": "http://{{NODE5_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE5_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Drop Schema",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"name": "Authorization",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"operation\":\"drop_schema\",\n\"schema\":\"dev\"\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "37",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Fri, 01 Sep 2017 16:54:29 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "etag",
									"value": "W/\"25-PimhvvsUauiRfSAGNB/OXJVFwsY\"",
									"name": "etag",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "HarperDB",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Confirm dropped schema Node1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Schema has been dropped from Node1\", function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.hasOwnProperty(\"treat_sys\")).to.be.eql(false);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"describe_all\"\n}"
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "Confirm dropped schema Node2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Schema has been dropped from Node2\", function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.hasOwnProperty(\"treat_sys\")).to.be.eql(false);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"describe_all\"\n}"
						},
						"url": {
							"raw": "http://{{NODE2_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE2_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "Confirm dropped schema Node3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Schema has been dropped from Node3\", function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.hasOwnProperty(\"treat_sys\")).to.be.eql(false);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"describe_all\"\n}"
						},
						"url": {
							"raw": "http://{{NODE3_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE3_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "Confirm dropped schema Node4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Schema has been dropped from Node4\", function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.hasOwnProperty(\"treat_sys\")).to.be.eql(false);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"describe_all\"\n}"
						},
						"url": {
							"raw": "http://{{NODE4_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE4_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "Confirm dropped schema Node5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Schema has been dropped from Node5\", function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.hasOwnProperty(\"treat_sys\")).to.be.eql(false);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"describe_all\"\n}"
						},
						"url": {
							"raw": "http://{{NODE5_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE5_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "DELETE routes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"const node2_host = pm.environment.get('NODE2_HOST');",
									"const node3_host = pm.environment.get('NODE3_HOST');",
									"const node4_host = pm.environment.get('NODE4_HOST');",
									"const node5_host = pm.environment.get('NODE5_HOST');",
									"const clustering_port = pm.environment.get('CLUSTERING_PORT');",
									"",
									"pm.test(\"Node 1 cluster routes deleted\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql(\"cluster routes successfully deleted\");",
									"",
									"    for (const route of jsonData.deleted) {",
									"        pm.expect(route.host).to.be.oneOf([node2_host, node3_host, node4_host, node5_host])",
									"        pm.expect(route.port).to.equal(+clustering_port);",
									"    }",
									"    pm.expect(jsonData.skipped).to.eql([]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"operation\":\"cluster_delete_routes\",\n\t\"routes\": [\n                {\"host\": \"{{NODE2_HOST}}\", \"port\": {{CLUSTERING_PORT}}}, \n                {\"host\": \"{{NODE3_HOST}}\", \"port\": {{CLUSTERING_PORT}}}, \n                {\"host\": \"{{NODE4_HOST}}\", \"port\": {{CLUSTERING_PORT}}},\n                {\"host\": \"{{NODE5_HOST}}\", \"port\": {{CLUSTERING_PORT}}}\n\t\t\t]\n}"
						},
						"url": {
							"raw": "http://{{NODE1_HOST}}:{{SERVER_HDB_PORT}}",
							"protocol": "http",
							"host": [
								"{{NODE1_HOST}}"
							],
							"port": "{{SERVER_HDB_PORT}}"
						}
					},
					"response": [
						{
							"name": "Remove Node",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic SERCX0FETUlOOnBhc3N3b3Jk",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"operation\":\"remove_node\",\n\t\"name\":\"node2\"\n}"
								},
								"url": {
									"raw": "{{HDB_ENDPOINT}}",
									"host": [
										"{{HDB_ENDPOINT}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "54"
								},
								{
									"key": "ETag",
									"value": "W/\"36-5DOQiUhBa8vd+mg6BRSMMJSnkwk\""
								},
								{
									"key": "Date",
									"value": "Fri, 18 Oct 2019 18:20:59 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"setTimeout(() => {}, 10)"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"setTimeout(function() {}, 10)"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}
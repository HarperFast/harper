{
	"info": {
		"_postman_id": "f5b5eb47-b522-4fe5-8865-4e81ed153575",
		"name": "Local sharding",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38120670",
		"_collection_link": "https://harperdbio.postman.co/workspace/Engineering~6bba0aa1-cefc-4c15-b990-1833f7309538/collection/38120670-f5b5eb47-b522-4fe5-8865-4e81ed153575?action=share&source=collection_link&creator=38120670"
	},
	"item": [
		{
			"name": "Create table 'fish' node1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test('Check response message', () => {",
							"    const response = pm.response.json();",
							"    pm.expect(response.message).to.contain(`table 'data.fish' successfully created`);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{PASSWORD}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{USERNAME}}",
							"type": "string"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"operation\": \"create_table\",\n    \"table\": \"fish\",\n    \"primary_key\": \"id\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{NODE1_HOST}}:{{NODE1_PORT}}",
					"protocol": "https",
					"host": [
						"{{NODE1_HOST}}"
					],
					"port": "{{NODE1_PORT}}"
				}
			},
			"response": []
		},
		{
			"name": "Create table 'fish' node2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test('Check response message', () => {",
							"    const response = pm.response.json();",
							"    pm.expect(response.message).to.contain(`table 'data.fish' successfully created`);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{PASSWORD}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{USERNAME}}",
							"type": "string"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"operation\": \"create_table\",\n    \"table\": \"fish\",\n    \"primary_key\": \"id\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{NODE2_HOST}}:{{NODE2_PORT}}",
					"protocol": "https",
					"host": [
						"{{NODE2_HOST}}"
					],
					"port": "{{NODE2_PORT}}"
				}
			},
			"response": []
		},
		{
			"name": "Insert node1 'fish' replicate node2 headers",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test('Check response message', () => {",
							"    const response = pm.response.json();",
							"    pm.expect(response.message).to.contain('inserted 1 of 1 records');",
							"    pm.expect(response.inserted_hashes[0]).to.eql(1);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{PASSWORD}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{USERNAME}}",
							"type": "string"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "X-Replicate-To",
						"value": "{{NODE2_NAME}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"operation\": \"insert\",\n    \"table\": \"fish\",\n    \"records\": [\n        {\n            \"id\": 1,\n            \"name\": \"Mullet\",\n            \"type\": [1, 2, 3]\n        }\n    ]\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{NODE1_HOST}}:{{NODE1_PORT}}",
					"protocol": "https",
					"host": [
						"{{NODE1_HOST}}"
					],
					"port": "{{NODE1_PORT}}"
				}
			},
			"response": []
		},
		{
			"name": "Select * 'fish' node2 - duplicate this after each request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const lodash = require('lodash');",
							"",
							"pm.test('Status code is 200', () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test('Check response message', () => {",
							"    const response = pm.response.json();",
							"",
							"    pm.expect(lodash.size(response)).to.equal(4);",
							"    const expected = [1,2,3,4];",
							"    let actual = [];",
							"    lodash.each(response, (item) => {",
							"        actual.push(item.id);",
							"    })",
							"    pm.expect(actual).to.eql(expected);",
							"",
							"    // pm.expect(response.find(el => el.id === 1)).to.exist;",
							"    // pm.expect(response.find(el => el.id === 2)).to.exist;",
							"    // pm.expect(response.find(el => el.id === 3)).to.exist;",
							"    // pm.expect(response.find(el => el.id === 4)).to.exist;",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{PASSWORD}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{USERNAME}}",
							"type": "string"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"operation\": \"sql\",\n    \"sql\": \"select * from data.fish\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{NODE2_HOST}}:{{NODE2_PORT}}",
					"protocol": "https",
					"host": [
						"{{NODE2_HOST}}"
					],
					"port": "{{NODE2_PORT}}"
				}
			},
			"response": []
		},
		{
			"name": "Insert node1 'fish' replicate node2 headers confirm",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test('Check response message', () => {",
							"    const response = pm.response.json();",
							"    pm.expect(response.message).to.contain('inserted 1 of 1 records');",
							"    pm.expect(response.inserted_hashes[0]).to.eql(2);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{PASSWORD}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{USERNAME}}",
							"type": "string"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "X-Replicate-To",
						"value": "{{NODE2_NAME}}",
						"type": "text"
					},
					{
						"key": "confirm",
						"value": "1",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"operation\": \"insert\",\n    \"table\": \"fish\",\n    \"records\": [\n        {\n            \"id\": 2,\n            \"name\": \"Trout\"\n        }\n    ]\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{NODE1_HOST}}:{{NODE1_PORT}}",
					"protocol": "https",
					"host": [
						"{{NODE1_HOST}}"
					],
					"port": "{{NODE1_PORT}}"
				}
			},
			"response": []
		},
		{
			"name": "Insert node1 'fish' replicate node2 body",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test('Check response message', () => {",
							"    const response = pm.response.json();",
							"    pm.expect(response.message).to.contain('inserted 1 of 1 records');",
							"    pm.expect(response.inserted_hashes[0]).to.eql(3);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{PASSWORD}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{USERNAME}}",
							"type": "string"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"operation\": \"insert\",\n    \"table\": \"fish\",\n    \"records\": [\n        {\n            \"id\": 3,\n            \"name\": \"Grouper\"\n        }\n    ],\n    \"replicateTo\": [\"{{NODE2_NAME}}\"]\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{NODE1_HOST}}:{{NODE1_PORT}}",
					"protocol": "https",
					"host": [
						"{{NODE1_HOST}}"
					],
					"port": "{{NODE1_PORT}}"
				}
			},
			"response": []
		},
		{
			"name": "Insert node1 'fish' replicate node2 body confirm",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test('Check response message', () => {",
							"    const response = pm.response.json();",
							"    pm.expect(response.message).to.contain('inserted 1 of 1 records');",
							"    pm.expect(response.inserted_hashes[0]).to.eql(4);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{PASSWORD}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{USERNAME}}",
							"type": "string"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"operation\": \"insert\",\n    \"table\": \"fish\",\n    \"records\": [\n        {\n            \"id\": 4,\n            \"name\": \"Mackerel\"\n        }\n    ],\n    \"replicateTo\": [\"{{NODE2_NAME}}\"],\n    \"replicatedConfirmation\": 1\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{NODE1_HOST}}:{{NODE1_PORT}}",
					"protocol": "https",
					"host": [
						"{{NODE1_HOST}}"
					],
					"port": "{{NODE1_PORT}}"
				}
			},
			"response": []
		},
		{
			"name": "Insert node1 'fish' replicate node2 body confirm only",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test('Check response message', () => {",
							"    const response = pm.response.json();",
							"    pm.expect(response.message).to.contain('inserted 1 of 1 records');",
							"    pm.expect(response.inserted_hashes[0]).to.eql(4);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{PASSWORD}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{USERNAME}}",
							"type": "string"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"operation\": \"insert\",\n    \"table\": \"fish\",\n    \"records\": [\n        {\n            \"id\": 4,\n            \"name\": \"Mackerel\"\n        }\n    ],\n    \"replicatedConfirmation\": 1\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{NODE1_HOST}}:{{NODE1_PORT}}",
					"protocol": "https",
					"host": [
						"{{NODE1_HOST}}"
					],
					"port": "{{NODE1_PORT}}"
				}
			},
			"response": []
		},
		{
			"name": "Select * 'fish' node1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const lodash = require('lodash');",
							"",
							"pm.test('Status code is 200', () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test('Check response message', () => {",
							"    const response = pm.response.json();",
							"",
							"    pm.expect(lodash.size(response)).to.equal(4);",
							"    const expected = [1,2,3,4];",
							"    let actual = [];",
							"    lodash.each(response, (item) => {",
							"        actual.push(item.id);",
							"    })",
							"    pm.expect(actual).to.eql(expected);",
							"",
							"    // pm.expect(response.find(el => el.id === 1)).to.exist;",
							"    // pm.expect(response.find(el => el.id === 2)).to.exist;",
							"    // pm.expect(response.find(el => el.id === 3)).to.exist;",
							"    // pm.expect(response.find(el => el.id === 4)).to.exist;",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{PASSWORD}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{USERNAME}}",
							"type": "string"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"operation\": \"sql\",\n    \"sql\": \"select * from data.fish\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{NODE1_HOST}}:{{NODE1_PORT}}",
					"protocol": "https",
					"host": [
						"{{NODE1_HOST}}"
					],
					"port": "{{NODE1_PORT}}"
				}
			},
			"response": []
		},
		{
			"name": "Delete table 'fish' node 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test('Check response message', () => {",
							"    const response = pm.response.json();",
							"    pm.expect(response.message).to.contain(`successfully deleted table 'data.fish'`);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{PASSWORD}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{USERNAME}}",
							"type": "string"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"operation\": \"drop_table\",\n    \"table\": \"fish\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{NODE1_HOST}}:{{NODE1_PORT}}",
					"protocol": "https",
					"host": [
						"{{NODE1_HOST}}"
					],
					"port": "{{NODE1_PORT}}"
				}
			},
			"response": []
		},
		{
			"name": "Delete table 'fish' node 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test('Check response message', () => {",
							"    const response = pm.response.json();",
							"    pm.expect(response.message).to.contain(`successfully deleted table 'data.fish'`);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{PASSWORD}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{USERNAME}}",
							"type": "string"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"operation\": \"drop_table\",\n    \"table\": \"fish\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{NODE2_HOST}}:{{NODE2_PORT}}",
					"protocol": "https",
					"host": [
						"{{NODE2_HOST}}"
					],
					"port": "{{NODE2_PORT}}"
				}
			},
			"response": []
		}
	]
}